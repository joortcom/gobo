#define GE_USE_THREADS

/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#if EIF_CHARACTER == EIF_CHARACTER_8
#define GE_ms(s,c) GE_ms8((s),(c))
#else
#define GE_ms(s,c) GE_ms32((s),(c))
#endif
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#define GE_WINDOWS
#include <windows.h>
#endif

/* See https://sourceforge.net/p/predef/wiki/OperatingSystems/ */
#if (defined(macintosh) || defined(Macintosh))
#define EIF_MAC 1
#define EIF_MACOSX 1
#define GE_MACOS
#endif
#if (defined(__APPLE__) && defined(__MACH__))
/* Apparently ISE does not define EIF_MASOSX for Mac OS X >=10.4 (see EXECUTION_ENVIRONMENT.available_cpu_count) */
#define EIF_MAC 1
#define GE_MACOS
#endif

#if (defined(VMS) || defined(__VMS))
#define EIF_VMS 1
#endif

#if (defined(__VXWORKS__) || defined(__vxworks))
#define EIF_VXWORKS 1
#endif

#define BYTEORDER 0x1234

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

#define EIF_OS_WINNT 	1
#define EIF_OS_LINUX 	2
#define EIF_OS_DARWIN 	4
#define EIF_OS_VXWORKS	11
#define EIF_OS_VMS	12

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
#define EIF_OS EIF_OS_LINUX
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_WINNT
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VMS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_DARWIN
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_OS
#define EIF_OS EIF_OS_VXWORKS
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
typedef unsigned __int64 uintptr_t;
#else
typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* SCOOP */
#ifdef GE_USE_SCOOP
typedef struct GE_scoop_processor_struct GE_scoop_processor;
#endif

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
#ifdef GE_USE_SCOOP
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_processor* scoop_processor;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_processor* scoop_processor; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; GE_scoop_processor* scoop_processor; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;
#else
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;
#endif

/* SCOOP */
typedef uint16_t EIF_SCP_PID; /* Processor ID */
#ifdef GE_USE_SCOOP
#define RTS_PID(o) (EIF_SCP_PID)(intptr_t)(((EIF_REFERENCE)(o))->scoop_processor)
#else
#define RTS_PID(o) (EIF_SCP_PID)0
#endif

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#define GE_max_int32 GE_int32(2147483647)
#if defined(__LCC__) || defined(__GNUC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* gcc and mingw-win64 warn that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

/* Posix threads */
#if !defined(EIF_WINDOWS)
#define GE_USE_POSIX_THREADS
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
#define OVERHEAD sizeof(EIF_ANY)
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C types used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_TYPES_H
#define GE_THREAD_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#define EIF_THREADS
#ifdef GE_USE_POSIX_THREADS
#define EIF_POSIX_THREADS
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS

#define EIF_THR_TYPE            pthread_t
#define EIF_CS_TYPE				pthread_mutex_t
#define EIF_MUTEX_TYPE          pthread_mutex_t
#define EIF_COND_TYPE			pthread_cond_t
#define EIF_SEM_TYPE			sem_t
#define EIF_RWL_TYPE			pthread_rwlock_t

#elif defined EIF_WINDOWS

#define EIF_THR_TYPE            HANDLE
#define EIF_CS_TYPE				CRITICAL_SECTION
#define EIF_MUTEX_TYPE          CRITICAL_SECTION
#define EIF_SEM_TYPE            HANDLE

typedef struct {
		/* Semaphore used to queue up threads waiting for the condition to become signaled. */
	EIF_SEM_TYPE* semaphore;
		/* Serialize access to fields of Current. */
	EIF_CS_TYPE* csection;
		/* Number of waiters. */
	unsigned long num_waiting;
		/* Number of already awoken. */
	unsigned long num_wake;
		/* Number of time we signaled/broadcasted for improving fairness.
		 * This ensures one thread won't steal wakeups from other threads in queue. */
	unsigned long generation;
} EIF_COND_TYPE;

typedef struct {
	EIF_MUTEX_TYPE* m; /* Internal monitor lock. */
	int rwlock; /* >0 = # readers, <0 = writer, 0 = none */
	EIF_COND_TYPE* readers_ok; /* Start waiting readers. */
	unsigned int waiting_writers; /* Number of waiting writers. */
	EIF_COND_TYPE* writers_ok; /* Start a waiting writer. */
} EIF_RWL_TYPE;

#endif

typedef struct {
	unsigned int priority;
	unsigned int stack_size;
} EIF_THR_ATTR_TYPE;

/* Struct for thread context. */
typedef struct GE_thread_context_struct GE_thread_context;
struct GE_thread_context_struct {
	EIF_THR_TYPE thread_id; /* Thread identifier for associated thread. */
	EIF_REFERENCE current; /* Eiffel root object. */
	void (*routine)(EIF_REFERENCE, EIF_INTEGER); /* Eiffel routine. */
	void (*set_terminated)(EIF_REFERENCE, EIF_BOOLEAN); /* Eiffel routine to set {THREAD}.terminated. */
	unsigned int initial_priority; /* Initial priority. */
	EIF_THR_TYPE last_thread_id; /* Last thread created from current thread. */
	volatile int n_children; /* Number of direct thread children. */
	EIF_MUTEX_TYPE* children_mutex; /* Mutex to wait for thread children. */
	EIF_COND_TYPE* children_cond; /* Condition variable to wait for thread children. */
	GE_thread_context* parent_context;	/* Context of parent thread, NULL if main thread. */
	int thread_exiting; /* Has current thread already called GE_thread_exit? */
	volatile int is_alive; /* Is current thread still alive? */
#ifdef GE_USE_SCOOP
	int is_scoop_processor; /* Is current thread a SCOOP processor? */
#endif
		/*
		 * The following may contain Eiffel objects.
		 * Keep a reference to them here so that the GC keeps them alive.
		 * Otherwise they are declared in GE_context, which might 
		 * malloced as "atomic" (i.e. containing no collectable objects)
		 * so that the SCOOP processor can be marked as not used even
		 * if it is still referenced from GE_context.
		*/
	EIF_REFERENCE exception_manager; /* Exception manager */
};

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
	void* wel_per_thread_data; /* WEL private data */
#endif
#ifdef GE_USE_SCOOP
	GE_scoop_processor* scoop_processor; /* SCOOP processor executing the current code */
#endif
};
#define TC GE_context

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(GE_context*, EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * If `i' is provided, then include it in the message displayed
 * in the console to make debugging easier when `obj' is Void.
 * Return `obj'.
 */
#define GE_void(obj) ((obj)?(obj):GE_check_void(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);
#ifdef GE_DEBUG
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void2((obj),(i)))
extern EIF_REFERENCE GE_check_void2(EIF_REFERENCE obj, EIF_INTEGER i);
#else
#define GE_void2(obj,i) ((obj)?(obj):GE_check_void(obj))
#endif

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class THREAD and related threading facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_THREAD_H
#define GE_THREAD_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef GE_USE_THREADS

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_POSIX_THREADS
#include <unistd.h>
#endif

#ifdef GE_USE_POSIX_THREADS
#	define EIF_TSD_VAL_TYPE        void*
#	define EIF_TSD_TYPE            pthread_key_t
#	define EIF_TSD_CREATE(key,msg) \
		if (pthread_key_create(&(key),NULL)) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (pthread_setspecific((key), (EIF_TSD_VAL_TYPE)(val))) \
			GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) (val = pthread_getspecific(key))
#	define EIF_TSD_GET(val_type,key,val,msg) \
		if (EIF_TSD_GET0(val_type,key,val) == (void*) 0) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) if (pthread_key_delete(key)) GE_raise_with_message(GE_EX_EXT, msg)
#elif defined EIF_WINDOWS
#	define EIF_TSD_VAL_TYPE        LPVOID
#	define EIF_TSD_TYPE            DWORD
#	define EIF_TSD_CREATE(key,msg) \
		if ((key=TlsAlloc())==TLS_OUT_OF_INDEXES) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_SET(key,val,msg) \
		if (!TlsSetValue((key),(EIF_TSD_VAL_TYPE)(val))) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_GET0(val_type,key,val) \
		val=(val_type) TlsGetValue(key)
#	define EIF_TSD_GET(val_type,key,val,msg) \
		EIF_TSD_GET0(val_type,key,val); \
		if (GetLastError() != NO_ERROR) GE_raise_with_message(GE_EX_EXT, msg)
#	define EIF_TSD_DESTROY(key,msg) \
		if (!TlsFree(key)) GE_raise_with_message(GE_EX_EXT, msg)
#endif

/* Thread priority levels. */
#define EIF_MIN_THR_PRIORITY			0L
#define EIF_BELOW_NORMAL_THR_PRIORITY	100L
#define EIF_DEFAULT_THR_PRIORITY		127L
#define EIF_ABOVE_NORMAL_THR_PRIORITY	154L
#define EIF_MAX_THR_PRIORITY			255L

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
typedef struct {
	EIF_POINTER* boolean_mutex;
	EIF_POINTER* character_8_mutex;
	EIF_POINTER* character_32_mutex;
	EIF_POINTER* integer_8_mutex;
	EIF_POINTER* integer_16_mutex;
	EIF_POINTER* integer_32_mutex;
	EIF_POINTER* integer_64_mutex;
	EIF_POINTER* natural_8_mutex;
	EIF_POINTER* natural_16_mutex;
	EIF_POINTER* natural_32_mutex;
	EIF_POINTER* natural_64_mutex;
	EIF_POINTER* pointer_mutex;
	EIF_POINTER* real_32_mutex;
	EIF_POINTER* real_64_mutex;
	EIF_POINTER* reference_mutex;
	EIF_POINTER* procedure_mutex;
} GE_once_mutexes;

/*
 * Mutexes used to protect the calls to once-per-process features.
 */
extern GE_once_mutexes* GE_process_once_mutexes;

/*
 * Create a new 'GE_once_mutexes' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_once_mutexes* GE_new_once_mutexes(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Keep track of the numbers of once-per-thread features.
 */
extern void GE_thread_onces_set_counts(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/* Global mutex to protect creation of once-per-object data. */
extern EIF_POINTER GE_once_per_object_data_mutex;

/*
 * Initialize data to handle threads.
 * To be called at the beginning of the main function
 * on the main thread.
 */
extern void GE_init_thread(GE_context* a_context);

/*
 * Create a new thread with attributes `attr' and execute
 * Eiffel routine `routine' on object `current'.
 */
extern void GE_thread_create_with_attr(EIF_REFERENCE current, void (*routine)(EIF_REFERENCE, EIF_INTEGER), void (*set_terminated)(EIF_REFERENCE,EIF_BOOLEAN), EIF_THR_ATTR_TYPE* attr, int is_scoop_processor);

/*
 * Execution context of current thread.
 */
extern GE_context* GE_thread_current_context(void);

/*
 * Thead ID of current thread.
 */
extern EIF_POINTER GE_thread_id(void);

/*
 * Thread ID of last thread created from current thread.
 */
extern EIF_POINTER GE_last_thread_created(void);

#ifdef EIF_WINDOWS
/*
 * Support for Windows GUI that requires that all GUI operations are performed in the same thread.
 * Allocate new structure of the given size `a_size', assign it to `wel_per_thread_data'.
 * Return newly allocated memory block. It will be freed automatically on thread termination.
 */
extern void* GE_thread_create_wel_per_thread_data(size_t a_size);
#endif

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated. The calling thread must be the
 * direct parent of the thread, or the function might loop indefinitely.
 */
extern void GE_thread_wait(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE));

/*
 * Waits until a child thread sets `terminated' from `obj' to True,
 * which means it is terminated, or reaching `a_timeout_ms'.
 * The calling thread must be the direct parent of the thread,
 * or the function might loop indefinitely.
 */
extern EIF_BOOLEAN GE_thread_wait_with_timeout(EIF_REFERENCE obj, EIF_BOOLEAN (*get_terminated)(EIF_REFERENCE), EIF_NATURAL_64 a_timeout_ms);

/*
 * Yields execution to other threads.
 */
extern void GE_thread_yield(void);

/*
 * The calling thread waits for all other children threads to terminate.
 */
extern void GE_thread_join_all(void);

/*
 * Function called to terminate a thread launched by Eiffel with `GE_thread_create_with_attr'.
 * This function must be called from the thread itself (not the parent).
 */
extern void GE_thread_exit(void);

/*
 * Default thread priority level.
 */
extern EIF_INTEGER GE_thread_default_priority(void);

/*
 * Minimum thread priority level.
 */
extern EIF_INTEGER GE_thread_min_priority(void);

/*
 * Maximum thread priority level.
 */
extern EIF_INTEGER GE_thread_max_priority(void);

/*
 * Create a new mutex.
 */
extern EIF_POINTER GE_mutex_create(void);

/*
 * Lock mutex.
 */
extern void GE_mutex_lock(EIF_POINTER a_mutex);

/*
 * Try to lock mutex. Return True on success.
 */
extern EIF_BOOLEAN GE_mutex_try_lock(EIF_POINTER a_mutex);

/*
 * Unlock mutex.
 */
extern void GE_mutex_unlock(EIF_POINTER a_mutex);

/*
 * Destroy and free all resources used by mutex.
 */
extern void GE_mutex_destroy(EIF_POINTER a_mutex);

/*
 * Create a new semaphore allowing `a_count' threads
 * to go into a critical section.
 */
extern EIF_POINTER GE_semaphore_create(EIF_INTEGER a_count);

/*
 * Decrement semaphore count, waiting if necessary
 * until that becomes possible.
 */
extern void GE_semaphore_wait(EIF_POINTER a_semaphore);

/*
 * Has client been successful in decrementing semaphore
 * count without waiting?
 */
extern EIF_BOOLEAN GE_semaphore_try_wait(EIF_POINTER a_semaphore);

/*
 * Increment semaphore count.
 */
extern void GE_semaphore_post(EIF_POINTER a_semaphore);

/*
 * Destroy and free all resources used by semaphore.
 */
extern void GE_semaphore_destroy(EIF_POINTER a_semaphore);

/*
 * Create a new condition variable.
 */
extern EIF_POINTER GE_condition_variable_create(void);

/*
 * Unblock all threads blocked on condition variable.
 */
extern void GE_condition_variable_broadcast(EIF_POINTER a_condition_variable);

/*
 * Unblock one thread blocked on condition variable.
 */
extern void GE_condition_variable_signal(EIF_POINTER a_condition_variable);

/*
 * Block calling thread on condition variable.
 */
extern void GE_condition_variable_wait(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex);

/*
 * Block calling thread on condition variable for at most `a_timeout' milliseconds.
 * Return 1 is we got the condition variable on time, otherwise return 0.
 */
extern EIF_INTEGER GE_condition_variable_wait_with_timeout(EIF_POINTER a_condition_variable, EIF_POINTER a_mutex, EIF_INTEGER a_timeout);

/*
 * Destroy and free all resources used by condition variable.
 */
extern void GE_condition_variable_destroy(EIF_POINTER a_condition_variable);

/*
 * Create a new read-write lock.
 */
extern EIF_POINTER GE_read_write_lock_create(void);

/*
 * Acquire a read lock. Multiple readers can go if there are no writer.
 */
extern void GE_read_write_lock_read_lock(EIF_POINTER a_read_write_lock);

/*
 * Acquire a write lock. Only a single write can proceed.
 */
extern void GE_read_write_lock_write_lock(EIF_POINTER a_read_write_lock);

/*
 * Unlock a read or write lock.
 */
extern void GE_read_write_lock_unlock(EIF_POINTER a_read_write_lock);

/*
 * Destroy and free all resources used by read-write lock.
 */
extern void GE_read_write_lock_destroy(EIF_POINTER a_read_write_lock);

#ifdef __cplusplus
}
#endif

#endif
#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[][2];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)
extern EIF_REFERENCE GE_generator_8_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_8_of_encoded_type(a_type) GE_generator_8_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);
extern EIF_REFERENCE GE_generating_type_8_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_of_reference_instance_of_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_context, a_type) GE_new_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' elements of reference type.
 * To create a SPECIAL of basic type, use class SPECIAL directly.
 */
extern EIF_REFERENCE GE_new_special_of_reference_instance_of_type_index(GE_context* a_context, EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_of_reference_instance_of_encoded_type(a_context, a_type, a_capacity) GE_new_special_of_reference_instance_of_type_index(a_context), GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_context, a_type) GE_new_instance_of_type_index((a_context), (a_type))
#define GE_new_tuple_instance_of_encoded_type(a_context, a_type) GE_new_tuple_instance_of_type_index((a_context), GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(GE_context* a_context, EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_8" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `c' 32-bit characters built from `s' by reading
 * groups of four bytes with little-endian byte order.
 */
extern EIF_REFERENCE GE_ms32_from_utf32le(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ISO 8859-1 string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2024, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

/* 
 * In the case of multithreaded code, gc.h should be included after the threads header file, 
 * and after defining the appropriate GC_XXXX_THREADS macro. (For 6.2alpha4 and later, 
 * simply defining GC_THREADS should suffice.) The header file gc.h must be included in files 
 * that use either GC or threads primitives, since threads primitives will be redefined to 
 * cooperate with the GC on many platforms. 
 * See: https://hboehm.info/gc/gcinterface.html
*/
#ifdef GE_USE_POSIX_THREADS
#include <pthread.h>
#include <semaphore.h>
#elif defined EIF_WINDOWS
#include <windows.h>
#include <process.h>
#endif

#define GC_IGNORE_WARN
#define GC_NOT_DLL
#define GC_THREADS
#define PARALLEL_MARK
#define THREAD_LOCAL_ALLOC
#define GC_ENABLE_SUSPEND_THREAD
#define LARGE_CONFIG
#define ALL_INTERIOR_POINTERS
#define ENABLE_DISCLAIM
#define GC_ATOMIC_UNCOLLECTABLE
#define GC_GCJ_SUPPORT
#define JAVA_FINALIZATION
#define NO_EXECUTE_PERMISSION
#define USE_MMAP
#define USE_MUNMAP

#if defined(GE_WINDOWS)
#	undef GC_NO_THREAD_DECLS
#	undef GC_NO_THREAD_REDIRECTS
#	define EMPTY_GETENV_RESULTS
#	define DONT_USE_USER32_DLL
#else
#	if !defined(GE_MACOS)
#		define GC_PTHREAD_START_STANDALONE
#	endif
#	ifndef _REENTRANT
#		define _REENTRANT
#	endif
#	define HANDLE_FORK
#endif

#if defined(__clang__) || defined(__GNUC__) || defined(__MINGW32__) || defined(__MINGW64__)
#	define GC_BUILTIN_ATOMIC
#endif

#if defined(__clang__)
#	define HAVE_DL_ITERATE_PHDR
#	define GC_REQUIRE_WCSDUP
#	define HAVE_DLADDR
#	define HAVE_SYS_TYPES_H
#	define HAVE_UNISTD_H
#	if defined(GE_MACOS)
#		define HAVE_PTHREAD_SETNAME_NP_WITHOUT_TID
#	elif !defined(GE_WINDOWS)
#		define HAVE_PTHREAD_SETNAME_NP_WITH_TID
#		define HAVE_PTHREAD_SIGMASK
#		define NO_GETCONTEXT
#	endif
#endif

#include "gc.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * GC initialization.
 */

#if !defined(GE_USE_BOEHM_GC)
#define GE_init_gc() /* do nothing */
#elif defined(GE_WINDOWS) || defined(GE_MACOS) || !defined(__clang__)
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
/*
* No incremenatal GC under Linux when compiled wtih zig/clang,
* because otherwise the programdoes not behave as expected.
*/
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads()
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc(size) GE_null(GE_unprotected_malloc(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) GE_unprotected_malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic(size) GE_null(GE_unprotected_malloc_atomic(size))

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc(nelem, elsize) GE_null(GE_unprotected_calloc((nelem), (elsize)))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic(nelem, elsize) GE_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_uncollectable(size) GE_null(GE_unprotected_malloc_uncollectable(size))

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_malloc_atomic_uncollectable(size) GE_null(GE_unprotected_malloc_atomic_uncollectable(size))
/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_uncollectable((nelem), (elsize)))


/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) GE_unprotected_calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(GE_unprotected_calloc_atomic_uncollectable((nelem), (elsize)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_realloc(p, size) GE_null(GE_unprotected_realloc((p), (size)))

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
#define GE_recalloc(p, old_nelem, new_nelem, elsize) GE_null(GE_unprotected_recalloc((p), (old_nelem), (new_nelem), (elsize)))

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Register dispose routine `disp' to be called on once-per-object `data' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose_once_per_object_data(void* data, void* disp); /* Call dispose routine `disp' on once-per-object data `data'. */
#define GE_register_dispose_once_per_object_data(data, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(data), (void (*) (void*, void*)) &GE_boehm_dispose_once_per_object_data, (void*)(disp), NULL, NULL)
#else /* No GC */
#define GE_register_dispose_once_per_object_data(data, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(TC* ac, T1 a1);
extern T0* GE_boxed_pointer1(TC* ac, T1* a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(TC* ac, T2 a1);
extern T0* GE_boxed_pointer2(TC* ac, T2* a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(TC* ac, T3 a1);
extern T0* GE_boxed_pointer3(TC* ac, T3* a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(TC* ac, T4 a1);
extern T0* GE_boxed_pointer4(TC* ac, T4* a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(TC* ac, T5 a1);
extern T0* GE_boxed_pointer5(TC* ac, T5* a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(TC* ac, T6 a1);
extern T0* GE_boxed_pointer6(TC* ac, T6* a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(TC* ac, T7 a1);
extern T0* GE_boxed_pointer7(TC* ac, T7* a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(TC* ac, T8 a1);
extern T0* GE_boxed_pointer8(TC* ac, T8* a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(TC* ac, T9 a1);
extern T0* GE_boxed_pointer9(TC* ac, T9* a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(TC* ac, T10 a1);
extern T0* GE_boxed_pointer10(TC* ac, T10* a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(TC* ac, T11 a1);
extern T0* GE_boxed_pointer11(TC* ac, T11* a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(TC* ac, T12 a1);
extern T0* GE_boxed_pointer12(TC* ac, T12* a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(TC* ac, T13 a1);
extern T0* GE_boxed_pointer13(TC* ac, T13* a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(TC* ac, T14 a1);
extern T0* GE_boxed_pointer14(TC* ac, T14* a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S20 T20;

/* ISE_EXCEPTION_MANAGER */
typedef struct S21 T21;

/* GEC */
typedef struct S25 T25;

/* CELL [detachable EXCEPTION] */
typedef struct S26 T26;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S27 T27;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S28 T28;

/* CELL [NO_MORE_MEMORY] */
typedef struct S29 T29;

/* C_STRING */
typedef struct S30 T30;

/* TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S31 T31;

/* KL_ARGUMENTS */
typedef struct S32 T32;

/* ARRAY [STRING_8] */
typedef struct S33 T33;

/* SPECIAL [STRING_8] */
typedef struct S34 T34;

/* KL_EXCEPTIONS */
typedef struct S35 T35;

/* EXCEPTIONS */
typedef struct S36 T36;

/* KL_STANDARD_FILES */
typedef struct S37 T37;

/* KL_STDERR_FILE */
typedef struct S38 T38;

/* UTF_CONVERTER */
typedef struct S39 T39;
extern T0* GE_boxed39(TC* ac, T39 a1);
extern T0* GE_boxed_pointer39(TC* ac, T39* a1);
typedef struct Sb39 Tb39;

/* ET_ERROR_HANDLER */
typedef struct S41 T41;

/* KL_TEXT_INPUT_FILE */
typedef struct S42 T42;

/* UT_GOBO_VARIABLES */
typedef struct S43 T43;

/* UT_ISE_VARIABLES */
typedef struct S44 T44;

/* AP_FLAG */
typedef struct S45 T45;

/* ET_SYSTEM */
typedef struct S46 T46;

/* AP_PARSER */
typedef struct S48 T48;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S49 T49;

/* AP_STRING_OPTION */
typedef struct S50 T50;

/* UT_VERSION */
typedef struct S52 T52;

/* AP_ENUMERATION_OPTION */
typedef struct S53 T53;

/* AP_BOOLEAN_OPTION */
typedef struct S54 T54;

/* AP_INTEGER_OPTION */
typedef struct S55 T55;

/* ET_NULL_ERROR_HANDLER */
typedef struct S59 T59;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S61 T61;

/* ET_ECF_ERROR_HANDLER */
typedef struct S62 T62;

/* ET_ECF_SYSTEM */
typedef struct S63 T63;

/* ET_ECF_TARGET */
typedef struct S64 T64;

/* ET_ECF_SETTINGS */
typedef struct S65 T65;

/* ET_ECF_CAPABILITIES */
typedef struct S66 T66;

/* ET_ECF_VARIABLES */
typedef struct S67 T67;

/* ET_DYNAMIC_SYSTEM */
typedef struct S68 T68;

/* ET_SYSTEM_PROCESSOR */
typedef struct S69 T69;

/* DT_DATE_TIME */
typedef struct S71 T71;

/* DS_HASH_SET [STRING_8] */
typedef struct S73 T73;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S74 T74;

/* ET_CLASS_TYPE */
typedef struct S76 T76;

/* ET_TOKEN_CONSTANTS */
typedef struct S77 T77;

/* ET_CLASS */
typedef struct S78 T78;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S79 T79;

/* UT_VERSION_NUMBER */
typedef struct S81 T81;

/* UT_MESSAGE */
typedef struct S83 T83;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S84 T84;

/* KL_STRING_ROUTINES */
typedef struct S85 T85;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S89 T89;

/* AP_ERROR */
typedef struct S90 T90;

/* ET_C_GENERATOR */
typedef struct S91 T91;

/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S93 T93;

/* KL_SHELL_COMMAND */
typedef struct S94 T94;

/* GECC */
typedef struct S95 T95;

/* KL_OPERATING_SYSTEM */
typedef struct S96 T96;

/* VOID_TARGET */
typedef struct S98 T98;

/* TYPE [VOID_TARGET] */
#define T99 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S100 T100;

/* TYPE [ROUTINE_FAILURE] */
#define T101 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S102 T102;

/* TYPE [OLD_VIOLATION] */
#define T103 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S104 T104;

/* INVARIANT_VIOLATION */
typedef struct S105 T105;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S106 T106;

/* IO_FAILURE */
typedef struct S107 T107;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S108 T108;

/* COM_FAILURE */
typedef struct S109 T109;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S110 T110;

/* PRECONDITION_VIOLATION */
typedef struct S112 T112;

/* POSTCONDITION_VIOLATION */
typedef struct S113 T113;

/* FLOATING_POINT_FAILURE */
typedef struct S114 T114;

/* CHECK_VIOLATION */
typedef struct S115 T115;

/* BAD_INSPECT_VALUE */
typedef struct S116 T116;

/* VARIANT_VIOLATION */
typedef struct S117 T117;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S118 T118;

/* RESCUE_FAILURE */
typedef struct S119 T119;

/* RESUMPTION_FAILURE */
typedef struct S120 T120;

/* CREATE_ON_DEFERRED */
typedef struct S121 T121;

/* EXTERNAL_FAILURE */
typedef struct S122 T122;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S123 T123;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S124 T124;

/* MISMATCH_FAILURE */
typedef struct S125 T125;

/* DEVELOPER_EXCEPTION */
typedef struct S126 T126;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S127 T127;

/* SERIALIZATION_FAILURE */
typedef struct S128 T128;

/* EXECUTION_ENVIRONMENT */
typedef struct S129 T129;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S130 T130;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S131 T131;

/* PRIMES */
typedef struct S132 T132;

/* SPECIAL [INTEGER_32] */
typedef struct S133 T133;

/* SPECIAL [BOOLEAN] */
typedef struct S134 T134;

/* ARGUMENTS_32 */
typedef struct S135 T135;

/* MUTEX */
typedef struct S138 T138;

/* UT_ERROR_HANDLER */
typedef struct S139 T139;

/* KL_STDOUT_FILE */
typedef struct S140 T140;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S142 T142;

/* MANAGED_POINTER */
typedef struct S144 T144;

/* FILE_INFO */
typedef struct S145 T145;

/* ST_WORD_WRAPPER */
typedef struct S146 T146;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S148 T148;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S149 T149;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S150 T150;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S151 T151;

/* AP_ERROR_HANDLER */
typedef struct S152 T152;

/* DS_LINKABLE [AP_OPTION] */
typedef struct S153 T153;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S154 T154;

/* DS_ARRAYED_LIST [detachable STRING_8] */
typedef struct S155 T155;

/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
typedef struct S156 T156;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S157 T157;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S158 T158;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S159 T159;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S162 T162;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S165 T165;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S166 T166;

/* ET_ECF_AST_FACTORY */
typedef struct S167 T167;

/* DS_CELL [detachable ET_ECF_SYSTEM] */
typedef struct S168 T168;

/* TUPLE [ET_ECF_TARGET] */
typedef struct S169 T169;

/* PROCEDURE [TUPLE [ET_ECF_TARGET]] */
typedef struct S170 T170;

/* TUPLE */
typedef struct S171 T171;

/* TUPLE [ET_ECF_SYSTEM_PARSER] */
typedef struct S172 T172;

/* XM_ELEMENT */
typedef struct S173 T173;

/* XM_POSITION_TABLE */
typedef struct S174 T174;

/* TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
typedef struct S175 T175;

/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
typedef struct S176 T176;

/* TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef struct S177 T177;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S179 T179;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S180 T180;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S181 T181;

/* XM_EIFFEL_PARSER */
typedef struct S183 T183;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S184 T184;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S187 T187;

/* ET_ECF_STATE */
typedef struct S188 T188;

/* ET_IDENTIFIER */
typedef struct S189 T189;

/* ET_ECF_SYSTEM_CONFIG */
typedef struct S190 T190;

/* ET_ECF_LIBRARY */
typedef struct S192 T192;

/* ET_ADAPTED_LIBRARIES */
typedef struct S193 T193;

/* TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S195 T195;

/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S196 T196;

/* XM_DOCUMENT */
typedef struct S197 T197;

/* ET_COMPRESSED_POSITION */
typedef struct S198 T198;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S200 T200;

/* XM_ATTRIBUTE */
typedef struct S201 T201;

/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef struct S203 T203;

/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
typedef struct S204 T204;

/* ET_ECF_TARGET_PARENT */
typedef struct S205 T205;

/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef struct S206 T206;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef struct S207 T207;

/* ET_ECF_TARGETS */
typedef struct S208 T208;

/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S209 T209;

/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S210 T210;

/* DS_CELL [detachable ET_ECF_LIBRARY] */
typedef struct S212 T212;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S213 T213;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef struct S214 T214;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S216 T216;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S217 T217;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S219 T219;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S220 T220;

/* ET_ECF_ERROR */
typedef struct S221 T221;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S222 T222;

/* TUPLE [STRING_8] */
typedef struct S223 T223;

/* FUNCTION [TUPLE [STRING_8], INTEGER_32] */
typedef struct S224 T224;

/* TUPLE [KL_STRING_ROUTINES] */
typedef struct S225 T225;

/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
typedef struct S227 T227;

/* ET_DYNAMIC_PRIMARY_TYPE */
typedef struct S229 T229;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S230 T230;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S231 T231;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef struct S232 T232;

/* TUPLE [ET_CLASS] */
typedef struct S233 T233;

/* PROCEDURE [TUPLE [ET_CLASS]] */
typedef struct S234 T234;

/* TUPLE [INTEGER_32] */
typedef struct S235 T235;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S236 T236;

/* TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S237 T237;

/* ET_DYNAMIC_FEATURE */
typedef struct S242 T242;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S246 T246;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S247 T247;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S248 T248;

/* ARRAY [ET_TYPE] */
typedef struct S250 T250;

/* SPECIAL [ET_TYPE] */
typedef struct S251 T251;

/* ET_EXTERNAL_FUNCTION */
typedef struct S259 T259;

/* ET_TUPLE_TYPE */
typedef struct S260 T260;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S261 T261;

/* ET_FORMAL_ARGUMENT */
typedef struct S262 T262;

/* ET_QUERY_LIST */
typedef struct S263 T263;

/* ET_PROCEDURE_LIST */
typedef struct S264 T264;

/* ET_SYSTEM_MULTIPROCESSOR */
typedef struct S265 T265;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S266 T266;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S267 T267;

/* TYPE [STRING_8] */
#define T268 EIF_TYPE_OBJ

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S269 T269;

/* ET_FEATURE_CHECKER */
typedef struct S270 T270;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S271 T271;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S272 T272;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S273 T273;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S274 T274;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S275 T275;

/* ET_TYPE_CHECKER */
typedef struct S277 T277;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S280 T280;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S281 T281;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S282 T282;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S283 T283;

/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S284 T284;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S285 T285;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S286 T286;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S287 T287;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S288 T288;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef struct S289 T289;

/* ET_ITERATION_ITEM_SCOPE */
typedef struct S290 T290;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S291 T291;

/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
typedef struct S292 T292;

/* ET_ATTACHMENT_SCOPE */
typedef struct S293 T293;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S294 T294;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S295 T295;

/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S296 T296;

/* DS_ARRAYED_LIST [ET_NOTE_TERM] */
typedef struct S297 T297;

/* ET_CLIENT_LIST */
typedef struct S298 T298;

/* ET_CLIENT */
typedef struct S299 T299;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S300 T300;

/* ET_ADAPTED_BASE_CLASS_CHECKER */
typedef struct S301 T301;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S303 T303;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S304 T304;

/* ET_PRECONDITIONS */
typedef struct S305 T305;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S310 T310;

/* ET_FEATURE_LIST */
typedef struct S313 T313;

/* ET_UNKNOWN_GROUP */
typedef struct S316 T316;

/* ET_BASE_TYPE_LIST */
typedef struct S318 T318;

/* ET_KEYWORD */
typedef struct S319 T319;

/* ET_CLASS_CODES */
typedef struct S320 T320;

/* RX_BYTE_CODE */
typedef struct S322 T322;

/* RX_CHARACTER_SET */
typedef struct S323 T323;

/* RX_CASE_MAPPING */
typedef struct S324 T324;

/* UC_UNICODE_ROUTINES */
typedef struct S326 T326;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S327 T327;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S328 T328;

/* UC_STRING */
typedef struct S329 T329;

/* UC_UTF8_ROUTINES */
typedef struct S330 T330;

/* ET_INLINE_SEPARATE_ARGUMENTS */
typedef struct S332 T332;

/* ET_COMPOUND */
typedef struct S333 T333;

/* ET_RESULT */
typedef struct S334 T334;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S335 T335;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S336 T336;

/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S337 T337;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S338 T338;

/* DS_ARRAYED_LIST [BOOLEAN] */
typedef struct S339 T339;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S340 T340;

/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S341 T341;

/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S342 T342;

/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S343 T343;

/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S344 T344;

/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S345 T345;

/* DS_ARRAYED_LIST [ET_RESULT] */
typedef struct S346 T346;

/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
typedef struct S347 T347;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S348 T348;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S349 T349;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S350 T350;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S351 T351;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef struct S352 T352;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S353 T353;

/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S354 T354;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S355 T355;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S356 T356;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S357 T357;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S358 T358;

/* ET_CURRENT */
typedef struct S359 T359;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S360 T360;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S361 T361;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S363 T363;

/* ET_INLINE_SEPARATE_ARGUMENT */
typedef struct S364 T364;

/* ET_INLINE_SEPARATE_INSTRUCTION */
typedef struct S367 T367;

/* ET_ASSIGNMENT */
typedef struct S368 T368;

/* ET_MANIFEST_TUPLE */
typedef struct S370 T370;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
typedef struct S371 T371;

/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
typedef struct S373 T373;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S374 T374;

/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
typedef struct S375 T375;

/* ARRAY [INTEGER_32] */
typedef struct S376 T376;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S377 T377;

/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef struct S378 T378;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S379 T379;

/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S380 T380;

/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S381 T381;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S382 T382;

/* DS_HASH_SET [ET_DYNAMIC_FEATURE] */
typedef struct S383 T383;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S384 T384;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S385 T385;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S386 T386;

/* DS_STRING_HASH_TABLE */
typedef struct S387 T387;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S388 T388;

/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
typedef struct S389 T389;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S390 T390;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S391 T391;

/* ET_DYNAMIC_EQUALITY_TYPES */
typedef struct S392 T392;

/* ET_OBJECT_TEST */
typedef struct S394 T394;

/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
typedef struct S395 T395;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S396 T396;

/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S399 T399;

/* ET_DYNAMIC_SECONDARY_TYPE */
typedef struct S400 T400;

/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
typedef struct S401 T401;

/* ET_CREATE_EXPRESSION */
typedef struct S405 T405;

/* ET_QUALIFIED_CALL */
typedef struct S406 T406;

/* KL_DIRECTORY */
typedef struct S410 T410;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S411 T411;

/* DS_QUICK_SORTER [STRING_8] */
typedef struct S412 T412;

/* UC_STRING_COMPARATOR */
typedef struct S413 T413;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S415 T415;

/* ET_DYNAMIC_INLINED_EXPRESSION */
typedef struct S423 T423;

/* ET_DYNAMIC_CALL_CONTEXT */
typedef struct S424 T424;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S425 T425;

/* PROCEDURE [TUPLE] */
typedef struct S427 T427;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S428 T428;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S429 T429;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S430 T430;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S431 T431;

/* UT_INTEGER_FORMATTER */
typedef struct S432 T432;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S437 T437;

/* TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S438 T438;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S442 T442;

/* ET_ATTRIBUTE */
typedef struct S443 T443;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S444 T444;

/* ET_ITERATION_COMPONENT_LIST */
typedef struct S447 T447;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
typedef struct S449 T449;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
typedef struct S450 T450;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S451 T451;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S453 T453;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S454 T454;

/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S457 T457;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S458 T458;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S459 T459;

/* NATIVE_STRING */
typedef struct S462 T462;

/* TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
typedef struct S463 T463;

/* WORKER_THREAD */
typedef struct S464 T464;

/* PATH */
typedef struct S466 T466;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S467 T467;

/* STD_FILES */
typedef struct S470 T470;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S471 T471;

/* DS_CELL [detachable ET_ECF_CONFIG] */
typedef struct S475 T475;

/* TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
typedef struct S477 T477;

/* ET_ECF_OPTIONS */
typedef struct S479 T479;

/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
typedef struct S480 T480;

/* XM_NAMESPACE */
typedef struct S481 T481;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S482 T482;

/* ET_ECF_REDIRECTION_CONFIG */
typedef struct S484 T484;

/* ET_CLUSTERS */
typedef struct S485 T485;

/* ET_CLASS_NAME_TESTER */
typedef struct S486 T486;

/* ET_PARENT */
typedef struct S488 T488;

/* ET_PARENT_LIST */
typedef struct S489 T489;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S490 T490;

/* ET_MASTER_CLASS */
typedef struct S491 T491;

/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
typedef struct S492 T492;

/* ET_RENAME_LIST */
typedef struct S493 T493;

/* ET_EXPORT_LIST */
typedef struct S494 T494;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S495 T495;

/* ET_NONE_GROUP */
typedef struct S498 T498;

/* ET_LIKE_CURRENT */
typedef struct S499 T499;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S500 T500;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S501 T501;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S502 T502;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S503 T503;

/* DT_SYSTEM_CLOCK */
typedef struct S504 T504;

/* ET_EIFFEL_PREPARSER */
typedef struct S505 T505;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S506 T506;

/* ET_EIFFEL_PARSER */
typedef struct S507 T507;

/* ET_PROVIDER_CHECKER */
typedef struct S508 T508;

/* ET_ANCESTOR_BUILDER */
typedef struct S509 T509;

/* ET_FEATURE_FLATTENER */
typedef struct S510 T510;

/* ET_INTERFACE_CHECKER */
typedef struct S511 T511;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S512 T512;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S513 T513;

/* TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S514 T514;

/* ET_AST_NULL_PROCESSOR */
typedef struct S515 T515;

/* ET_AST_FACTORY */
typedef struct S516 T516;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S518 T518;

/* DT_DATE_TIME_DURATION */
typedef struct S519 T519;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S520 T520;

/* ET_DEFERRED_PROCEDURE */
typedef struct S521 T521;

/* KL_PLATFORM */
typedef struct S523 T523;

/* ET_DO_PROCEDURE */
typedef struct S524 T524;

/* UT_CONFIG_PARSER */
typedef struct S525 T525;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S526 T526;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S529 T529;

/* ET_OBJECT_TEST_LIST */
typedef struct S530 T530;

/* ET_DO_FUNCTION */
typedef struct S531 T531;

/* CELL [INTEGER_32] */
typedef struct S532 T532;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S533 T533;

/* KL_ANY_ROUTINES */
typedef struct S534 T534;

/* KL_PATHNAME */
typedef struct S536 T536;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S537 T537;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S538 T538;

/* SPECIAL [NATURAL_8] */
typedef struct S539 T539;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S540 T540;
extern T0* GE_boxed540(TC* ac, T540 a1);
extern T0* GE_boxed_pointer540(TC* ac, T540* a1);
typedef struct Sb540 Tb540;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S541 T541;

/* SPECIAL [AP_OPTION] */
typedef struct S543 T543;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S544 T544;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S545 T545;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S546 T546;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S547 T547;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S548 T548;

/* SPECIAL [detachable STRING_8] */
typedef struct S549 T549;

/* KL_SPECIAL_ROUTINES [detachable STRING_8] */
typedef struct S550 T550;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S551 T551;

/* DS_LINKABLE [STRING_8] */
typedef struct S552 T552;

/* DS_LINKABLE [BOOLEAN] */
typedef struct S553 T553;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S554 T554;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S555 T555;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S556 T556;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S558 T558;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S559 T559;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S562 T562;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S563 T563;

/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S567 T567;

/* XM_EIFFEL_SCANNER */
typedef struct S568 T568;

/* XM_DEFAULT_POSITION */
typedef struct S569 T569;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S571 T571;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S572 T572;

/* XM_CALLBACKS_NULL */
typedef struct S573 T573;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S574 T574;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S576 T576;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S578 T578;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S579 T579;

/* SPECIAL [detachable ANY] */
typedef struct S580 T580;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S581 T581;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S582 T582;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S584 T584;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S585 T585;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S586 T586;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S587 T587;

/* XM_DTD_EXTERNAL_ID */
typedef struct S588 T588;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S590 T590;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S591 T591;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S592 T592;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S593 T593;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S594 T594;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S595 T595;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S596 T596;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S597 T597;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S598 T598;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S599 T599;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S600 T600;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S601 T601;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S602 T602;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S603 T603;

/* XM_EIFFEL_DECLARATION */
typedef struct S604 T604;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S605 T605;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S608 T608;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S609 T609;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S611 T611;

/* XM_NAMESPACE_RESOLVER */
typedef struct S612 T612;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S613 T613;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S614 T614;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S615 T615;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S616 T616;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S617 T617;

/* SPECIAL [ET_ECF_SYSTEM_CONFIG] */
typedef struct S620 T620;

/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
typedef struct S622 T622;

/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
typedef struct S623 T623;

/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
typedef struct S624 T624;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S625 T625;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S627 T627;

/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S629 T629;

/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef struct S630 T630;

/* SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef struct S631 T631;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S632 T632;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S633 T633;

/* ET_DOTNET_ASSEMBLY */
typedef struct S634 T634;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S638 T638;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S639 T639;

/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
typedef struct S640 T640;

/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef struct S641 T641;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S642 T642;

/* ET_FEATURE_IDS */
typedef struct S643 T643;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S644 T644;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S645 T645;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S648 T648;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S649 T649;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S650 T650;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S651 T651;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S652 T652;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
typedef struct S654 T654;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef struct S655 T655;

/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef struct S656 T656;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S660 T660;

/* ET_SYMBOL */
typedef struct S661 T661;

/* ET_BRACKET_SYMBOL */
typedef struct S662 T662;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S664 T664;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S665 T665;

/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
typedef struct S666 T666;

/* TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S667 T667;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S670 T670;

/* KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S671 T671;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S673 T673;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S675 T675;

/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S677 T677;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S678 T678;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S680 T680;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S681 T681;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S682 T682;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S683 T683;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S684 T684;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S685 T685;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S686 T686;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S687 T687;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S688 T688;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S689 T689;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S690 T690;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S691 T691;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S692 T692;

/* TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
typedef struct S693 T693;

/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S694 T694;

/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
typedef struct S695 T695;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S696 T696;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S697 T697;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S698 T698;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S699 T699;

/* ET_NAMED_OBJECT_TEST */
typedef struct S702 T702;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S703 T703;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S704 T704;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S705 T705;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
typedef struct S706 T706;

/* SPECIAL [ET_ITERATION_COMPONENT] */
typedef struct S707 T707;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
typedef struct S709 T709;

/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
typedef struct S710 T710;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S712 T712;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S713 T713;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S714 T714;

/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S715 T715;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S717 T717;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S718 T718;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S719 T719;

/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S720 T720;

/* SPECIAL [ET_ASSERTIONS] */
typedef struct S721 T721;

/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
typedef struct S724 T724;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S725 T725;

/* SPECIAL [ET_FEATURE] */
typedef struct S726 T726;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
typedef struct S727 T727;

/* SPECIAL [ET_NOTE_TERM] */
typedef struct S729 T729;

/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
typedef struct S730 T730;

/* SPECIAL [ET_CLIENT_ITEM] */
typedef struct S731 T731;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
typedef struct S732 T732;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S733 T733;

/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S734 T734;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
typedef struct S735 T735;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S736 T736;

/* SPECIAL [NATURAL_32] */
typedef struct S737 T737;

/* DS_ARRAYED_LIST [RX_CHARACTER_SET] */
typedef struct S738 T738;

/* KL_SPECIAL_ROUTINES [NATURAL_32] */
typedef struct S739 T739;

/* SPECIAL [NATURAL_64] */
typedef struct S740 T740;

/* DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
typedef struct S741 T741;

/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
typedef struct S742 T742;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S743 T743;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S744 T744;

/* KL_INTEGER_ROUTINES */
typedef struct S745 T745;

/* UC_UTF8_STRING */
typedef struct S748 T748;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S751 T751;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S752 T752;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S754 T754;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S755 T755;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S756 T756;

/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S758 T758;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S759 T759;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S760 T760;

/* DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
typedef struct S762 T762;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S763 T763;

/* ET_EQUALITY_EXPRESSION */
typedef struct S764 T764;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S765 T765;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S766 T766;

/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S767 T767;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S768 T768;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
typedef struct S769 T769;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S770 T770;

/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S771 T771;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
typedef struct S772 T772;

/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S773 T773;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S774 T774;

/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S775 T775;

/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
typedef struct S776 T776;

/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S777 T777;

/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S778 T778;

/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S779 T779;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S780 T780;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S781 T781;

/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S782 T782;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S783 T783;

/* SPECIAL [ET_RESULT] */
typedef struct S784 T784;

/* DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
typedef struct S785 T785;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S786 T786;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S787 T787;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S788 T788;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S789 T789;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S790 T790;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S791 T791;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
typedef struct S792 T792;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S793 T793;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S795 T795;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S796 T796;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S797 T797;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S798 T798;

/* TYPE [INTEGER_32] */
#define T799 EIF_TYPE_OBJ

/* SPECIAL [ET_AGENT] */
typedef struct S801 T801;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S802 T802;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S803 T803;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S804 T804;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S806 T806;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S807 T807;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S808 T808;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S809 T809;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
typedef struct S810 T810;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S811 T811;

/* SPECIAL [ET_CONSTANT] */
typedef struct S812 T812;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S814 T814;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
typedef struct S815 T815;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S816 T816;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S818 T818;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S819 T819;

/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S821 T821;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S822 T822;

/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S823 T823;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S824 T824;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
typedef struct S825 T825;

/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S826 T826;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S827 T827;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
typedef struct S828 T828;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S829 T829;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S830 T830;

/* TYPE [ET_DYNAMIC_FEATURE] */
#define T832 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S833 T833;

/* TYPED_POINTER [ANY] */
typedef struct S836 T836;
extern T0* GE_boxed836(TC* ac, T836 a1);
extern T0* GE_boxed_pointer836(TC* ac, T836* a1);
typedef struct Sb836 Tb836;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S837 T837;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S838 T838;

/* ARRAY [BOOLEAN] */
typedef struct S839 T839;

/* SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S843 T843;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S844 T844;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
typedef struct S845 T845;

/* THREAD_ATTRIBUTES */
typedef struct S846 T846;

/* CELL [BOOLEAN] */
typedef struct S847 T847;

/* CHARACTER_PROPERTY */
typedef struct S849 T849;

/* ET_SYSTEM_ERROR */
typedef struct S850 T850;

/* ET_INTERNAL_ERROR */
typedef struct S851 T851;

/* ET_VALIDITY_ERROR */
typedef struct S852 T852;

/* ET_ECF_NOTE_ELEMENT */
typedef struct S853 T853;

/* ET_ECF_CLUSTERS */
typedef struct S854 T854;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S855 T855;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S856 T856;

/* ET_ECF_FILE_RULES */
typedef struct S857 T857;

/* ET_ECF_NAMESPACES */
typedef struct S858 T858;

/* ET_ECF_EXTERNAL_CFLAGS */
typedef struct S859 T859;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S860 T860;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S861 T861;

/* ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef struct S862 T862;

/* ET_ECF_EXTERNAL_MAKES */
typedef struct S863 T863;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S864 T864;

/* ET_ECF_EXTERNAL_RESOURCES */
typedef struct S865 T865;

/* DS_ARRAYED_LIST [ET_ECF_ACTION] */
typedef struct S866 T866;

/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef struct S867 T867;

/* ET_ECF_VERSION */
typedef struct S869 T869;

/* ET_ECF_CLUSTER */
typedef struct S870 T870;

/* ET_ECF_NAMESPACE */
typedef struct S871 T871;

/* ET_ECF_EXTERNAL_CFLAG */
typedef struct S872 T872;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S873 T873;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S874 T874;

/* ET_ECF_EXTERNAL_LINKER_FLAG */
typedef struct S875 T875;

/* ET_ECF_EXTERNAL_MAKE */
typedef struct S876 T876;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S877 T877;

/* ET_ECF_EXTERNAL_RESOURCE */
typedef struct S878 T878;

/* ET_ECF_FILE_RULE */
typedef struct S879 T879;

/* ET_ECF_ACTION */
typedef struct S880 T880;

/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S881 T881;

/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
typedef struct S882 T882;

/* TUPLE [ET_ECF_OPTIONS] */
typedef struct S883 T883;

/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
typedef struct S884 T884;

/* ET_ECF_ROOT_CLASS */
typedef struct S885 T885;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S886 T886;

/* ET_ECF_ORED_CONDITIONS */
typedef struct S887 T887;

/* ET_ECF_ANDED_CONDITIONS */
typedef struct S888 T888;

/* ET_ECF_VISIBLE_CLASS */
typedef struct S889 T889;

/* ET_ECF_BUILD_CONDITION */
typedef struct S891 T891;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S892 T892;

/* ET_ECF_VOID_SAFETY_CONDITION */
typedef struct S893 T893;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S894 T894;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S895 T895;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S896 T896;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S897 T897;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S899 T899;

/* ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef struct S900 T900;

/* UT_COUNTER */
typedef struct S902 T902;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S903 T903;

/* TUPLE [UT_COUNTER] */
typedef struct S904 T904;

/* TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
typedef struct S905 T905;

/* TUPLE [ET_UNIVERSE] */
typedef struct S906 T906;

/* PROCEDURE [TUPLE [ET_UNIVERSE]] */
typedef struct S907 T907;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
typedef struct S908 T908;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S909 T909;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S911 T911;

/* TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S912 T912;

/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S913 T913;

/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S914 T914;

/* TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S915 T915;

/* TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S916 T916;

/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S917 T917;

/* TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S918 T918;

/* TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S919 T919;

/* TUPLE [ET_SYSTEM_PROCESSOR] */
typedef struct S920 T920;

/* ET_LIBRARY */
typedef struct S921 T921;

/* TUPLE [ET_LIBRARY] */
typedef struct S922 T922;

/* PROCEDURE [TUPLE [ET_LIBRARY]] */
typedef struct S923 T923;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S924 T924;

/* TUPLE [ET_CLUSTER] */
typedef struct S926 T926;

/* PROCEDURE [TUPLE [ET_CLUSTER]] */
typedef struct S927 T927;

/* TUPLE [ET_ECF_SYSTEM] */
typedef struct S928 T928;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S929 T929;

/* TUPLE [ET_AST_PROCESSOR] */
typedef struct S930 T930;

/* TUPLE [ET_MASTER_CLASS] */
typedef struct S931 T931;

/* PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
typedef struct S932 T932;

/* TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S933 T933;

/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S934 T934;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S935 T935;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S936 T936;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S937 T937;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S938 T938;

/* PREDICATE [TUPLE [ET_CLASS]] */
typedef struct S939 T939;

/* TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S941 T941;

/* TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S942 T942;

/* TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S943 T943;

/* TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S944 T944;

/* TUPLE [BOOLEAN] */
typedef struct S945 T945;

/* TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S946 T946;

/* TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
typedef struct S949 T949;

/* TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S953 T953;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
typedef struct S954 T954;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S955 T955;

/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S957 T957;

/* ET_FORMAL_PARAMETER */
typedef struct S958 T958;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S959 T959;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S960 T960;
extern T0* GE_boxed960(TC* ac, T960 a1);
extern T0* GE_boxed_pointer960(TC* ac, T960* a1);
typedef struct Sb960 Tb960;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S961 T961;
extern T0* GE_boxed961(TC* ac, T961 a1);
extern T0* GE_boxed_pointer961(TC* ac, T961* a1);
typedef struct Sb961 Tb961;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S962 T962;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S964 T964;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S966 T966;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S967 T967;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S968 T968;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S969 T969;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S970 T970;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S971 T971;

/* TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S972 T972;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S973 T973;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S974 T974;

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S975 T975;

/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
typedef struct S977 T977;

/* SPECIAL [ET_QUERY] */
typedef struct S978 T978;

/* ET_ALIAS_NAME_LIST */
typedef struct S979 T979;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S980 T980;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S981 T981;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S982 T982;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S983 T983;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S986 T986;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S987 T987;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S992 T992;

/* CONSOLE */
typedef struct S993 T993;

/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
typedef struct S994 T994;

/* SPECIAL [ET_ECF_NOTE_ELEMENT] */
typedef struct S995 T995;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
typedef struct S996 T996;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S997 T997;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S999 T999;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S1000 T1000;

/* ET_BRACED_TYPE_LIST */
typedef struct S1002 T1002;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S1003 T1003;

/* C_DATE */
typedef struct S1004 T1004;

/* YY_FILE_BUFFER */
typedef struct S1005 T1005;

/* KL_STDIN_FILE */
typedef struct S1006 T1006;

/* YY_BUFFER */
typedef struct S1007 T1007;

/* YY_UNICODE_FILE_BUFFER */
typedef struct S1011 T1011;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S1012 T1012;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1013 T1013;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1014 T1014;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S1015 T1015;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S1016 T1016;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1017 T1017;

/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
typedef struct S1018 T1018;

/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1019 T1019;

/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1020 T1020;

/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1021 T1021;

/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1022 T1022;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S1023 T1023;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1024 T1024;

/* DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S1025 T1025;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S1026 T1026;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S1027 T1027;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S1028 T1028;

/* ET_AGENT_KEYWORD */
typedef struct S1029 T1029;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S1030 T1030;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S1031 T1031;

/* ET_PRECURSOR_KEYWORD */
typedef struct S1032 T1032;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S1033 T1033;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S1034 T1034;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S1035 T1035;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S1036 T1036;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S1037 T1037;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S1038 T1038;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S1040 T1040;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S1041 T1041;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S1043 T1043;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S1044 T1044;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S1046 T1046;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S1047 T1047;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S1048 T1048;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S1049 T1049;

/* ET_FREE_OPERATOR */
typedef struct S1050 T1050;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S1051 T1051;

/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
typedef struct S1052 T1052;

/* SPECIAL [detachable ET_IDENTIFIER] */
typedef struct S1053 T1053;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S1054 T1054;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S1056 T1056;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S1057 T1057;

/* ET_KEYWORD_OPERATOR */
typedef struct S1058 T1058;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S1059 T1059;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S1060 T1060;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S1061 T1061;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S1062 T1062;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S1064 T1064;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S1065 T1065;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S1066 T1066;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S1067 T1067;

/* ET_RETRY_INSTRUCTION */
typedef struct S1068 T1068;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S1069 T1069;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S1070 T1070;

/* ET_SYMBOL_OPERATOR */
typedef struct S1071 T1071;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S1072 T1072;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S1073 T1073;

/* ET_VOID */
typedef struct S1074 T1074;

/* SPECIAL [detachable ET_VOID] */
typedef struct S1075 T1075;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S1076 T1076;

/* ET_SEMICOLON_SYMBOL */
typedef struct S1077 T1077;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S1078 T1078;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S1079 T1079;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S1080 T1080;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S1081 T1081;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S1082 T1082;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S1083 T1083;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S1084 T1084;

/* ET_ACROSS_EXPRESSION */
typedef struct S1085 T1085;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S1086 T1086;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S1087 T1087;

/* ET_ACROSS_INSTRUCTION */
typedef struct S1088 T1088;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S1089 T1089;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1090 T1090;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1091 T1091;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1092 T1092;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1093 T1093;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1094 T1094;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1095 T1095;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1096 T1096;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1097 T1097;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1098 T1098;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1100 T1100;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1101 T1101;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S1102 T1102;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1103 T1103;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S1104 T1104;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S1105 T1105;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S1106 T1106;

/* ET_ALIAS_NAME */
typedef struct S1107 T1107;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S1108 T1108;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
typedef struct S1109 T1109;

/* SPECIAL [detachable ET_ALIAS_NAME_LIST] */
typedef struct S1110 T1110;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S1111 T1111;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S1113 T1113;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S1114 T1114;

/* ET_BRACKET_EXPRESSION */
typedef struct S1115 T1115;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S1116 T1116;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S1117 T1117;

/* ET_CALL_AGENT */
typedef struct S1118 T1118;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S1119 T1119;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1120 T1120;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1121 T1121;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S1122 T1122;

/* ET_CHECK_INSTRUCTION */
typedef struct S1123 T1123;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S1124 T1124;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S1125 T1125;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S1127 T1127;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S1128 T1128;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S1130 T1130;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S1131 T1131;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S1133 T1133;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S1134 T1134;

/* ET_CHOICE_LIST */
typedef struct S1135 T1135;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S1136 T1136;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S1137 T1137;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S1138 T1138;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S1139 T1139;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S1140 T1140;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S1141 T1141;

/* ET_CLIENTS */
typedef struct S1142 T1142;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S1143 T1143;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S1144 T1144;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S1145 T1145;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S1146 T1146;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S1148 T1148;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S1149 T1149;

/* SPECIAL [detachable ET_CONSTANT] */
typedef struct S1150 T1150;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1151 T1151;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1153 T1153;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1154 T1154;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S1155 T1155;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1156 T1156;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1157 T1157;

/* ET_CONSTRAINT_CREATOR */
typedef struct S1158 T1158;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1159 T1159;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S1160 T1160;

/* ET_CONSTRAINT_RENAME_LIST */
typedef struct S1161 T1161;

/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
typedef struct S1162 T1162;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1163 T1163;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1165 T1165;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1166 T1166;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1168 T1168;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1169 T1169;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1171 T1171;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1172 T1172;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S1173 T1173;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1174 T1174;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1175 T1175;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1176 T1176;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef struct S1177 T1177;

/* ET_CREATION_REGION */
typedef struct S1178 T1178;

/* SPECIAL [detachable ET_CREATION_REGION] */
typedef struct S1179 T1179;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1180 T1180;

/* ET_CREATOR */
typedef struct S1181 T1181;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S1182 T1182;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1183 T1183;

/* ET_CREATOR_LIST */
typedef struct S1184 T1184;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1185 T1185;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1186 T1186;

/* ET_DEBUG_INSTRUCTION */
typedef struct S1187 T1187;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1188 T1188;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1189 T1189;

/* ET_ELSEIF_EXPRESSION */
typedef struct S1190 T1190;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S1191 T1191;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1192 T1192;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef struct S1193 T1193;

/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S1194 T1194;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1195 T1195;

/* ET_ELSEIF_PART */
typedef struct S1196 T1196;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1197 T1197;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1198 T1198;

/* ET_ELSEIF_PART_LIST */
typedef struct S1199 T1199;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1200 T1200;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1201 T1201;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S1203 T1203;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1204 T1204;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1205 T1205;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S1206 T1206;

/* SPECIAL [detachable ET_EXPRESSION] */
typedef struct S1207 T1207;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S1208 T1208;

/* SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S1209 T1209;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1210 T1210;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1211 T1211;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1212 T1212;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1214 T1214;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1215 T1215;

/* ET_FEATURE_CLAUSE */
typedef struct S1216 T1216;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1217 T1217;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1218 T1218;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S1219 T1219;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1220 T1220;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1221 T1221;

/* ET_FEATURE_EXPORT */
typedef struct S1222 T1222;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1223 T1223;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1224 T1224;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1225 T1225;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1226 T1226;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1228 T1228;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1229 T1229;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1230 T1230;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1231 T1231;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1233 T1233;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1234 T1234;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1235 T1235;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1236 T1236;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1237 T1237;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1238 T1238;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1240 T1240;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1241 T1241;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1242 T1242;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S1243 T1243;

/* ET_IF_EXPRESSION */
typedef struct S1244 T1244;

/* SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S1245 T1245;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1246 T1246;

/* ET_IF_INSTRUCTION */
typedef struct S1247 T1247;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1248 T1248;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S1249 T1249;

/* SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S1250 T1250;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1251 T1251;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1252 T1252;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S1253 T1253;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
typedef struct S1254 T1254;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef struct S1255 T1255;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
typedef struct S1256 T1256;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef struct S1257 T1257;

/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
typedef struct S1258 T1258;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
typedef struct S1259 T1259;

/* ET_INSPECT_EXPRESSION */
typedef struct S1260 T1260;

/* SPECIAL [detachable ET_INSPECT_EXPRESSION] */
typedef struct S1261 T1261;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1262 T1262;

/* ET_INSPECT_INSTRUCTION */
typedef struct S1263 T1263;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1264 T1264;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1265 T1265;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1266 T1266;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1267 T1267;

/* ET_INVARIANTS */
typedef struct S1268 T1268;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1269 T1269;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1270 T1270;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1271 T1271;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1272 T1272;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1274 T1274;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1275 T1275;

/* ET_LOCAL_VARIABLE */
typedef struct S1276 T1276;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1277 T1277;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1278 T1278;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1280 T1280;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1281 T1281;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1282 T1282;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1283 T1283;

/* ET_LOOP_INVARIANTS */
typedef struct S1284 T1284;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1285 T1285;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1286 T1286;

/* ET_MANIFEST_ARRAY */
typedef struct S1287 T1287;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1288 T1288;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1289 T1289;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1291 T1291;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1292 T1292;

/* ET_MANIFEST_STRING_LIST */
typedef struct S1293 T1293;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1294 T1294;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1295 T1295;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1296 T1296;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
typedef struct S1297 T1297;

/* ET_NOTE_LIST */
typedef struct S1298 T1298;

/* SPECIAL [detachable ET_NOTE_LIST] */
typedef struct S1299 T1299;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
typedef struct S1300 T1300;

/* SPECIAL [detachable ET_NOTE_ITEM] */
typedef struct S1302 T1302;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
typedef struct S1303 T1303;

/* SPECIAL [detachable ET_NOTE_TERM] */
typedef struct S1304 T1304;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
typedef struct S1305 T1305;

/* SPECIAL [detachable ET_NOTE_TERM_ITEM] */
typedef struct S1307 T1307;

/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
typedef struct S1308 T1308;

/* ET_NOTE_TERM_LIST */
typedef struct S1309 T1309;

/* SPECIAL [detachable ET_NOTE_TERM_LIST] */
typedef struct S1310 T1310;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1311 T1311;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1313 T1313;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1314 T1314;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S1315 T1315;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1316 T1316;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1317 T1317;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S1318 T1318;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1319 T1319;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S1320 T1320;

/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1321 T1321;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1322 T1322;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1323 T1323;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1324 T1324;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1325 T1325;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1326 T1326;

/* ET_POSTCONDITIONS */
typedef struct S1327 T1327;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1328 T1328;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S1329 T1329;

/* SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S1330 T1330;

/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S1331 T1331;

/* SPECIAL [detachable ET_PROCEDURE] */
typedef struct S1332 T1332;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1333 T1333;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1335 T1335;

/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
typedef struct S1336 T1336;

/* ET_QUANTIFIER_EXPRESSION */
typedef struct S1337 T1337;

/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
typedef struct S1338 T1338;

/* KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S1339 T1339;

/* SPECIAL [detachable ET_QUERY] */
typedef struct S1340 T1340;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1341 T1341;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1343 T1343;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1344 T1344;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1345 T1345;

/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
typedef struct S1346 T1346;

/* ET_REPEAT_INSTRUCTION */
typedef struct S1347 T1347;

/* SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
typedef struct S1348 T1348;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1349 T1349;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S1350 T1350;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1351 T1351;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1352 T1352;

/* ET_STRIP_EXPRESSION */
typedef struct S1353 T1353;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1354 T1354;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S1355 T1355;

/* SPECIAL [detachable ET_TYPE] */
typedef struct S1356 T1356;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
typedef struct S1357 T1357;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT] */
typedef struct S1359 T1359;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1360 T1360;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1362 T1362;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S1363 T1363;

/* ET_TYPE_CONSTRAINT_LIST */
typedef struct S1364 T1364;

/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
typedef struct S1365 T1365;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1366 T1366;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1368 T1368;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1369 T1369;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1370 T1370;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1371 T1371;

/* ET_VARIANT */
typedef struct S1372 T1372;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S1373 T1373;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
typedef struct S1374 T1374;

/* ET_WHEN_EXPRESSION */
typedef struct S1375 T1375;

/* SPECIAL [detachable ET_WHEN_EXPRESSION] */
typedef struct S1376 T1376;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
typedef struct S1377 T1377;

/* ET_WHEN_EXPRESSION_LIST */
typedef struct S1378 T1378;

/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
typedef struct S1379 T1379;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1380 T1380;

/* ET_WHEN_PART */
typedef struct S1381 T1381;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1382 T1382;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1383 T1383;

/* ET_WHEN_PART_LIST */
typedef struct S1384 T1384;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1385 T1385;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1386 T1386;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S1387 T1387;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1388 T1388;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1389 T1389;

/* ET_PARENT_CHECKER1 */
typedef struct S1390 T1390;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1391 T1391;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1392 T1392;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1393 T1393;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1395 T1395;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1396 T1396;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1398 T1398;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1399 T1399;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1400 T1400;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1401 T1401;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1402 T1402;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1403 T1403;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1404 T1404;

/* ET_SIGNATURE_CHECKER */
typedef struct S1405 T1405;

/* ET_PARENT_CHECKER2 */
typedef struct S1406 T1406;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1407 T1407;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1408 T1408;

/* ET_PRECURSOR_CHECKER */
typedef struct S1409 T1409;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1410 T1410;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1411 T1411;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1412 T1412;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1413 T1413;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1414 T1414;

/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
typedef struct S1415 T1415;

/* ET_RENAME */
typedef struct S1419 T1419;

/* ET_PARENT_CHECKER3 */
typedef struct S1420 T1420;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S1421 T1421;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S1422 T1422;

/* ET_SUPPLIER_BUILDER */
typedef struct S1423 T1423;

/* ET_PARENT_FEATURE */
typedef struct S1426 T1426;

/* ET_INHERITED_FEATURE */
typedef struct S1427 T1427;

/* SPECIAL [ET_CLASS] */
typedef struct S1428 T1428;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S1429 T1429;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1430 T1430;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1432 T1432;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1433 T1433;

/* UT_SYNTAX_ERROR */
typedef struct S1434 T1434;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1435 T1435;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1436 T1436;

/* ARRAY [detachable STRING_8] */
typedef struct S1437 T1437;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1438 T1438;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S1440 T1440;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1441 T1441;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1442 T1442;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1443 T1443;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1446 T1446;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1447 T1447;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1450 T1450;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1451 T1451;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1452 T1452;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1453 T1453;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1454 T1454;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1455 T1455;

/* DS_BILINKABLE [STRING_8] */
typedef struct S1456 T1456;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1457 T1457;

/* DS_LINKED_QUEUE [detachable STRING_8] */
typedef struct S1460 T1460;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1461 T1461;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1462 T1462;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1463 T1463;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1464 T1464;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1465 T1465;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1466 T1466;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1467 T1467;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1468 T1468;

/* DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1469 T1469;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1471 T1471;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1472 T1472;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1473 T1473;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1474 T1474;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
typedef struct S1475 T1475;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef struct S1477 T1477;

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1479 T1479;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
typedef struct S1481 T1481;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
typedef struct S1482 T1482;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1483 T1483;

/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef struct S1484 T1484;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
typedef struct S1486 T1486;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
typedef struct S1487 T1487;

/* SPECIAL [ET_SYSTEM_PROCESSOR] */
typedef struct S1488 T1488;

/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
typedef struct S1489 T1489;

/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
typedef struct S1490 T1490;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
typedef struct S1491 T1491;

/* SPECIAL [ET_ADAPTED_CLASS] */
typedef struct S1493 T1493;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
typedef struct S1494 T1494;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1495 T1495;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1496 T1496;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1497 T1497;

/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
typedef struct S1498 T1498;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
typedef struct S1499 T1499;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1502 T1502;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1503 T1503;

/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
typedef struct S1504 T1504;

/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
typedef struct S1505 T1505;

/* KL_SPECIAL_ROUTINES [NATURAL_64] */
typedef struct S1512 T1512;

/* TYPE [NATURAL_64] */
#define T1513 EIF_TYPE_OBJ

/* TYPE [NATURAL_32] */
#define T1514 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S1515 T1515;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1516 T1516;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1517 T1517;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1518 T1518;

/* STRING_8_SEARCHER */
typedef struct S1521 T1521;

/* KL_CHARACTER_BUFFER */
typedef struct S1522 T1522;

/* UT_TRISTATE */
typedef struct S1523 T1523;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S1524 T1524;

/* TUPLE [UT_TRISTATE] */
typedef struct S1525 T1525;

/* TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
typedef struct S1526 T1526;

/* PREDICATE [TUPLE [ET_MASTER_CLASS]] */
typedef struct S1527 T1527;

/* PREDICATE [TUPLE] */
typedef struct S1528 T1528;

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1530 T1530;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1531 T1531;

/* TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1532 T1532;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1533 T1533;

/* PREDICATE [TUPLE [ET_UNIVERSE]] */
typedef struct S1534 T1534;

/* TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1535 T1535;

/* TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
typedef struct S1536 T1536;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1538 T1538;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S1539 T1539;

/* TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
typedef struct S1540 T1540;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1541 T1541;

/* XM_COMMENT */
typedef struct S1543 T1543;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1544 T1544;

/* XM_CHARACTER_DATA */
typedef struct S1545 T1545;

/* ET_LIKE_N */
typedef struct S1548 T1548;

/* TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef struct S1551 T1551;

/* KL_STRING_INPUT_STREAM */
typedef struct S1552 T1552;

/* KL_UNICODE_CHARACTER_BUFFER */
typedef struct S1554 T1554;

/* ET_INLINE_SEPARATE_ARGUMENT_LIST */
typedef struct S1556 T1556;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1557 T1557;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S1558 T1558;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1559 T1559;

/* ET_VERBATIM_STRING */
typedef struct S1560 T1560;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1561 T1561;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1562 T1562;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1563 T1563;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1564 T1564;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1565 T1565;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1566 T1566;

/* ET_TRUE_CONSTANT */
typedef struct S1568 T1568;

/* ET_FALSE_CONSTANT */
typedef struct S1569 T1569;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1570 T1570;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1571 T1571;

/* ET_TAGGED_NOTE */
typedef struct S1573 T1573;

/* ET_NOTE */
typedef struct S1574 T1574;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1575 T1575;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1576 T1576;

/* ET_TYPE_RENAME_CONSTRAINT */
typedef struct S1577 T1577;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1578 T1578;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1579 T1579;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1580 T1580;

/* ET_ALL_EXPORT */
typedef struct S1581 T1581;

/* ET_CONVERT_FUNCTION */
typedef struct S1583 T1583;

/* ET_CONVERT_PROCEDURE */
typedef struct S1584 T1584;

/* ET_ONCE_FUNCTION */
typedef struct S1586 T1586;

/* ET_DEFERRED_FUNCTION */
typedef struct S1587 T1587;

/* ET_ONCE_PROCEDURE */
typedef struct S1589 T1589;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1590 T1590;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1591 T1591;

/* ET_ALIAS_FREE_NAME */
typedef struct S1592 T1592;

/* ET_CLASS_ASSERTION */
typedef struct S1595 T1595;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1596 T1596;

/* ET_LIKE_FEATURE */
typedef struct S1598 T1598;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1599 T1599;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1600 T1600;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1601 T1601;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1602 T1602;

/* ET_LOOP_INSTRUCTION */
typedef struct S1603 T1603;

/* ET_BANG_INSTRUCTION */
typedef struct S1605 T1605;

/* ET_CREATE_INSTRUCTION */
typedef struct S1606 T1606;

/* ET_CHOICE_RANGE */
typedef struct S1607 T1607;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1608 T1608;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1610 T1610;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1611 T1611;

/* ET_FEATURE_ADDRESS */
typedef struct S1612 T1612;

/* ET_CURRENT_ADDRESS */
typedef struct S1613 T1613;

/* ET_RESULT_ADDRESS */
typedef struct S1614 T1614;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1615 T1615;

/* ET_INFIX_EXPRESSION */
typedef struct S1616 T1616;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1617 T1617;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1618 T1618;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1619 T1619;

/* ET_MANIFEST_TYPE */
typedef struct S1620 T1620;

/* ET_PREFIX_EXPRESSION */
typedef struct S1621 T1621;

/* ET_OLD_EXPRESSION */
typedef struct S1622 T1622;

/* ET_OLD_OBJECT_TEST */
typedef struct S1623 T1623;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1624 T1624;

/* ET_ITERATION_CURSOR */
typedef struct S1625 T1625;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1626 T1626;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1627 T1627;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1628 T1628;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1629 T1629;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1630 T1630;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1631 T1631;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1632 T1632;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1633 T1633;

/* ET_TAGGED_ASSERTION */
typedef struct S1636 T1636;

/* ET_FILE_POSITION */
typedef struct S1638 T1638;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1640 T1640;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1641 T1641;

/* ET_REDECLARED_FEATURE */
typedef struct S1643 T1643;

/* SPECIAL [NATURAL_16] */
typedef struct S1649 T1649;

/* ARRAY [NATURAL_16] */
typedef struct S1650 T1650;

/* ARRAY [NATURAL_32] */
typedef struct S1651 T1651;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1652 T1652;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1653 T1653;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1654 T1654;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1655 T1655;

/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
typedef struct S1656 T1656;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1657 T1657;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1658 T1658;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1659 T1659;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1660 T1660;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1661 T1661;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1662 T1662;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1663 T1663;

/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
typedef struct S1664 T1664;

/* SPECIAL [ET_ECF_ACTION] */
typedef struct S1665 T1665;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
typedef struct S1666 T1666;

/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1667 T1667;

/* SPECIAL [ET_ECF_OPTIONS] */
typedef struct S1668 T1668;

/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
typedef struct S1671 T1671;

/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
typedef struct S1672 T1672;

/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
typedef struct S1673 T1673;

/* SPECIAL [ET_ECF_VISIBLE_CLASS] */
typedef struct S1674 T1674;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
typedef struct S1675 T1675;

/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1676 T1676;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
typedef struct S1677 T1677;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1678 T1678;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1679 T1679;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1680 T1680;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1682 T1682;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1683 T1683;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1685 T1685;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1686 T1686;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1688 T1688;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1689 T1689;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1690 T1690;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1691 T1691;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1692 T1692;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1693 T1693;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1694 T1694;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1695 T1695;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1696 T1696;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1697 T1697;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1699 T1699;

/* UC_UTF16_ROUTINES */
typedef struct S1700 T1700;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1701 T1701;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1702 T1702;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1703 T1703;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1704 T1704;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1705 T1705;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1706 T1706;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1707 T1707;

/* SPECIAL [ET_ECF_TARGET_PARENT] */
typedef struct S1708 T1708;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
typedef struct S1709 T1709;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
typedef struct S1710 T1710;

/* SPECIAL [ET_CLUSTER] */
typedef struct S1711 T1711;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1712 T1712;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1713 T1713;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S1714 T1714;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S1715 T1715;

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1716 T1716;

/* YY_UNICODE_BUFFER */
typedef struct S1717 T1717;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1718 T1718;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1719 T1719;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
typedef struct S1720 T1720;

/* SPECIAL [ET_OBJECT_TEST_LIST] */
typedef struct S1721 T1721;

/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1722 T1722;

/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
typedef struct S1723 T1723;

/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1724 T1724;

/* SPECIAL [ET_ITERATION_COMPONENT_LIST] */
typedef struct S1725 T1725;

/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1726 T1726;

/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1727 T1727;

/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1728 T1728;

/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
typedef struct S1729 T1729;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1730 T1730;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1731 T1731;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1732 T1732;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1733 T1733;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1734 T1734;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1736 T1736;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1738 T1738;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1739 T1739;

/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1741 T1741;

/* DS_ARRAYED_LIST [NATURAL_32] */
typedef struct S1742 T1742;

/* ET_BASE_TYPE_CONSTRAINT_LIST */
typedef struct S1743 T1743;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1744 T1744;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1745 T1745;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S1748 T1748;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1749 T1749;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S1750 T1750;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S1751 T1751;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S1753 T1753;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1754 T1754;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1755 T1755;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1756 T1756;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1757 T1757;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1759 T1759;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1760 T1760;

/* SPECIAL [ET_CLIENT] */
typedef struct S1761 T1761;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1762 T1762;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1763 T1763;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1764 T1764;

/* ET_REPLICATED_FEATURE */
typedef struct S1766 T1766;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1767 T1767;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1768 T1768;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1769 T1769;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1770 T1770;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1772 T1772;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1774 T1774;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1775 T1775;

/* DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1776 T1776;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1777 T1777;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1778 T1778;

/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1779 T1779;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1780 T1780;

/* TYPE [ET_FEATURE] */
#define T1781 EIF_TYPE_OBJ

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1783 T1783;

/* TYPE [ET_CLASS] */
#define T1784 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1785 T1785;

/* SPECIAL [ET_RENAME] */
typedef struct S1786 T1786;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1789 T1789;

/* TYPE [ET_RENAME] */
#define T1790 EIF_TYPE_OBJ

/* TYPE [ET_FEATURE_NAME] */
#define T1791 EIF_TYPE_OBJ

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
typedef struct S1793 T1793;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1794 T1794;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1795 T1795;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1796 T1796;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1797 T1797;

/* SPECIAL [YY_BUFFER] */
typedef struct S1798 T1798;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1799 T1799;

/* TYPE [detachable STRING_8] */
#define T1800 EIF_TYPE_OBJ

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1801 T1801;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1802 T1802;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1804 T1804;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1805 T1805;

/* DS_LINKABLE [detachable STRING_8] */
typedef struct S1806 T1806;

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1807 T1807;

/* TUPLE [ET_ECF_CLUSTER] */
typedef struct S1808 T1808;

/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
typedef struct S1809 T1809;

/* TUPLE [ET_ECF_TARGET, STRING_8] */
typedef struct S1810 T1810;

/* TUPLE [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1812 T1812;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
typedef struct S1813 T1813;

/* TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1814 T1814;

/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S1815 T1815;

/* PROCEDURE [TUPLE [STRING_8]] */
typedef struct S1818 T1818;

/* TUPLE [ET_ECF_OPTIONS, STRING_8] */
typedef struct S1819 T1819;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S1820 T1820;

/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef struct S1821 T1821;

/* TYPE [detachable DEVELOPER_EXCEPTION] */
#define T1825 EIF_TYPE_OBJ

/* DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S1828 T1828;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1832 T1832;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1833 T1833;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1835 T1835;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1836 T1836;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1839 T1839;

/* TUPLE [ET_CLIENT_LIST] */
typedef struct S1843 T1843;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1844 T1844;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1845 T1845;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1846 T1846;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1848 T1848;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1852 T1852;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1854 T1854;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1855 T1855;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1856 T1856;

/* TUPLE [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1859 T1859;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
typedef struct S1860 T1860;

/* TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1861 T1861;

/* TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1862 T1862;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1863 T1863;

/* TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1864 T1864;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1865 T1865;

/* TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1866 T1866;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef struct S1867 T1867;

/* TUPLE [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1868 T1868;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
typedef struct S1869 T1869;

/* TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1870 T1870;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1871 T1871;

/* TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1872 T1872;

/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
typedef struct S1873 T1873;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1877 T1877;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1880 T1880;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1881 T1881;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1882 T1882;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1884 T1884;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S1885 T1885;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1886 T1886;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1888 T1888;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1890 T1890;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S1891 T1891;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S1893 T1893;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S1894 T1894;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1896 T1896;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1897 T1897;

/* SPECIAL [ET_CREATOR] */
typedef struct S1898 T1898;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S1899 T1899;

/* SPECIAL [ET_ELSEIF_EXPRESSION] */
typedef struct S1900 T1900;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
typedef struct S1901 T1901;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S1902 T1902;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S1903 T1903;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1904 T1904;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S1905 T1905;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1907 T1907;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S1908 T1908;

/* SPECIAL [ET_NOTE_ITEM] */
typedef struct S1910 T1910;

/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
typedef struct S1911 T1911;

/* SPECIAL [ET_NOTE_TERM_ITEM] */
typedef struct S1912 T1912;

/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
typedef struct S1913 T1913;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S1914 T1914;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S1915 T1915;

/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1917 T1917;

/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
typedef struct S1918 T1918;

/* SPECIAL [ET_WHEN_EXPRESSION] */
typedef struct S1919 T1919;

/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
typedef struct S1920 T1920;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S1921 T1921;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S1922 T1922;

/* ET_BASE_TYPE_RENAME_CONSTRAINT */
typedef struct S1924 T1924;

/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1927 T1927;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1931 T1931;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1933 T1933;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1934 T1934;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1935 T1935;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1936 T1936;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1937 T1937;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1938 T1938;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1939 T1939;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1940 T1940;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1941 T1941;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S1942 T1942;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S1943 T1943;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S1944 T1944;

/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
typedef struct S1945 T1945;

/* SPECIAL [ET_ECF_NAMESPACE] */
typedef struct S1946 T1946;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
typedef struct S1947 T1947;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1948 T1948;

/* SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1949 T1949;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1950 T1950;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1951 T1951;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1952 T1952;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1953 T1953;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1954 T1954;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1955 T1955;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1956 T1956;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1957 T1957;

/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1958 T1958;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1959 T1959;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1960 T1960;

/* SPECIAL [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1961 T1961;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
typedef struct S1962 T1962;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1963 T1963;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1964 T1964;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1965 T1965;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1966 T1966;

/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1967 T1967;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1968 T1968;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1969 T1969;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1970 T1970;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1971 T1971;

/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1972 T1972;

/* SPECIAL [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1973 T1973;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
typedef struct S1974 T1974;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
typedef struct S1975 T1975;

/* SPECIAL [ET_ECF_CONDITION_ITEM] */
typedef struct S1976 T1976;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
typedef struct S1977 T1977;

/* DS_LINKABLE [CHARACTER_8] */
typedef struct S1979 T1979;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1980 T1980;

/* SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1981 T1981;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1982 T1982;

/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
typedef struct S1983 T1983;

/* DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
typedef struct S1984 T1984;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1985 T1985;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1986 T1986;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1988 T1988;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1989 T1989;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1991 T1991;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1992 T1992;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1993 T1993;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1994 T1994;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1995 T1995;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1996 T1996;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1997 T1997;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1998 T1998;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1999 T1999;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S2000 T2000;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S2003 T2003;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S2004 T2004;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S2005 T2005;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S2006 T2006;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S2007 T2007;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S2008 T2008;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S2009 T2009;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S2010 T2010;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S2012 T2012;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S2013 T2013;

/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S2014 T2014;

/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S2015 T2015;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S2016 T2016;

/* ET_UNIVERSE_ERROR */
typedef struct S2017 T2017;

/* ET_CLUSTER_ERROR */
typedef struct S2018 T2018;

/* ET_SYNTAX_ERROR */
typedef struct S2019 T2019;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S2020 T2020;

/* AP_OPTION_COMPARATOR */
typedef struct S2021 T2021;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S2022 T2022;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S2025 T2025;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S2026 T2026;

/* ST_SPLITTER */
typedef struct S2030 T2030;

/* KL_CHARACTER_ROUTINES */
typedef struct S2031 T2031;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S2032 T2032;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S2033 T2033;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S2035 T2035;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S2036 T2036;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S2037 T2037;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S2040 T2040;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S2041 T2041;

/* SPECIAL [ET_EXPORT] */
typedef struct S2045 T2045;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S2047 T2047;

/* TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
typedef struct S2055 T2055;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S2057 T2057;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S2061 T2061;

/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef struct S2062 T2062;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
typedef struct S2065 T2065;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
typedef struct S2066 T2066;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S2067 T2067;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S2070 T2070;

/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S2071 T2071;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S2074 T2074;

/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S2075 T2075;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S2082 T2082;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S2097 T2097;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S2098 T2098;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S2099 T2099;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S2100 T2100;

/* TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S2104 T2104;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
typedef struct S2105 T2105;

/* TYPE [detachable RX_REGULAR_EXPRESSION] */
#define T2109 EIF_TYPE_OBJ

/* TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T2110 EIF_TYPE_OBJ

/* TYPE [ET_ITERATION_COMPONENT] */
#define T2111 EIF_TYPE_OBJ

/* TYPE [ET_INLINE_SEPARATE_ARGUMENT] */
#define T2113 EIF_TYPE_OBJ

/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
typedef struct S2117 T2117;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S2123 T2123;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S2124 T2124;

/* ET_AST_NULL_LEAF */
typedef struct S2125 T2125;

/* DS_HASH_SET [NATURAL_32] */
typedef struct S2126 T2126;

/* TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2127 T2127;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S2128 T2128;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S2129 T2129;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S2130 T2130;

/* TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2131 T2131;

/* TUPLE [ET_ECF_LIBRARY] */
typedef struct S2132 T2132;

/* TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2134 T2134;

/* DS_CELL [detachable ET_CLASS] */
typedef struct S2138 T2138;

/* TUPLE [DS_CELL [detachable ET_CLASS]] */
typedef struct S2139 T2139;

/* TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S2141 T2141;

/* TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2143 T2143;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S2144 T2144;

/* TUPLE [ET_ECF_FILE_RULE] */
typedef struct S2145 T2145;

/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S2146 T2146;

/* TUPLE [ET_ECF_FILE_RULES] */
typedef struct S2147 T2147;

/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S2148 T2148;

/* TUPLE [ET_ECF_STATE] */
typedef struct S2149 T2149;

/* PREDICATE [TUPLE [STRING_8]] */
typedef struct S2151 T2151;

/* TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S2152 T2152;

/* TUPLE [DS_HASH_SET [STRING_8]] */
typedef struct S2154 T2154;

/* LX_DFA_WILDCARD */
typedef struct S2156 T2156;

/* TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S2157 T2157;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S2161 T2161;

/* TUPLE [LX_WILDCARD] */
typedef struct S2163 T2163;

/* PREDICATE [TUPLE [LX_WILDCARD]] */
typedef struct S2164 T2164;

/* TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S2165 T2165;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2167 T2167;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S2168 T2168;

/* SPECIAL [LX_WILDCARD] */
typedef struct S2169 T2169;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S2172 T2172;

/* DS_HASH_SET_CURSOR [NATURAL_32] */
typedef struct S2173 T2173;

/* LX_WILDCARD_PARSER */
typedef struct S2174 T2174;

/* LX_DESCRIPTION */
typedef struct S2175 T2175;

/* LX_FULL_DFA */
typedef struct S2176 T2176;

/* TUPLE [ET_GROUP] */
typedef struct S2178 T2178;

/* TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
typedef struct S2179 T2179;

/* TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2180 T2180;

/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S2181 T2181;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S2183 T2183;

/* LX_START_CONDITIONS */
typedef struct S2184 T2184;

/* LX_ACTION_FACTORY */
typedef struct S2185 T2185;

/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef struct S2186 T2186;

/* LX_SYMBOL_CLASS */
typedef struct S2187 T2187;

/* DS_HASH_TABLE [STRING_32, STRING_8] */
typedef struct S2188 T2188;

/* DS_HASH_SET [LX_SYMBOL_CLASS] */
typedef struct S2189 T2189;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
typedef struct S2190 T2190;

/* KL_EQUALITY_TESTER [STRING_32] */
typedef struct S2191 T2191;

/* DS_ARRAYED_STACK [BOOLEAN] */
typedef struct S2192 T2192;

/* KL_SPECIAL_ROUTINES [STRING_32] */
typedef struct S2193 T2193;

/* SPECIAL [STRING_32] */
typedef struct S2194 T2194;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S2195 T2195;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S2196 T2196;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S2197 T2197;

/* LX_NFA */
typedef struct S2198 T2198;

/* SPECIAL [LX_NFA] */
typedef struct S2199 T2199;

/* LX_RULE */
typedef struct S2200 T2200;

/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
typedef struct S2201 T2201;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S2202 T2202;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S2203 T2203;

/* LX_INVALID_UNICODE_CHARACTER_ERROR */
typedef struct S2204 T2204;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S2205 T2205;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S2206 T2206;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S2207 T2207;

/* LX_FULL_AND_META_ERROR */
typedef struct S2208 T2208;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S2209 T2209;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S2210 T2210;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S2211 T2211;

/* ARRAY [LX_RULE] */
typedef struct S2212 T2212;

/* SPECIAL [LX_RULE] */
typedef struct S2213 T2213;

/* LX_DFA_STATE */
typedef struct S2214 T2214;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S2215 T2215;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S2216 T2216;

/* LX_SYMBOL_PARTITIONS */
typedef struct S2217 T2217;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S2218 T2218;

/* ARRAY [detachable LX_RULE] */
typedef struct S2219 T2219;

/* SPECIAL [detachable LX_RULE] */
typedef struct S2220 T2220;

/* LX_START_CONDITION */
typedef struct S2221 T2221;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S2222 T2222;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S2223 T2223;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S2224 T2224;

/* LX_NFA_STATE */
typedef struct S2225 T2225;

/* ARRAY [detachable LX_SYMBOL_CLASS] */
typedef struct S2226 T2226;

/* SPECIAL [detachable LX_SYMBOL_CLASS] */
typedef struct S2227 T2227;

/* ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
typedef struct S2228 T2228;

/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
typedef struct S2229 T2229;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2230 T2230;

/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
typedef struct S2231 T2231;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S2232 T2232;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S2233 T2233;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S2234 T2234;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S2235 T2235;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S2236 T2236;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S2237 T2237;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S2238 T2238;

/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef struct S2239 T2239;

/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
typedef struct S2240 T2240;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
typedef struct S2242 T2242;

/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
typedef struct S2243 T2243;

/* SPECIAL [detachable SPECIAL [NATURAL_64]] */
typedef struct S2244 T2244;

/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
typedef struct S2246 T2246;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
typedef struct S2248 T2248;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S2249 T2249;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S2252 T2252;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S2253 T2253;

/* LX_ACTION */
typedef struct S2255 T2255;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S2256 T2256;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S2257 T2257;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S2258 T2258;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S2259 T2259;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S2261 T2261;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S2263 T2263;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S2265 T2265;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S2266 T2266;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S2268 T2268;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S2269 T2269;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S2270 T2270;

/* KL_ARRAY [LX_RULE] */
typedef struct S2271 T2271;

/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
typedef struct S2272 T2272;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S2273 T2273;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S2275 T2275;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S2279 T2279;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S2282 T2282;

/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2285 T2285;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2286 T2286;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
typedef struct S2287 T2287;

/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
typedef struct S2288 T2288;

/* KL_ARRAY [STRING_8] */
typedef struct S2289 T2289;

/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
typedef struct S2291 T2291;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1* p1; /* pointer */
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2* p1; /* pointer */
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3* p1; /* pointer */
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4* p1; /* pointer */
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5* p1; /* pointer */
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6* p1; /* pointer */
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7* p1; /* pointer */
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8* p1; /* pointer */
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9* p1; /* pointer */
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10* p1; /* pointer */
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11* p1; /* pointer */
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12* p1; /* pointer */
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13* p1; /* pointer */
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14* p1; /* pointer */
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S39 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T39* p1; /* pointer */
	T39 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S961 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T961* p1; /* pointer */
	T961 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S960 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T960* p1; /* pointer */
	T960 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S836 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T836* p1; /* pointer */
	T836 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S540 {
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T540* p1; /* pointer */
	T540 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* area_lower */
	T6 a4; /* internal_hash_code */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S21 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* error_handler */
	T0* a3; /* version_flag */
	T0* a4; /* ecf_filename */
	T0* a5; /* last_system */
	T0* a6; /* target_option */
	T0* a7; /* setting_option */
	T0* a8; /* capability_option */
	T0* a9; /* variable_option */
	T0* a10; /* finalize_flag */
	T0* a11; /* gelint_flag */
	T0* a12; /* ise_option */
	T0* a13; /* catcall_option */
	T0* a14; /* c_compile_option */
	T0* a15; /* split_option */
	T0* a16; /* split_size_option */
	T0* a17; /* new_instance_types_option */
	T0* a18; /* gc_option */
	T0* a19; /* thread_option */
	T0* a20; /* silent_flag */
	T0* a21; /* no_benchmark_flag */
	T0* a22; /* nested_benchmark_flag */
	T0* a23; /* metrics_flag */
	T0* a24; /* verbose_flag */
	T0* a25; /* ise_version */
	T0* a26; /* override_settings */
	T0* a27; /* override_capabilities */
	T0* a28; /* override_variables */
	T1 a29; /* ecf_gelint_option */
	T0* a30; /* new_instance_types */
	T6 a31; /* split_size */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type C_STRING */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_ARGUMENTS */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ARRAY [STRING_8] */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [STRING_8] */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EXCEPTIONS */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type EXCEPTIONS */
struct S36 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STANDARD_FILES */
struct S37 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S41 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* last_string_32 */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type UT_GOBO_VARIABLES */
struct S43 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_ISE_VARIABLES */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_FLAG */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type ET_SYSTEM */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_type */
	T0* a2; /* boolean_type */
	T0* a3; /* character_type */
	T0* a4; /* character_32_type */
	T0* a5; /* implicit_attachment_type_mark */
	T0* a6; /* current_system */
	T0* a7; /* tuple_type */
	T0* a8; /* pointer_type */
	T0* a9; /* system_object_parents */
	T0* a10; /* any_parents */
	T0* a11; /* system_object_type */
	T0* a12; /* any_type */
	T0* a13; /* register_class_mutex */
	T0* a14; /* external_include_pathnames */
	T0* a15; /* external_object_pathnames */
	T0* a16; /* external_library_pathnames */
	T0* a17; /* external_make_pathnames */
	T0* a18; /* external_resource_pathnames */
	T0* a19; /* external_cflags */
	T0* a20; /* external_linker_flags */
	T1 a21; /* console_application_mode */
	T1 a22; /* total_order_on_reals_mode */
	T1 a23; /* attachment_type_conformance_mode */
	T1 a24; /* scoop_mode */
	T0* a25; /* universe */
	T0* a26; /* name */
	T0* a27; /* libraries */
	T0* a28; /* clusters */
	T0* a29; /* dotnet_assemblies */
	T0* a30; /* master_classes */
	T0* a31; /* master_class_mutex */
	T0* a32; /* system_name */
	T0* a33; /* detachable_any_type */
	T0* a34; /* detachable_separate_any_type */
	T0* a35; /* any_parent */
	T0* a36; /* any_clients */
	T0* a37; /* detachable_tuple_type */
	T0* a38; /* tuple_identity_type */
	T0* a39; /* unfolded_empty_tuple_actual_parameters */
	T0* a40; /* array_any_type */
	T0* a41; /* array_detachable_any_type */
	T0* a42; /* array_none_type */
	T0* a43; /* array_identity_type */
	T0* a44; /* character_8_type */
	T0* a45; /* character_8_convert_feature */
	T0* a46; /* character_32_convert_feature */
	T0* a47; /* double_type */
	T0* a48; /* exception_type */
	T0* a49; /* detachable_exception_type */
	T0* a50; /* exception_manager_type */
	T0* a51; /* function_identity_any_type */
	T0* a52; /* immutable_string_8_type */
	T0* a53; /* immutable_string_32_type */
	T0* a54; /* integer_8_type */
	T0* a55; /* integer_8_convert_feature */
	T0* a56; /* integer_16_type */
	T0* a57; /* integer_16_convert_feature */
	T0* a58; /* integer_32_type */
	T0* a59; /* integer_32_convert_feature */
	T0* a60; /* integer_64_type */
	T0* a61; /* integer_64_convert_feature */
	T0* a62; /* ise_exception_manager_type */
	T0* a63; /* iterable_detachable_separate_any_type */
	T0* a64; /* natural_type */
	T0* a65; /* natural_8_type */
	T0* a66; /* natural_8_convert_feature */
	T0* a67; /* natural_16_type */
	T0* a68; /* natural_16_convert_feature */
	T0* a69; /* natural_32_type */
	T0* a70; /* natural_32_convert_feature */
	T0* a71; /* natural_64_type */
	T0* a72; /* natural_64_convert_feature */
	T0* a73; /* none_type */
	T0* a74; /* detachable_none_type */
	T0* a75; /* predicate_identity_type */
	T0* a76; /* procedure_identity_type */
	T0* a77; /* real_type */
	T0* a78; /* real_32_type */
	T0* a79; /* real_32_convert_feature */
	T0* a80; /* real_64_type */
	T0* a81; /* real_64_convert_feature */
	T0* a82; /* routine_identity_type */
	T0* a83; /* special_any_type */
	T0* a84; /* special_detachable_any_type */
	T0* a85; /* special_identity_type */
	T0* a86; /* string_type */
	T0* a87; /* detachable_string_type */
	T0* a88; /* string_8_type */
	T0* a89; /* detachable_string_8_type */
	T0* a90; /* string_8_convert_feature */
	T0* a91; /* string_32_type */
	T0* a92; /* string_32_convert_feature */
	T0* a93; /* system_string_type */
	T0* a94; /* type_detachable_any_type */
	T0* a95; /* detachable_type_exception_type */
	T0* a96; /* type_detachable_exception_type */
	T0* a97; /* type_detachable_like_current_type */
	T0* a98; /* type_identity_type */
	T0* a99; /* typed_pointer_identity_type */
	T0* a100; /* wide_character_type */
	T1 a101; /* is_read_only */
	T6 a102; /* registered_class_count */
	T1 a103; /* use_obsolete_syntax_mode */
	T1 a104; /* obsolete_iteration_mode */
	T6 a105; /* default_create_seed */
	T6 a106; /* copy_seed */
	T6 a107; /* twin_seed */
	T6 a108; /* is_equal_seed */
	T6 a109; /* routine_call_seed */
	T6 a110; /* function_item_seed */
	T6 a111; /* dispose_seed */
	T6 a112; /* iterable_new_cursor_seed */
	T6 a113; /* iteration_cursor_item_seed */
	T6 a114; /* iteration_cursor_after_seed */
	T6 a115; /* iteration_cursor_forth_seed */
	T6 a116; /* special_item_seed */
	T1 a117; /* is_dotnet */
	T1 a118; /* target_type_attachment_mode */
	T1 a119; /* obsolete_routine_type_mode */
};

/* Struct for type AP_PARSER */
struct S48 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* parameters_description */
	T0* a5; /* help_option */
	T0* a6; /* error_handler */
	T0* a7; /* application_description */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S49 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* introduction_option */
	T0* a5; /* parameters_description */
	T0* a6; /* internal_cursor */
};

/* Struct for type AP_STRING_OPTION */
struct S50 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* has_default_parameter */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type UT_VERSION */
struct S52 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
	T2 a12; /* short_form */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_hidden */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
};

/* Struct for type AP_INTEGER_OPTION */
struct S55 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T2 a7; /* short_form */
	T1 a8; /* is_hidden */
	T1 a9; /* is_mandatory */
	T6 a10; /* maximum_occurrences */
	T1 a11; /* has_short_form */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S59 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_verbose */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_ge */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S61 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* override_settings */
	T0* a4; /* override_capabilities */
	T0* a5; /* override_variables */
	T0* a6; /* parsed_libraries */
	T0* a7; /* parsed_dotnet_assemblies */
	T0* a8; /* redirected_locations */
	T0* a9; /* xml_parser */
	T0* a10; /* tree_pipe */
	T0* a11; /* error_handler */
	T0* a12; /* ise_version */
	T0* a13; /* ise_eiffel_to_gobo_uuid_mappings */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S62 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S63 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* register_class_mutex */
	T0* a4; /* external_include_pathnames */
	T0* a5; /* external_object_pathnames */
	T0* a6; /* external_library_pathnames */
	T0* a7; /* external_make_pathnames */
	T0* a8; /* external_resource_pathnames */
	T0* a9; /* external_cflags */
	T0* a10; /* external_linker_flags */
	T1 a11; /* console_application_mode */
	T1 a12; /* total_order_on_reals_mode */
	T0* a13; /* current_system */
	T0* a14; /* universe */
	T0* a15; /* libraries */
	T0* a16; /* clusters */
	T0* a17; /* dotnet_assemblies */
	T0* a18; /* implicit_attachment_type_mark */
	T0* a19; /* master_classes */
	T0* a20; /* master_class_mutex */
	T0* a21; /* system_name */
	T0* a22; /* any_type */
	T0* a23; /* detachable_any_type */
	T0* a24; /* detachable_separate_any_type */
	T0* a25; /* any_parent */
	T0* a26; /* any_parents */
	T0* a27; /* any_clients */
	T0* a28; /* tuple_type */
	T0* a29; /* detachable_tuple_type */
	T0* a30; /* tuple_identity_type */
	T0* a31; /* unfolded_empty_tuple_actual_parameters */
	T0* a32; /* array_any_type */
	T0* a33; /* array_detachable_any_type */
	T0* a34; /* array_none_type */
	T0* a35; /* array_identity_type */
	T0* a36; /* boolean_type */
	T0* a37; /* character_type */
	T0* a38; /* character_8_type */
	T0* a39; /* character_8_convert_feature */
	T0* a40; /* character_32_type */
	T0* a41; /* character_32_convert_feature */
	T0* a42; /* double_type */
	T0* a43; /* exception_type */
	T0* a44; /* detachable_exception_type */
	T0* a45; /* exception_manager_type */
	T0* a46; /* function_identity_any_type */
	T0* a47; /* immutable_string_8_type */
	T0* a48; /* immutable_string_32_type */
	T0* a49; /* integer_type */
	T0* a50; /* integer_8_type */
	T0* a51; /* integer_8_convert_feature */
	T0* a52; /* integer_16_type */
	T0* a53; /* integer_16_convert_feature */
	T0* a54; /* integer_32_type */
	T0* a55; /* integer_32_convert_feature */
	T0* a56; /* integer_64_type */
	T0* a57; /* integer_64_convert_feature */
	T0* a58; /* ise_exception_manager_type */
	T0* a59; /* iterable_detachable_separate_any_type */
	T0* a60; /* natural_type */
	T0* a61; /* natural_8_type */
	T0* a62; /* natural_8_convert_feature */
	T0* a63; /* natural_16_type */
	T0* a64; /* natural_16_convert_feature */
	T0* a65; /* natural_32_type */
	T0* a66; /* natural_32_convert_feature */
	T0* a67; /* natural_64_type */
	T0* a68; /* natural_64_convert_feature */
	T0* a69; /* none_type */
	T0* a70; /* detachable_none_type */
	T0* a71; /* pointer_type */
	T0* a72; /* predicate_identity_type */
	T0* a73; /* procedure_identity_type */
	T0* a74; /* real_type */
	T0* a75; /* real_32_type */
	T0* a76; /* real_32_convert_feature */
	T0* a77; /* real_64_type */
	T0* a78; /* real_64_convert_feature */
	T0* a79; /* routine_identity_type */
	T0* a80; /* special_any_type */
	T0* a81; /* special_detachable_any_type */
	T0* a82; /* special_identity_type */
	T0* a83; /* string_type */
	T0* a84; /* detachable_string_type */
	T0* a85; /* string_8_type */
	T0* a86; /* detachable_string_8_type */
	T0* a87; /* string_8_convert_feature */
	T0* a88; /* string_32_type */
	T0* a89; /* string_32_convert_feature */
	T0* a90; /* system_object_type */
	T0* a91; /* system_object_parents */
	T0* a92; /* system_string_type */
	T0* a93; /* type_detachable_any_type */
	T0* a94; /* detachable_type_exception_type */
	T0* a95; /* type_detachable_exception_type */
	T0* a96; /* type_detachable_like_current_type */
	T0* a97; /* type_identity_type */
	T0* a98; /* typed_pointer_identity_type */
	T0* a99; /* wide_character_type */
	T1 a100; /* is_read_only */
	T6 a101; /* registered_class_count */
	T0* a102; /* targets */
	T0* a103; /* library_target */
	T0* a104; /* selected_target */
	T0* a105; /* root_type */
	T0* a106; /* root_creation */
	T6 a107; /* default_create_seed */
	T1 a108; /* inlining_mode */
	T6 a109; /* inlining_size */
	T1 a110; /* scoop_mode */
	T1 a111; /* attachment_type_conformance_mode */
	T6 a112; /* twin_seed */
	T6 a113; /* is_equal_seed */
	T6 a114; /* dispose_seed */
	T1 a115; /* use_boehm_gc */
	T6 a116; /* routine_call_seed */
	T6 a117; /* function_item_seed */
	T1 a118; /* trace_mode */
	T1 a119; /* exception_trace_mode */
	T1 a120; /* check_for_void_target_mode */
	T1 a121; /* line_generation_mode */
	T1 a122; /* multithreaded_mode */
	T6 a123; /* copy_seed */
	T0* a124; /* ecf_namespace */
	T0* a125; /* ecf_version */
	T0* a126; /* description */
	T0* a127; /* notes */
	T0* a128; /* uuid */
	T1 a129; /* is_preparsed */
	T0* a130; /* scm_read_mapping_builder */
	T0* a131; /* scm_write_mapping_builder */
	T1 a132; /* use_obsolete_syntax_mode */
	T1 a133; /* obsolete_iteration_mode */
	T1 a134; /* is_dotnet */
	T1 a135; /* obsolete_routine_type_mode */
	T1 a136; /* target_type_attachment_mode */
	T6 a137; /* iterable_new_cursor_seed */
	T6 a138; /* iteration_cursor_item_seed */
	T6 a139; /* iteration_cursor_after_seed */
	T6 a140; /* iteration_cursor_forth_seed */
	T6 a141; /* special_item_seed */
};

/* Struct for type ET_ECF_TARGET */
struct S64 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* settings */
	T0* a2; /* capabilities */
	T0* a3; /* options */
	T0* a4; /* system_config */
	T0* a5; /* root */
	T0* a6; /* variables */
	T0* a7; /* name */
	T0* a8; /* parent */
	T0* a9; /* description */
	T0* a10; /* precompiled_library */
	T0* a11; /* version */
	T1 a12; /* is_abstract */
	T0* a13; /* clusters */
	T0* a14; /* libraries */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* file_rules */
	T0* a17; /* class_mappings */
	T0* a18; /* namespaces */
	T0* a19; /* external_cflags */
	T0* a20; /* external_includes */
	T0* a21; /* external_libraries */
	T0* a22; /* external_linker_flags */
	T0* a23; /* external_makes */
	T0* a24; /* external_objects */
	T0* a25; /* external_resources */
	T0* a26; /* pre_compile_actions */
	T0* a27; /* post_compile_actions */
	T0* a28; /* notes */
};

/* Struct for type ET_ECF_SETTINGS */
struct S65 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_CAPABILITIES */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_use_capabilities */
	T0* a2; /* primary_support_capabilities */
	T0* a3; /* secondary_capabilities */
};

/* Struct for type ET_ECF_VARIABLES */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* secondary_variables */
	T0* a2; /* primary_variables */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* dynamic_types */
	T0* a4; /* dynamic_type_set_builder */
	T1 a5; /* catcall_error_mode */
	T0* a6; /* system_processor */
	T0* a7; /* dynamic_generic_types_by_name */
	T0* a8; /* null_dynamic_type_set_builder */
	T1 a9; /* full_class_checking */
	T1 a10; /* catcall_warning_mode */
	T0* a11; /* new_instance_types */
	T0* a12; /* unknown_type */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* immutable_string_8_type */
	T0* a17; /* immutable_string_32_type */
	T0* a18; /* integer_8_type */
	T0* a19; /* integer_16_type */
	T0* a20; /* integer_32_type */
	T0* a21; /* integer_64_type */
	T0* a22; /* natural_8_type */
	T0* a23; /* natural_16_type */
	T0* a24; /* natural_32_type */
	T0* a25; /* natural_64_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* string_8_type */
	T0* a30; /* string_32_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* ise_exception_manager_type */
	T0* a34; /* any_type */
	T0* a35; /* none_type */
	T0* a36; /* root_type */
	T0* a37; /* root_creation_procedure */
	T0* a38; /* special_count_feature */
	T0* a39; /* special_capacity_feature */
	T0* a40; /* special_item_feature */
	T0* a41; /* array_area_feature */
	T0* a42; /* array_lower_feature */
	T0* a43; /* array_upper_feature */
	T0* a44; /* typed_pointer_to_pointer_feature */
	T0* a45; /* routine_closed_operands_feature */
	T0* a46; /* routine_rout_disp_feature */
	T0* a47; /* routine_set_rout_disp_final_feature */
	T0* a48; /* ise_exception_manager_init_exception_manager_feature */
	T0* a49; /* ise_exception_manager_last_exception_feature */
	T0* a50; /* ise_exception_manager_once_raise_feature */
	T0* a51; /* ise_exception_manager_set_exception_data_feature */
	T0* a52; /* ise_runtime_type_conforms_to_feature */
	T1 a53; /* in_dynamic_primary_type */
	T0* a54; /* ise_runtime_new_type_instance_of_feature */
	T1 a55; /* in_create_meta_type */
	T1 a56; /* all_attributes_used */
	T0* a57; /* ise_runtime_reference_field_feature */
	T0* a58; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* benchmark_shown */
	T1 a2; /* nested_benchmark_shown */
	T0* a3; /* interface_checker */
	T0* a4; /* stop_request */
	T0* a5; /* eiffel_parser */
	T0* a6; /* error_handler */
	T0* a7; /* implementation_checker */
	T0* a8; /* ise_version */
	T0* a9; /* eiffel_preparser */
	T0* a10; /* master_class_checker */
	T0* a11; /* provider_checker */
	T0* a12; /* ancestor_builder */
	T0* a13; /* feature_flattener */
	T0* a14; /* processed_class_count_stack */
	T0* a15; /* ast_factory */
	T0* a16; /* dotnet_assembly_consumer */
	T0* a17; /* ecma_version */
	T1 a18; /* metrics_shown */
	T1 a19; /* flat_mode */
	T1 a20; /* flat_dbc_mode */
	T1 a21; /* preparse_shallow_mode */
	T1 a22; /* preparse_single_mode */
	T1 a23; /* preparse_multiple_mode */
	T1 a24; /* unknown_builtin_reported */
	T1 a25; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a26; /* use_attribute_keyword */
	T1 a27; /* use_note_keyword */
	T1 a28; /* use_reference_keyword */
	T1 a29; /* use_attached_keyword */
	T1 a30; /* use_detachable_keyword */
	T1 a31; /* cluster_dependence_enabled */
	T6 a32; /* postponed_class_count */
	T6 a33; /* processed_class_count */
	T1 a34; /* preparse_override_mode */
	T1 a35; /* preparse_readonly_mode */
	T1 a36; /* suppliers_enabled */
	T1 a37; /* providers_enabled */
	T1 a38; /* use_cluster_dependence_pathnames */
};

/* Struct for type DT_DATE_TIME */
struct S71 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S73 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S74 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* dynamic_type_set_count */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_dynamic_system */
	T0* a4; /* feature_checker */
	T0* a5; /* current_dynamic_type */
	T0* a6; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* object_id_dynamic_type_set */
	T0* a9; /* constant_indexes */
	T1 a10; /* catcall_error_mode */
	T1 a11; /* catcall_warning_mode */
	T1 a12; /* no_debug */
	T1 a13; /* no_assertion */
	T1 a14; /* is_built */
	T0* a15; /* alive_conforming_descendants_per_type */
	T0* a16; /* type_checker */
	T0* a17; /* current_type */
	T0* a18; /* current_class */
	T0* a19; /* current_feature */
	T0* a20; /* current_feature_impl */
	T0* a21; /* current_class_impl */
	T0* a22; /* enclosing_inline_agents */
	T0* a23; /* unused_overloaded_procedures_list */
	T0* a24; /* unused_overloaded_queries_list */
	T0* a25; /* unused_overloaded_features_list */
	T0* a26; /* unused_call_infos */
	T0* a27; /* unused_contexts */
	T0* a28; /* current_context */
	T0* a29; /* current_target_type */
	T0* a30; /* current_object_test_types */
	T0* a31; /* current_object_test_scope */
	T0* a32; /* object_test_scope_builder */
	T0* a33; /* current_iteration_cursor_types */
	T0* a34; /* current_iteration_item_types */
	T0* a35; /* current_iteration_item_scope */
	T0* a36; /* current_inline_separate_argument_types */
	T0* a37; /* current_inline_separate_argument_scope */
	T0* a38; /* current_initialization_scope */
	T0* a39; /* current_attachment_scope */
	T0* a40; /* attachment_scope_builder */
	T0* a41; /* unused_attachment_scopes */
	T0* a42; /* assertions_by_feature */
	T0* a43; /* common_ancestor_type_list */
	T0* a44; /* note_term_list */
	T0* a45; /* vape_non_descendant_clients */
	T0* a46; /* vape_creation_clients */
	T0* a47; /* vape_client */
	T0* a48; /* unused_adapted_base_classes */
	T0* a49; /* adapted_base_class_checker */
	T0* a50; /* system_processor */
	T6 a51; /* current_index */
	T6 a52; /* result_index */
	T6 a53; /* attached_result_index */
	T6 a54; /* void_index */
	T1 a55; /* in_precursor */
	T1 a56; /* in_static_feature */
	T1 a57; /* in_rescue */
	T0* a58; /* current_inline_agent */
	T0* a59; /* supplier_handler */
	T1 a60; /* in_invariant */
	T1 a61; /* in_precondition */
	T1 a62; /* in_postcondition */
	T1 a63; /* in_check_instruction */
	T0* a64; /* precursor_procedures */
	T0* a65; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S76 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_1 */
	T1 a6; /* tuple_actual_parameters_unfolded_2 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLASS */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T0* a2; /* status_mutex */
	T1 a3; /* unprotected_is_parsed */
	T1 a4; /* unprotected_has_syntax_error */
	T1 a5; /* unprotected_ancestors_built */
	T1 a6; /* unprotected_has_ancestors_error */
	T1 a7; /* unprotected_features_flattened */
	T1 a8; /* unprotected_has_flattening_error */
	T1 a9; /* unprotected_interface_checked */
	T1 a10; /* unprotected_has_interface_error */
	T1 a11; /* unprotected_implementation_checked */
	T1 a12; /* unprotected_has_implementation_error */
	T0* a13; /* name */
	T6 a14; /* id */
	T0* a15; /* ancestors */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* class_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* processing_mutex */
	T0* a22; /* formal_parameter_types_mutex */
	T0* a23; /* named_base_class */
	T6 a24; /* time_stamp */
	T8 a25; /* class_code */
	T1 a26; /* tuple_actual_parameters_unfolded_1 */
	T1 a27; /* tuple_actual_parameters_unfolded_2 */
	T1 a28; /* is_checking_implementation */
	T0* a29; /* formal_parameters */
	T6 a30; /* index */
	T0* a31; /* class_mark */
	T1 a32; /* has_deferred_features */
	T0* a33; /* formal_parameter_types */
	T1 a34; /* is_ignored */
	T0* a35; /* parent_clauses */
	T0* a36; /* suppliers */
	T1 a37; /* redeclared_signatures_checked */
	T0* a38; /* invariants */
	T0* a39; /* filename */
	T1 a40; /* unprotected_is_marked */
	T0* a41; /* creators */
	T0* a42; /* convert_features */
	T0* a43; /* providers */
	T1 a44; /* is_interface */
	T0* a45; /* external_keyword */
	T0* a46; /* frozen_keyword */
	T0* a47; /* feature_clauses */
	T0* a48; /* first_note_clause */
	T0* a49; /* second_note_clause */
	T6 a50; /* tuple_constraint_position */
	T0* a51; /* obsolete_message */
	T6 a52; /* registered_feature_count */
	T6 a53; /* registered_inline_constant_count */
	T0* a54; /* leading_break */
	T1 a55; /* has_utf8_bom */
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S79 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_MESSAGE */
struct S83 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S84 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* match_count */
	T0* a2; /* subject */
	T0* a3; /* offset_vector */
	T6 a4; /* offset_vector_count */
	T6 a5; /* brastart_capacity */
	T0* a6; /* brastart_vector */
	T6 a7; /* brastart_lower */
	T6 a8; /* brastart_count */
	T6 a9; /* eptr_capacity */
	T0* a10; /* eptr_vector */
	T6 a11; /* eptr_lower */
	T6 a12; /* eptr_upper */
	T0* a13; /* byte_code */
	T0* a14; /* internal_start_bits */
	T0* a15; /* pattern_buffer */
	T6 a16; /* subexpression_count */
	T0* a17; /* pattern */
	T6 a18; /* pattern_count */
	T6 a19; /* pattern_position */
	T6 a20; /* code_index */
	T6 a21; /* maxbackrefs */
	T10 a22; /* optchanged */
	T7 a23; /* first_character */
	T7 a24; /* required_character */
	T6 a25; /* regexp_countlits */
	T0* a26; /* start_bits */
	T0* a27; /* error_message */
	T1 a28; /* is_anchored */
	T0* a29; /* character_case_mapping */
	T0* a30; /* word_set */
	T6 a31; /* subject_next_start */
	T6 a32; /* subject_start */
	T6 a33; /* subject_end */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_multiline */
	T1 a39; /* is_dotall */
	T1 a40; /* is_extended */
	T1 a41; /* is_empty_allowed */
	T1 a42; /* is_dollar_endonly */
	T1 a43; /* is_bol */
	T1 a44; /* is_eol */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_STRING_ROUTINES */
struct S85 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S89 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_ERROR */
struct S90 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type ET_C_GENERATOR */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* extra_dynamic_type_sets */
	T0* a17; /* current_dynamic_type_sets */
	T0* a18; /* current_function_header_buffer */
	T0* a19; /* current_function_body_buffer */
	T0* a20; /* current_separate_function_header_buffer */
	T0* a21; /* current_separate_function_body_buffer */
	T0* a22; /* temp_variables */
	T0* a23; /* used_temp_variables */
	T0* a24; /* free_temp_variables */
	T0* a25; /* frozen_temp_variables */
	T0* a26; /* volatile_temp_variables */
	T0* a27; /* unused_equality_expressions */
	T0* a28; /* unused_equality_types */
	T0* a29; /* unused_object_equality_types */
	T0* a30; /* unused_unqualified_call_expressions */
	T0* a31; /* unused_qualified_call_expressions */
	T0* a32; /* unused_actual_argument_lists */
	T0* a33; /* unused_result_expressions */
	T0* a34; /* unused_identifiers */
	T0* a35; /* conforming_types */
	T0* a36; /* non_conforming_types */
	T0* a37; /* equality_type_set */
	T0* a38; /* equality_common_types */
	T0* a39; /* equality_common_reference_types */
	T0* a40; /* unused_standalone_type_sets */
	T0* a41; /* operand_stack */
	T0* a42; /* call_operands */
	T0* a43; /* attachment_dynamic_type_ids */
	T0* a44; /* target_dynamic_type_ids */
	T0* a45; /* target_dynamic_types */
	T0* a46; /* standalone_type_sets */
	T0* a47; /* deep_twin_types */
	T0* a48; /* deep_equal_types */
	T0* a49; /* deep_feature_target_type_sets */
	T0* a50; /* current_object_tests */
	T0* a51; /* current_object_test_locals */
	T0* a52; /* current_iteration_cursors */
	T0* a53; /* current_inline_separate_arguments */
	T0* a54; /* current_equalities */
	T0* a55; /* current_agents */
	T0* a56; /* agent_open_operands */
	T0* a57; /* agent_closed_operands */
	T0* a58; /* agent_target */
	T0* a59; /* agent_arguments */
	T0* a60; /* agent_instruction */
	T0* a61; /* agent_expression */
	T0* a62; /* agent_inline_separate_argument */
	T0* a63; /* agent_controlled_target_instruction */
	T0* a64; /* agent_expression_assignment */
	T0* a65; /* agent_controlled_target_expression */
	T0* a66; /* agent_closed_operands_type */
	T0* a67; /* agent_manifest_tuple */
	T0* a68; /* separate_call_arguments */
	T0* a69; /* separate_call_instruction */
	T0* a70; /* separate_call_expression */
	T0* a71; /* separate_arguments */
	T0* a72; /* formal_arguments */
	T0* a73; /* manifest_array_types */
	T0* a74; /* big_manifest_array_types */
	T0* a75; /* manifest_tuple_types */
	T0* a76; /* once_features */
	T0* a77; /* once_per_process_counts */
	T0* a78; /* once_per_thread_counts */
	T0* a79; /* constant_features */
	T0* a80; /* inline_constants */
	T0* a81; /* dispose_procedures */
	T0* a82; /* dynamic_type_id_set_names */
	T0* a83; /* used_inlined_operands */
	T0* a84; /* unused_inlined_operands */
	T0* a85; /* used_call_contexts */
	T0* a86; /* unused_call_contexts */
	T6 a87; /* max_nested_inlining_count */
	T0* a88; /* called_features */
	T0* a89; /* called_static_features */
	T0* a90; /* inlined_features */
	T0* a91; /* included_header_filenames */
	T0* a92; /* included_cpp_header_filenames */
	T0* a93; /* included_runtime_header_files */
	T0* a94; /* included_runtime_c_files */
	T0* a95; /* c_filenames */
	T1 a96; /* finalize_mode */
	T0* a97; /* locals_written_in_body */
	T0* a98; /* locals_written_in_rescue */
	T0* a99; /* locals_written */
	T0* a100; /* locals_read_in_body */
	T0* a101; /* locals_read_in_rescue */
	T0* a102; /* locals_read */
	T0* a103; /* volatile_locals */
	T0* a104; /* volatile_object_test_locals */
	T0* a105; /* volatile_iteration_cursors */
	T0* a106; /* volatile_inline_separate_arguments */
	T0* a107; /* external_c_regexp */
	T0* a108; /* external_c_macro_regexp */
	T0* a109; /* external_c_struct_regexp */
	T0* a110; /* external_c_inline_regexp */
	T0* a111; /* old_external_c_regexp */
	T0* a112; /* old_external_c_macro_regexp */
	T0* a113; /* old_external_c_struct_regexp */
	T0* a114; /* external_cpp_regexp */
	T0* a115; /* external_cpp_macro_regexp */
	T0* a116; /* external_cpp_struct_regexp */
	T0* a117; /* external_cpp_inline_regexp */
	T0* a118; /* external_dllwin_regexp */
	T0* a119; /* old_external_dllwin32_regexp */
	T1 a120; /* in_static_feature */
	T1 a121; /* type_info_ancestors_used */
	T1 a122; /* type_info_attributes_used */
	T1 a123; /* type_info_attribute_name_used */
	T1 a124; /* type_info_attribute_type_id_used */
	T1 a125; /* type_info_attribute_offset_used */
	T1 a126; /* type_info_generator_used */
	T1 a127; /* type_info_name_used */
	T1 a128; /* type_info_generic_parameters_used */
	T1 a129; /* type_info_object_size_used */
	T0* a130; /* c_file */
	T6 a131; /* c_file_size */
	T6 a132; /* current_separate_call_count */
	T0* a133; /* cpp_file */
	T6 a134; /* cpp_file_size */
	T6 a135; /* indentation */
	T0* a136; /* call_target_type */
	T0* a137; /* assignment_target */
	T1 a138; /* in_operand */
	T1 a139; /* in_procedure_call_target */
	T0* a140; /* current_agent */
	T0* a141; /* inlining_context */
	T1 a142; /* has_rescue */
	T1 a143; /* result_written */
	T1 a144; /* result_read */
	T1 a145; /* call_target_check_void */
	T6 a146; /* nested_inlining_count */
	T1 a147; /* volatile_result */
	T1 a148; /* has_retry */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
struct S93 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SHELL_COMMAND */
struct S94 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* command */
	T6 a3; /* return_code */
	T1 a4; /* is_system_code */
};

/* Struct for type GECC */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* error_handler */
	T0* a3; /* version_flag */
	T0* a4; /* script_filename */
	T0* a5; /* thread_option */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S96 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type VOID_TARGET */
struct S98 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* routine_name */
	T0* a4; /* class_name */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T1 a3; /* is_entry */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* signal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T6 a4; /* error_code */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* error_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* hresult_code */
	T0* a4; /* exception_information */
	T6 a5; /* hresult */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T6 a3; /* internal_code */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type ARGUMENTS_32 */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type MUTEX */
struct S138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* owner_thread_id */
	T14 a2; /* mutex_pointer */
};

/* Struct for type UT_ERROR_HANDLER */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type KL_STDOUT_FILE */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T1 a2; /* is_shared */
	T6 a3; /* count */
};

/* Struct for type FILE_INFO */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type ST_WORD_WRAPPER */
struct S146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type AP_ERROR_HANDLER */
struct S152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKABLE [AP_OPTION] */
struct S153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable STRING_8] */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
struct S156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM] */
struct S168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_TARGET] */
struct S169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER] */
struct S172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type XM_ELEMENT */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
struct S175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
struct S176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* start */
	T0* a2; /* tree */
	T0* a3; /* error */
	T0* a4; /* last */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_ECF_STATE */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
};

/* Struct for type ET_IDENTIFIER */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a3; /* status_code */
	T0* a4; /* name */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type ET_ECF_SYSTEM_CONFIG */
struct S190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T0* a4; /* ecf_namespace */
	T0* a5; /* ecf_version */
	T0* a6; /* description */
	T0* a7; /* notes */
	T0* a8; /* targets */
	T1 a9; /* is_read_only */
	T0* a10; /* uuid */
	T0* a11; /* library_target */
};

/* Struct for type ET_ECF_LIBRARY */
struct S192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* ecf_namespace */
	T0* a4; /* ecf_version */
	T0* a5; /* description */
	T0* a6; /* notes */
	T0* a7; /* targets */
	T1 a8; /* is_read_only */
	T0* a9; /* uuid */
	T0* a10; /* library_target */
	T0* a11; /* current_system */
	T0* a12; /* library */
	T0* a13; /* libraries */
	T0* a14; /* clusters */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* implicit_attachment_type_mark */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_identity_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_none_type */
	T0* a32; /* array_identity_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_identity_any_type */
	T0* a44; /* immutable_string_8_type */
	T0* a45; /* immutable_string_32_type */
	T0* a46; /* integer_type */
	T0* a47; /* integer_8_type */
	T0* a48; /* integer_8_convert_feature */
	T0* a49; /* integer_16_type */
	T0* a50; /* integer_16_convert_feature */
	T0* a51; /* integer_32_type */
	T0* a52; /* integer_32_convert_feature */
	T0* a53; /* integer_64_type */
	T0* a54; /* integer_64_convert_feature */
	T0* a55; /* ise_exception_manager_type */
	T0* a56; /* iterable_detachable_separate_any_type */
	T0* a57; /* natural_type */
	T0* a58; /* natural_8_type */
	T0* a59; /* natural_8_convert_feature */
	T0* a60; /* natural_16_type */
	T0* a61; /* natural_16_convert_feature */
	T0* a62; /* natural_32_type */
	T0* a63; /* natural_32_convert_feature */
	T0* a64; /* natural_64_type */
	T0* a65; /* natural_64_convert_feature */
	T0* a66; /* none_type */
	T0* a67; /* detachable_none_type */
	T0* a68; /* pointer_type */
	T0* a69; /* predicate_identity_type */
	T0* a70; /* procedure_identity_type */
	T0* a71; /* real_type */
	T0* a72; /* real_32_type */
	T0* a73; /* real_32_convert_feature */
	T0* a74; /* real_64_type */
	T0* a75; /* real_64_convert_feature */
	T0* a76; /* routine_identity_type */
	T0* a77; /* special_any_type */
	T0* a78; /* special_detachable_any_type */
	T0* a79; /* special_identity_type */
	T0* a80; /* string_type */
	T0* a81; /* detachable_string_type */
	T0* a82; /* string_8_type */
	T0* a83; /* detachable_string_8_type */
	T0* a84; /* string_8_convert_feature */
	T0* a85; /* string_32_type */
	T0* a86; /* string_32_convert_feature */
	T0* a87; /* system_object_type */
	T0* a88; /* system_object_parents */
	T0* a89; /* system_string_type */
	T0* a90; /* type_detachable_any_type */
	T0* a91; /* detachable_type_exception_type */
	T0* a92; /* type_detachable_exception_type */
	T0* a93; /* type_detachable_like_current_type */
	T0* a94; /* type_identity_type */
	T0* a95; /* typed_pointer_identity_type */
	T0* a96; /* wide_character_type */
	T0* a97; /* selected_target */
	T1 a98; /* obsolete_iteration_mode */
	T1 a99; /* obsolete_routine_type_mode */
	T1 a100; /* is_preparsed */
	T1 a101; /* use_obsolete_syntax_mode */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type TUPLE [ET_ADAPTED_LIBRARY] */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type XM_DOCUMENT */
struct S197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_ATTRIBUTE */
struct S201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* equality_tester */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
struct S204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T0* a4; /* key_storage */
	T0* a5; /* item_storage */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_ECF_TARGET_PARENT */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* location_id */
	T0* a3; /* target */
};

/* Struct for type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_TARGETS */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_CELL [detachable ET_ECF_LIBRARY] */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* classname_prefix */
	T1 a7; /* is_read_only */
	T1 a8; /* use_application_options */
	T0* a9; /* options */
	T0* a10; /* class_options */
	T0* a11; /* class_renamings */
	T0* a12; /* visible_classes */
	T0* a13; /* conditions */
	T0* a14; /* notes */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_8_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* detachable_string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* type_identity_type */
	T0* a85; /* typed_pointer_identity_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* assembly_culture */
	T0* a7; /* assembly_key */
	T0* a8; /* assembly_name */
	T0* a9; /* assembly_version */
	T0* a10; /* classname_prefix */
	T1 a11; /* is_read_only */
	T0* a12; /* options */
	T0* a13; /* class_options */
	T0* a14; /* class_renamings */
	T0* a15; /* conditions */
	T0* a16; /* notes */
	T0* a17; /* name */
	T0* a18; /* dotnet_assembly */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* slots_position */
	T0* a12; /* hash_function */
	T6 a13; /* capacity */
	T0* a14; /* equality_tester */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* clashes */
	T0* a19; /* slots */
	T0* a20; /* special_key_routines */
};

/* Struct for type ET_ECF_ERROR */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* system_config */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type TUPLE [STRING_8] */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
struct S224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES] */
struct S225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
struct S227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_alive */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T6 a4; /* id */
	T0* a5; /* base_type */
	T0* a6; /* base_class */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* attached_type */
	T0* a10; /* meta_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* procedures_by_seed */
	T0* a13; /* procedures */
	T0* a14; /* queries_by_seed */
	T1 a15; /* has_redefined_copy_routine */
	T1 a16; /* has_redefined_is_equal_routine */
	T1 a17; /* has_once_per_object_routines */
	T6 a18; /* hash_code */
	T0* a19; /* next_type */
	T1 a20; /* has_reference_attributes */
	T0* a21; /* query_calls */
	T0* a22; /* procedure_calls */
	T1 a23; /* has_static */
	T0* a24; /* equality_expressions */
	T0* a25; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T0* a4; /* equality_tester */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type TUPLE [ET_CLASS] */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLASS]] */
struct S234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [INTEGER_32] */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* dynamic_type_set_count */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_dynamic_system */
	T1 a4; /* catcall_error_mode */
	T1 a5; /* catcall_warning_mode */
	T1 a6; /* no_debug */
	T1 a7; /* no_assertion */
	T0* a8; /* alive_conforming_descendants_per_type */
};

/* Struct for type TUPLE [ET_DYNAMIC_SYSTEM] */
struct S237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T1 a5; /* is_generated */
	T1 a6; /* is_inlined */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T0* a9; /* result_type_set */
	T1 a10; /* is_copy_routine */
	T1 a11; /* is_is_equal_routine */
	T0* a12; /* procedure_calls */
	T0* a13; /* query_calls */
	T1 a14; /* is_regular */
	T0* a15; /* first_precursor */
	T1 a16; /* is_creation */
	T0* a17; /* other_precursors */
	T1 a18; /* is_built */
	T1 a19; /* is_address */
	T1 a20; /* is_static_generated */
	T1 a21; /* is_separate_creation */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T6 a3; /* index */
	T0* a4; /* implementation_class */
};

/* Struct for type ARRAY [ET_TYPE] */
struct S250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* postconditions */
	T0* a15; /* assigner */
	T0* a16; /* frozen_keyword */
	T0* a17; /* extended_name */
	T0* a18; /* declared_type */
	T0* a19; /* language */
	T0* a20; /* obsolete_message */
	T0* a21; /* alias_clause */
	T0* a22; /* clients */
	T0* a23; /* is_keyword */
	T0* a24; /* end_keyword */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_note */
	T0* a28; /* inline_separate_arguments */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T6 a31; /* id */
	T6 a32; /* version */
	T0* a33; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T0* a2; /* type_mark */
	T0* a3; /* named_base_class */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
	T6 a4; /* declared_attribute_count */
	T6 a5; /* attribute_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_SYSTEM_MULTIPROCESSOR */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* benchmark_shown */
	T1 a2; /* nested_benchmark_shown */
	T0* a3; /* interface_checker */
	T0* a4; /* stop_request */
	T0* a5; /* eiffel_parser */
	T0* a6; /* error_handler */
	T0* a7; /* implementation_checker */
	T0* a8; /* ise_version */
	T0* a9; /* other_processors */
	T0* a10; /* eiffel_preparser */
	T0* a11; /* master_class_checker */
	T0* a12; /* provider_checker */
	T0* a13; /* ancestor_builder */
	T0* a14; /* feature_flattener */
	T0* a15; /* ecma_version */
	T1 a16; /* metrics_shown */
	T1 a17; /* flat_mode */
	T1 a18; /* flat_dbc_mode */
	T0* a19; /* processed_class_count_stack */
	T0* a20; /* ast_factory */
	T0* a21; /* dotnet_assembly_consumer */
	T1 a22; /* use_attribute_keyword */
	T1 a23; /* use_note_keyword */
	T1 a24; /* use_reference_keyword */
	T1 a25; /* use_attached_keyword */
	T1 a26; /* use_detachable_keyword */
	T1 a27; /* preparse_shallow_mode */
	T1 a28; /* preparse_single_mode */
	T1 a29; /* preparse_multiple_mode */
	T1 a30; /* unknown_builtin_reported */
	T1 a31; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a32; /* cluster_dependence_enabled */
	T6 a33; /* postponed_class_count */
	T6 a34; /* processed_class_count */
	T1 a35; /* preparse_override_mode */
	T1 a36; /* preparse_readonly_mode */
	T1 a37; /* suppliers_enabled */
	T1 a38; /* providers_enabled */
	T1 a39; /* use_cluster_dependence_pathnames */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CHECKER */
struct S270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_checker */
	T0* a2; /* current_type */
	T0* a3; /* current_class */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* unused_overloaded_procedures_list */
	T0* a9; /* unused_overloaded_queries_list */
	T0* a10; /* unused_overloaded_features_list */
	T0* a11; /* unused_call_infos */
	T0* a12; /* unused_contexts */
	T0* a13; /* current_context */
	T0* a14; /* current_target_type */
	T0* a15; /* current_object_test_types */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
	T0* a18; /* current_iteration_cursor_types */
	T0* a19; /* current_iteration_item_types */
	T0* a20; /* current_iteration_item_scope */
	T0* a21; /* current_inline_separate_argument_types */
	T0* a22; /* current_inline_separate_argument_scope */
	T0* a23; /* current_initialization_scope */
	T0* a24; /* current_attachment_scope */
	T0* a25; /* attachment_scope_builder */
	T0* a26; /* unused_attachment_scopes */
	T0* a27; /* assertions_by_feature */
	T0* a28; /* common_ancestor_type_list */
	T0* a29; /* note_term_list */
	T0* a30; /* vape_non_descendant_clients */
	T0* a31; /* vape_creation_clients */
	T0* a32; /* vape_client */
	T0* a33; /* unused_adapted_base_classes */
	T0* a34; /* adapted_base_class_checker */
	T0* a35; /* system_processor */
	T1 a36; /* has_fatal_error */
	T1 a37; /* in_static_feature */
	T1 a38; /* in_precondition */
	T0* a39; /* supplier_handler */
	T1 a40; /* in_invariant */
	T0* a41; /* precursor_queries */
	T0* a42; /* precursor_procedures */
	T1 a43; /* in_postcondition */
	T1 a44; /* in_precursor */
	T1 a45; /* in_rescue */
	T0* a46; /* current_inline_agent */
	T1 a47; /* in_check_instruction */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_static_generated */
	T0* a2; /* target_type */
	T0* a3; /* static_feature */
	T0* a4; /* dynamic_type_sets */
	T0* a5; /* current_feature */
	T6 a6; /* id */
	T0* a7; /* result_type_set */
	T1 a8; /* is_regular */
	T1 a9; /* is_creation */
	T1 a10; /* is_address */
	T8 a11; /* builtin_class_code */
	T8 a12; /* builtin_feature_code */
	T1 a13; /* is_built */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T1 a16; /* is_copy_routine */
	T1 a17; /* is_generated */
	T1 a18; /* is_inlined */
	T1 a19; /* is_is_equal_routine */
	T0* a20; /* parent_type */
	T0* a21; /* query_calls */
	T0* a22; /* procedure_calls */
	T1 a23; /* is_separate_creation */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* modulus */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* adapted_base_class_checker */
	T0* a9; /* adapted_base_classes */
	T0* a10; /* system_processor */
	T0* a11; /* supplier_handler */
	T1 a12; /* has_fatal_error */
	T1 a13; /* class_interface_error_only */
	T1 a14; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ITERATION_ITEM_SCOPE */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* iteration_components */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* inline_separate_arguments */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T6 a13; /* modulus */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* special_item_routines */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_NOTE_TERM] */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_CLIENT_LIST */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENT */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_ADAPTED_BASE_CLASS_CHECKER */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class_impl */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T1 a4; /* feature_flattening_error_only */
	T1 a5; /* has_fatal_error */
	T1 a6; /* class_interface_error_only */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* static_call */
	T0* a3; /* target_type_set */
	T0* a4; /* result_type_set */
	T0* a5; /* current_type */
	T0* a6; /* next */
	T1 a7; /* is_generated */
	T1 a8; /* force_result_boxing */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_call */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
	T1 a6; /* is_generated */
};

/* Struct for type ET_PRECONDITIONS */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* require_keyword */
	T0* a6; /* else_keyword */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* attached_type */
	T0* a10; /* meta_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* queries_by_seed */
	T0* a13; /* procedures_by_seed */
	T0* a14; /* procedures */
	T1 a15; /* has_redefined_copy_routine */
	T0* a16; /* item_type_sets */
	T1 a17; /* has_redefined_is_equal_routine */
	T1 a18; /* has_once_per_object_routines */
	T1 a19; /* has_reference_attributes */
	T6 a20; /* hash_code */
	T0* a21; /* next_type */
	T0* a22; /* query_calls */
	T0* a23; /* procedure_calls */
	T1 a24; /* has_static */
	T0* a25; /* equality_expressions */
	T0* a26; /* object_equality_expressions */
};

/* Struct for type ET_FEATURE_LIST */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type RX_BYTE_CODE */
struct S322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_empty */
	T1 a2; /* is_negated */
	T11 a3; /* first_set */
	T11 a4; /* second_set */
	T11 a5; /* third_set */
	T11 a6; /* fourth_set */
	T0* a7; /* other_sets */
	T1 a8; /* is_reverted */
};

/* Struct for type RX_CASE_MAPPING */
struct S324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type UC_STRING */
struct S329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENTS */
struct S332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* separate_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_COMPOUND */
struct S333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_RESULT */
struct S334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [BOOLEAN] */
struct S339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
struct S341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
struct S344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
struct S345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_RESULT] */
struct S346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
struct S347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T0* a3; /* dynamic_types */
	T1 a4; /* is_never_void */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
struct S354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T6 a3; /* position */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* arguments */
	T0* a4; /* qualified_name */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT */
struct S364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* as_keyword */
	T0* a3; /* name */
};

/* Struct for type ET_INLINE_SEPARATE_INSTRUCTION */
struct S367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_ASSIGNMENT */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T1 a4; /* no_target_twin */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
	T6 a5; /* index */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
struct S375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
struct S381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string_32 */
	T0* a6; /* last_string */
	T0* a7; /* internal_name */
	T0* a8; /* internal_detachable_name_pointer */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_separate_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_reference_mark */
	T1 a5; /* is_detachable_mark */
	T1 a6; /* is_non_separate_mark */
};

/* Struct for type DS_STRING_HASH_TABLE */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T0* a5; /* key_equality_tester */
	T0* a6; /* slots */
	T0* a7; /* hash_function */
	T0* a8; /* key_storage */
	T0* a9; /* clashes */
	T6 a10; /* count */
	T6 a11; /* capacity */
	T6 a12; /* slots_position */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T0* a15; /* internal_keys */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* equality_tester */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_DYNAMIC_EQUALITY_TYPES */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left */
	T0* a2; /* right */
};

/* Struct for type ET_OBJECT_TEST */
struct S394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
struct S395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left */
	T0* a2; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* attached_type */
	T0* a10; /* meta_type */
	T0* a11; /* conforming_ancestors */
	T0* a12; /* queries_by_seed */
	T0* a13; /* procedures_by_seed */
	T0* a14; /* procedures */
	T0* a15; /* item_type_set */
	T1 a16; /* has_redefined_copy_routine */
	T1 a17; /* has_redefined_is_equal_routine */
	T1 a18; /* has_once_per_object_routines */
	T1 a19; /* has_reference_attributes */
	T6 a20; /* hash_code */
	T0* a21; /* next_type */
	T0* a22; /* query_calls */
	T0* a23; /* procedure_calls */
	T1 a24; /* has_static */
	T0* a25; /* equality_expressions */
	T0* a26; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_SECONDARY_TYPE */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_type */
	T0* a2; /* meta_type */
	T0* a3; /* type_mark */
	T0* a4; /* internal_base_type */
};

/* Struct for type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
struct S401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* internal_separate_target */
	T0* a4; /* default_create_name */
	T0* a5; /* creation_type */
	T0* a6; /* create_keyword */
	T0* a7; /* creation_region */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T0* a3; /* name */
	T6 a4; /* mode */
	T0* a5; /* internal_detachable_name_pointer */
	T0* a6; /* string_name */
	T0* a7; /* entry_buffer */
	T1 a8; /* old_end_of_input */
	T14 a9; /* directory_pointer */
	T14 a10; /* last_entry_pointer */
	T0* a11; /* lastentry */
	T0* a12; /* internal_name */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_QUICK_SORTER [STRING_8] */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type UC_STRING_COMPARATOR */
struct S413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_DYNAMIC_INLINED_EXPRESSION */
struct S423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dynamic_type_set */
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* context */
};

/* Struct for type ET_DYNAMIC_CALL_CONTEXT */
struct S424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* arguments */
	T0* a3; /* target */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type PROCEDURE [TUPLE] */
struct S427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* implementation_feature */
	T0* a6; /* other_seeds */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T0* a9; /* preconditions */
	T6 a10; /* hash_code */
	T0* a11; /* postconditions */
	T0* a12; /* assigner */
	T0* a13; /* declared_type */
	T0* a14; /* locals */
	T0* a15; /* rescue_clause */
	T0* a16; /* compound */
	T0* a17; /* frozen_keyword */
	T0* a18; /* extended_name */
	T0* a19; /* obsolete_message */
	T0* a20; /* clients */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_note */
	T0* a25; /* inline_separate_arguments */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* implementation_feature */
	T0* a6; /* other_seeds */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T6 a9; /* hash_code */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* frozen_keyword */
	T0* a13; /* extended_name */
	T0* a14; /* clients */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_note */
	T0* a18; /* inline_separate_arguments */
	T1 a19; /* validity_checked */
	T1 a20; /* has_validity_error */
	T6 a21; /* id */
	T6 a22; /* version */
	T0* a23; /* synonym */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_ITERATION_COMPONENT_LIST */
struct S447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
struct S450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
	T6 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* constant */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T6 a10; /* hash_code */
	T0* a11; /* assigner */
	T0* a12; /* declared_type */
	T0* a13; /* frozen_keyword */
	T0* a14; /* extended_name */
	T0* a15; /* clients */
	T0* a16; /* is_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_note */
	T0* a20; /* inline_separate_arguments */
	T1 a21; /* validity_checked */
	T1 a22; /* has_validity_error */
	T6 a23; /* id */
	T6 a24; /* version */
	T0* a25; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constant */
	T6 a2; /* id */
	T6 a3; /* first_seed */
	T0* a4; /* iteration_components */
	T0* a5; /* implementation_class */
	T0* a6; /* object_tests */
	T0* a7; /* implementation_feature */
	T0* a8; /* other_seeds */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T6 a11; /* hash_code */
	T0* a12; /* assigner */
	T0* a13; /* declared_type */
	T0* a14; /* frozen_keyword */
	T0* a15; /* extended_name */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* unique_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_note */
	T0* a22; /* inline_separate_arguments */
	T1 a23; /* validity_checked */
	T1 a24; /* has_validity_error */
	T6 a25; /* version */
	T0* a26; /* synonym */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 a1; /* value */
	T0* a2; /* sign */
	T0* a3; /* literal */
	T1 a4; /* has_overflow */
	T6 a5; /* compressed_position */
	T6 a6; /* index */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
struct S457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
struct S458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
struct S459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type NATIVE_STRING */
struct S462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
struct S463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
	T0* z4;
};

/* Struct for type WORKER_THREAD */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* thread_procedure */
	T0* a2; /* launch_mutex */
	T14 a3; /* thread_id */
	T1 a4; /* terminated */
};

/* Struct for type PATH */
struct S466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type STD_FILES */
struct S470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type DS_CELL [detachable ET_ECF_CONFIG] */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_OPTIONS */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_assertions */
	T0* a2; /* primary_debugs */
	T0* a3; /* primary_warnings */
	T0* a4; /* primary_options */
	T0* a5; /* description */
	T0* a6; /* secondary_options */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_NAMESPACE */
struct S481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_ECF_REDIRECTION_CONFIG */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uuid */
	T0* a2; /* location */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* message */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
};

/* Struct for type ET_CLUSTERS */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* clients_clause */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_MASTER_CLASS */
struct S491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* mapped_class */
	T0* a2; /* first_overriding_class */
	T0* a3; /* intrinsic_class */
	T0* a4; /* name */
	T0* a5; /* universe */
	T0* a6; /* status_mutex */
	T0* a7; /* processing_mutex */
	T1 a8; /* unprotected_is_marked */
	T0* a9; /* first_imported_class */
	T0* a10; /* other_imported_classes */
	T0* a11; /* first_local_ignored_class */
	T0* a12; /* other_local_ignored_classes */
	T0* a13; /* first_local_override_class */
	T0* a14; /* other_local_override_classes */
	T0* a15; /* first_local_non_override_class */
	T0* a16; /* other_local_non_override_classes */
	T0* a17; /* first_local_hidden_class */
	T1 a18; /* is_modified */
	T0* a19; /* other_overriding_classes */
	T0* a20; /* other_local_hidden_classes */
};

/* Struct for type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_mark */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* rename_keyword */
};

/* Struct for type ET_EXPORT_LIST */
struct S494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* export_keyword */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_NONE_GROUP */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type ET_LIKE_CURRENT */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
	T1 a4; /* is_controlled */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* meta_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T1 a12; /* has_redefined_is_equal_routine */
	T1 a13; /* has_redefined_copy_routine */
	T0* a14; /* open_operand_tuple_type_set */
	T0* a15; /* set_rout_disp_final_feature */
	T0* a16; /* next_type */
	T1 a17; /* has_once_per_object_routines */
	T0* a18; /* procedures */
	T0* a19; /* query_calls */
	T0* a20; /* procedure_calls */
	T1 a21; /* has_static */
	T0* a22; /* open_operand_type_sets */
	T6 a23; /* hash_code */
	T0* a24; /* queries_by_seed */
	T0* a25; /* procedures_by_seed */
	T1 a26; /* has_reference_attributes */
	T0* a27; /* equality_expressions */
	T0* a28; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* separate_type */
	T0* a8; /* attached_separate_type */
	T0* a9; /* meta_type */
	T0* a10; /* attached_type */
	T0* a11; /* conforming_ancestors */
	T1 a12; /* has_redefined_is_equal_routine */
	T1 a13; /* has_redefined_copy_routine */
	T0* a14; /* open_operand_tuple_type_set */
	T0* a15; /* set_rout_disp_final_feature */
	T0* a16; /* next_type */
	T1 a17; /* has_once_per_object_routines */
	T0* a18; /* procedures */
	T0* a19; /* query_calls */
	T0* a20; /* procedure_calls */
	T1 a21; /* has_static */
	T0* a22; /* open_operand_type_sets */
	T0* a23; /* result_type_set */
	T6 a24; /* hash_code */
	T0* a25; /* queries_by_seed */
	T0* a26; /* procedures_by_seed */
	T1 a27; /* has_reference_attributes */
	T0* a28; /* equality_expressions */
	T0* a29; /* object_equality_expressions */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T6 a8; /* verbatim_marker_count */
	T0* a9; /* verbatim_open_white_characters */
	T0* a10; /* verbatim_close_white_characters */
	T0* a11; /* yy_pushed_start_conditions */
	T0* a12; /* input_buffer */
	T0* a13; /* yy_state_stack */
	T6 a14; /* yy_start_state */
	T6 a15; /* yy_line */
	T6 a16; /* yy_column */
	T6 a17; /* yy_position */
	T6 a18; /* yy_start */
	T6 a19; /* yy_end */
	T6 a20; /* line */
	T6 a21; /* column */
	T6 a22; /* position */
	T0* a23; /* yy_nxt */
	T0* a24; /* yy_chk */
	T0* a25; /* yy_base */
	T0* a26; /* yy_def */
	T0* a27; /* yy_ec */
	T0* a28; /* yy_meta */
	T0* a29; /* yy_accept */
	T0* a30; /* yy_acclist */
	T0* a31; /* yy_content */
	T0* a32; /* yy_content_area */
	T0* a33; /* yy_unicode_content_area */
	T0* a34; /* last_classname */
	T1 a35; /* class_keyword_found */
	T6 a36; /* last_token */
	T1 a37; /* yy_more_flag */
	T6 a38; /* yy_more_len */
	T6 a39; /* yy_state_count */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T6 a42; /* yy_lp */
	T6 a43; /* yy_looking_for_trail_begin */
	T6 a44; /* yy_full_match */
	T6 a45; /* yy_full_state */
	T6 a46; /* yy_full_lp */
	T1 a47; /* yy_rejected */
	T6 a48; /* last_literal_end */
	T6 a49; /* pushed_start_condition_count */
	T6 a50; /* ms_column */
	T6 a51; /* ms_line */
	T6 a52; /* last_break_end */
	T6 a53; /* last_comment_end */
	T3 a54; /* verbatim_opening_character */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_iteration_components_stack */
	T0* a10; /* last_iteration_components_pool */
	T0* a11; /* last_inline_separate_arguments_stack */
	T0* a12; /* last_inline_separate_arguments_pool */
	T0* a13; /* assertions */
	T0* a14; /* assertion_counters */
	T0* a15; /* assertion_kinds */
	T6 a16; /* assertion_kind */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* constraints */
	T0* a20; /* providers */
	T0* a21; /* current_class */
	T0* a22; /* system_processor */
	T6 a23; /* last_text_count */
	T6 a24; /* last_literal_start */
	T0* a25; /* filename */
	T0* a26; /* group */
	T0* a27; /* verbatim_marker */
	T6 a28; /* verbatim_marker_count */
	T0* a29; /* verbatim_open_white_characters */
	T0* a30; /* verbatim_close_white_characters */
	T0* a31; /* yyss */
	T0* a32; /* yy_pushed_start_conditions */
	T0* a33; /* input_buffer */
	T0* a34; /* yyspecial_routines1 */
	T6 a35; /* yyvsc1 */
	T0* a36; /* yyvs1 */
	T0* a37; /* yyspecial_routines2 */
	T6 a38; /* yyvsc2 */
	T0* a39; /* yyvs2 */
	T0* a40; /* yyspecial_routines3 */
	T6 a41; /* yyvsc3 */
	T0* a42; /* yyvs3 */
	T0* a43; /* yyspecial_routines4 */
	T6 a44; /* yyvsc4 */
	T0* a45; /* yyvs4 */
	T0* a46; /* yyspecial_routines5 */
	T6 a47; /* yyvsc5 */
	T0* a48; /* yyvs5 */
	T0* a49; /* yyspecial_routines6 */
	T6 a50; /* yyvsc6 */
	T0* a51; /* yyvs6 */
	T0* a52; /* yyspecial_routines7 */
	T6 a53; /* yyvsc7 */
	T0* a54; /* yyvs7 */
	T0* a55; /* yyspecial_routines8 */
	T6 a56; /* yyvsc8 */
	T0* a57; /* yyvs8 */
	T0* a58; /* yyspecial_routines9 */
	T6 a59; /* yyvsc9 */
	T0* a60; /* yyvs9 */
	T0* a61; /* yyspecial_routines10 */
	T6 a62; /* yyvsc10 */
	T0* a63; /* yyvs10 */
	T0* a64; /* yyspecial_routines11 */
	T6 a65; /* yyvsc11 */
	T0* a66; /* yyvs11 */
	T0* a67; /* yyspecial_routines12 */
	T6 a68; /* yyvsc12 */
	T0* a69; /* yyvs12 */
	T0* a70; /* yyspecial_routines13 */
	T6 a71; /* yyvsc13 */
	T0* a72; /* yyvs13 */
	T0* a73; /* yyspecial_routines14 */
	T6 a74; /* yyvsc14 */
	T0* a75; /* yyvs14 */
	T0* a76; /* yyspecial_routines15 */
	T6 a77; /* yyvsc15 */
	T0* a78; /* yyvs15 */
	T0* a79; /* yyspecial_routines16 */
	T6 a80; /* yyvsc16 */
	T0* a81; /* yyvs16 */
	T0* a82; /* yyspecial_routines17 */
	T6 a83; /* yyvsc17 */
	T0* a84; /* yyvs17 */
	T0* a85; /* yyspecial_routines18 */
	T6 a86; /* yyvsc18 */
	T0* a87; /* yyvs18 */
	T0* a88; /* yyspecial_routines19 */
	T6 a89; /* yyvsc19 */
	T0* a90; /* yyvs19 */
	T0* a91; /* yyspecial_routines20 */
	T6 a92; /* yyvsc20 */
	T0* a93; /* yyvs20 */
	T0* a94; /* yyspecial_routines21 */
	T6 a95; /* yyvsc21 */
	T0* a96; /* yyvs21 */
	T0* a97; /* yyspecial_routines22 */
	T6 a98; /* yyvsc22 */
	T0* a99; /* yyvs22 */
	T0* a100; /* yyspecial_routines23 */
	T6 a101; /* yyvsc23 */
	T0* a102; /* yyvs23 */
	T0* a103; /* yyspecial_routines24 */
	T6 a104; /* yyvsc24 */
	T0* a105; /* yyvs24 */
	T0* a106; /* yyspecial_routines25 */
	T6 a107; /* yyvsc25 */
	T0* a108; /* yyvs25 */
	T0* a109; /* yyspecial_routines26 */
	T6 a110; /* yyvsc26 */
	T0* a111; /* yyvs26 */
	T0* a112; /* yyspecial_routines27 */
	T6 a113; /* yyvsc27 */
	T0* a114; /* yyvs27 */
	T0* a115; /* yyspecial_routines28 */
	T6 a116; /* yyvsc28 */
	T0* a117; /* yyvs28 */
	T0* a118; /* yyspecial_routines29 */
	T6 a119; /* yyvsc29 */
	T0* a120; /* yyvs29 */
	T0* a121; /* yyspecial_routines30 */
	T6 a122; /* yyvsc30 */
	T0* a123; /* yyvs30 */
	T0* a124; /* yyspecial_routines31 */
	T6 a125; /* yyvsc31 */
	T0* a126; /* yyvs31 */
	T0* a127; /* yyspecial_routines32 */
	T6 a128; /* yyvsc32 */
	T0* a129; /* yyvs32 */
	T0* a130; /* yyspecial_routines33 */
	T6 a131; /* yyvsc33 */
	T0* a132; /* yyvs33 */
	T0* a133; /* yyspecial_routines34 */
	T6 a134; /* yyvsc34 */
	T0* a135; /* yyvs34 */
	T0* a136; /* yyspecial_routines35 */
	T6 a137; /* yyvsc35 */
	T0* a138; /* yyvs35 */
	T0* a139; /* yyspecial_routines36 */
	T6 a140; /* yyvsc36 */
	T0* a141; /* yyvs36 */
	T0* a142; /* yyspecial_routines37 */
	T6 a143; /* yyvsc37 */
	T0* a144; /* yyvs37 */
	T0* a145; /* yyspecial_routines38 */
	T6 a146; /* yyvsc38 */
	T0* a147; /* yyvs38 */
	T0* a148; /* yyspecial_routines39 */
	T6 a149; /* yyvsc39 */
	T0* a150; /* yyvs39 */
	T0* a151; /* yyspecial_routines40 */
	T6 a152; /* yyvsc40 */
	T0* a153; /* yyvs40 */
	T0* a154; /* yyspecial_routines41 */
	T6 a155; /* yyvsc41 */
	T0* a156; /* yyvs41 */
	T0* a157; /* yyspecial_routines42 */
	T6 a158; /* yyvsc42 */
	T0* a159; /* yyvs42 */
	T0* a160; /* yyspecial_routines43 */
	T6 a161; /* yyvsc43 */
	T0* a162; /* yyvs43 */
	T0* a163; /* yyspecial_routines44 */
	T6 a164; /* yyvsc44 */
	T0* a165; /* yyvs44 */
	T0* a166; /* yyspecial_routines45 */
	T6 a167; /* yyvsc45 */
	T0* a168; /* yyvs45 */
	T0* a169; /* yyspecial_routines46 */
	T6 a170; /* yyvsc46 */
	T0* a171; /* yyvs46 */
	T0* a172; /* yyspecial_routines47 */
	T6 a173; /* yyvsc47 */
	T0* a174; /* yyvs47 */
	T0* a175; /* yyspecial_routines48 */
	T6 a176; /* yyvsc48 */
	T0* a177; /* yyvs48 */
	T0* a178; /* yyspecial_routines49 */
	T6 a179; /* yyvsc49 */
	T0* a180; /* yyvs49 */
	T0* a181; /* yyspecial_routines50 */
	T6 a182; /* yyvsc50 */
	T0* a183; /* yyvs50 */
	T0* a184; /* yyspecial_routines51 */
	T6 a185; /* yyvsc51 */
	T0* a186; /* yyvs51 */
	T0* a187; /* yyspecial_routines52 */
	T6 a188; /* yyvsc52 */
	T0* a189; /* yyvs52 */
	T0* a190; /* yyspecial_routines53 */
	T6 a191; /* yyvsc53 */
	T0* a192; /* yyvs53 */
	T0* a193; /* yyspecial_routines54 */
	T6 a194; /* yyvsc54 */
	T0* a195; /* yyvs54 */
	T0* a196; /* yyspecial_routines55 */
	T6 a197; /* yyvsc55 */
	T0* a198; /* yyvs55 */
	T0* a199; /* yyspecial_routines56 */
	T6 a200; /* yyvsc56 */
	T0* a201; /* yyvs56 */
	T0* a202; /* yyspecial_routines57 */
	T6 a203; /* yyvsc57 */
	T0* a204; /* yyvs57 */
	T0* a205; /* yyspecial_routines58 */
	T6 a206; /* yyvsc58 */
	T0* a207; /* yyvs58 */
	T0* a208; /* yyspecial_routines59 */
	T6 a209; /* yyvsc59 */
	T0* a210; /* yyvs59 */
	T0* a211; /* yyspecial_routines60 */
	T6 a212; /* yyvsc60 */
	T0* a213; /* yyvs60 */
	T0* a214; /* yyspecial_routines61 */
	T6 a215; /* yyvsc61 */
	T0* a216; /* yyvs61 */
	T0* a217; /* yyspecial_routines62 */
	T6 a218; /* yyvsc62 */
	T0* a219; /* yyvs62 */
	T0* a220; /* yyspecial_routines63 */
	T6 a221; /* yyvsc63 */
	T0* a222; /* yyvs63 */
	T0* a223; /* yyspecial_routines64 */
	T6 a224; /* yyvsc64 */
	T0* a225; /* yyvs64 */
	T0* a226; /* yyspecial_routines65 */
	T6 a227; /* yyvsc65 */
	T0* a228; /* yyvs65 */
	T0* a229; /* yyspecial_routines66 */
	T6 a230; /* yyvsc66 */
	T0* a231; /* yyvs66 */
	T0* a232; /* yyspecial_routines67 */
	T6 a233; /* yyvsc67 */
	T0* a234; /* yyvs67 */
	T0* a235; /* yyspecial_routines68 */
	T6 a236; /* yyvsc68 */
	T0* a237; /* yyvs68 */
	T0* a238; /* yyspecial_routines69 */
	T6 a239; /* yyvsc69 */
	T0* a240; /* yyvs69 */
	T0* a241; /* yyspecial_routines70 */
	T6 a242; /* yyvsc70 */
	T0* a243; /* yyvs70 */
	T0* a244; /* yyspecial_routines71 */
	T6 a245; /* yyvsc71 */
	T0* a246; /* yyvs71 */
	T0* a247; /* yyspecial_routines72 */
	T6 a248; /* yyvsc72 */
	T0* a249; /* yyvs72 */
	T0* a250; /* yyspecial_routines73 */
	T6 a251; /* yyvsc73 */
	T0* a252; /* yyvs73 */
	T0* a253; /* yyspecial_routines74 */
	T6 a254; /* yyvsc74 */
	T0* a255; /* yyvs74 */
	T0* a256; /* yyspecial_routines75 */
	T6 a257; /* yyvsc75 */
	T0* a258; /* yyvs75 */
	T0* a259; /* yyspecial_routines76 */
	T6 a260; /* yyvsc76 */
	T0* a261; /* yyvs76 */
	T0* a262; /* yyspecial_routines77 */
	T6 a263; /* yyvsc77 */
	T0* a264; /* yyvs77 */
	T0* a265; /* yyspecial_routines78 */
	T6 a266; /* yyvsc78 */
	T0* a267; /* yyvs78 */
	T0* a268; /* yyspecial_routines79 */
	T6 a269; /* yyvsc79 */
	T0* a270; /* yyvs79 */
	T0* a271; /* yyspecial_routines80 */
	T6 a272; /* yyvsc80 */
	T0* a273; /* yyvs80 */
	T0* a274; /* yyspecial_routines81 */
	T6 a275; /* yyvsc81 */
	T0* a276; /* yyvs81 */
	T0* a277; /* yyspecial_routines82 */
	T6 a278; /* yyvsc82 */
	T0* a279; /* yyvs82 */
	T0* a280; /* yyspecial_routines83 */
	T6 a281; /* yyvsc83 */
	T0* a282; /* yyvs83 */
	T0* a283; /* yyspecial_routines84 */
	T6 a284; /* yyvsc84 */
	T0* a285; /* yyvs84 */
	T0* a286; /* yyspecial_routines85 */
	T6 a287; /* yyvsc85 */
	T0* a288; /* yyvs85 */
	T0* a289; /* yyspecial_routines86 */
	T6 a290; /* yyvsc86 */
	T0* a291; /* yyvs86 */
	T0* a292; /* yyspecial_routines87 */
	T6 a293; /* yyvsc87 */
	T0* a294; /* yyvs87 */
	T0* a295; /* yyspecial_routines88 */
	T6 a296; /* yyvsc88 */
	T0* a297; /* yyvs88 */
	T0* a298; /* yyspecial_routines89 */
	T6 a299; /* yyvsc89 */
	T0* a300; /* yyvs89 */
	T0* a301; /* yyspecial_routines90 */
	T6 a302; /* yyvsc90 */
	T0* a303; /* yyvs90 */
	T0* a304; /* yyspecial_routines91 */
	T6 a305; /* yyvsc91 */
	T0* a306; /* yyvs91 */
	T0* a307; /* yyspecial_routines92 */
	T6 a308; /* yyvsc92 */
	T0* a309; /* yyvs92 */
	T0* a310; /* yyspecial_routines93 */
	T6 a311; /* yyvsc93 */
	T0* a312; /* yyvs93 */
	T0* a313; /* yyspecial_routines94 */
	T6 a314; /* yyvsc94 */
	T0* a315; /* yyvs94 */
	T0* a316; /* yyspecial_routines95 */
	T6 a317; /* yyvsc95 */
	T0* a318; /* yyvs95 */
	T0* a319; /* yyspecial_routines96 */
	T6 a320; /* yyvsc96 */
	T0* a321; /* yyvs96 */
	T0* a322; /* yyspecial_routines97 */
	T6 a323; /* yyvsc97 */
	T0* a324; /* yyvs97 */
	T0* a325; /* yyspecial_routines98 */
	T6 a326; /* yyvsc98 */
	T0* a327; /* yyvs98 */
	T0* a328; /* yyspecial_routines99 */
	T6 a329; /* yyvsc99 */
	T0* a330; /* yyvs99 */
	T0* a331; /* yyspecial_routines100 */
	T6 a332; /* yyvsc100 */
	T0* a333; /* yyvs100 */
	T0* a334; /* yyspecial_routines101 */
	T6 a335; /* yyvsc101 */
	T0* a336; /* yyvs101 */
	T0* a337; /* yyspecial_routines102 */
	T6 a338; /* yyvsc102 */
	T0* a339; /* yyvs102 */
	T0* a340; /* yyspecial_routines103 */
	T6 a341; /* yyvsc103 */
	T0* a342; /* yyvs103 */
	T0* a343; /* yyspecial_routines104 */
	T6 a344; /* yyvsc104 */
	T0* a345; /* yyvs104 */
	T0* a346; /* yyspecial_routines105 */
	T6 a347; /* yyvsc105 */
	T0* a348; /* yyvs105 */
	T0* a349; /* yyspecial_routines106 */
	T6 a350; /* yyvsc106 */
	T0* a351; /* yyvs106 */
	T0* a352; /* yyspecial_routines107 */
	T6 a353; /* yyvsc107 */
	T0* a354; /* yyvs107 */
	T0* a355; /* yyspecial_routines108 */
	T6 a356; /* yyvsc108 */
	T0* a357; /* yyvs108 */
	T0* a358; /* yyspecial_routines109 */
	T6 a359; /* yyvsc109 */
	T0* a360; /* yyvs109 */
	T0* a361; /* yyspecial_routines110 */
	T6 a362; /* yyvsc110 */
	T0* a363; /* yyvs110 */
	T0* a364; /* yyspecial_routines111 */
	T6 a365; /* yyvsc111 */
	T0* a366; /* yyvs111 */
	T0* a367; /* yyspecial_routines112 */
	T6 a368; /* yyvsc112 */
	T0* a369; /* yyvs112 */
	T0* a370; /* yyspecial_routines113 */
	T6 a371; /* yyvsc113 */
	T0* a372; /* yyvs113 */
	T0* a373; /* yyspecial_routines114 */
	T6 a374; /* yyvsc114 */
	T0* a375; /* yyvs114 */
	T0* a376; /* yyspecial_routines115 */
	T6 a377; /* yyvsc115 */
	T0* a378; /* yyvs115 */
	T0* a379; /* yyspecial_routines116 */
	T6 a380; /* yyvsc116 */
	T0* a381; /* yyvs116 */
	T0* a382; /* yyspecial_routines117 */
	T6 a383; /* yyvsc117 */
	T0* a384; /* yyvs117 */
	T0* a385; /* yyspecial_routines118 */
	T6 a386; /* yyvsc118 */
	T0* a387; /* yyvs118 */
	T0* a388; /* yyspecial_routines119 */
	T6 a389; /* yyvsc119 */
	T0* a390; /* yyvs119 */
	T0* a391; /* yyspecial_routines120 */
	T6 a392; /* yyvsc120 */
	T0* a393; /* yyvs120 */
	T0* a394; /* yyspecial_routines121 */
	T6 a395; /* yyvsc121 */
	T0* a396; /* yyvs121 */
	T0* a397; /* yyspecial_routines122 */
	T6 a398; /* yyvsc122 */
	T0* a399; /* yyvs122 */
	T0* a400; /* yyspecial_routines123 */
	T6 a401; /* yyvsc123 */
	T0* a402; /* yyvs123 */
	T0* a403; /* yyspecial_routines124 */
	T6 a404; /* yyvsc124 */
	T0* a405; /* yyvs124 */
	T0* a406; /* yyspecial_routines125 */
	T6 a407; /* yyvsc125 */
	T0* a408; /* yyvs125 */
	T0* a409; /* yyspecial_routines126 */
	T6 a410; /* yyvsc126 */
	T0* a411; /* yyvs126 */
	T0* a412; /* yyspecial_routines127 */
	T6 a413; /* yyvsc127 */
	T0* a414; /* yyvs127 */
	T0* a415; /* yyspecial_routines128 */
	T6 a416; /* yyvsc128 */
	T0* a417; /* yyvs128 */
	T0* a418; /* yyspecial_routines129 */
	T6 a419; /* yyvsc129 */
	T0* a420; /* yyvs129 */
	T0* a421; /* yyspecial_routines130 */
	T6 a422; /* yyvsc130 */
	T0* a423; /* yyvs130 */
	T0* a424; /* yyspecial_routines131 */
	T6 a425; /* yyvsc131 */
	T0* a426; /* yyvs131 */
	T0* a427; /* yyspecial_routines132 */
	T6 a428; /* yyvsc132 */
	T0* a429; /* yyvs132 */
	T0* a430; /* yyspecial_routines133 */
	T6 a431; /* yyvsc133 */
	T0* a432; /* yyvs133 */
	T0* a433; /* yyspecial_routines134 */
	T6 a434; /* yyvsc134 */
	T0* a435; /* yyvs134 */
	T0* a436; /* yyspecial_routines135 */
	T6 a437; /* yyvsc135 */
	T0* a438; /* yyvs135 */
	T0* a439; /* yyspecial_routines136 */
	T6 a440; /* yyvsc136 */
	T0* a441; /* yyvs136 */
	T0* a442; /* yyspecial_routines137 */
	T6 a443; /* yyvsc137 */
	T0* a444; /* yyvs137 */
	T0* a445; /* yyspecial_routines138 */
	T6 a446; /* yyvsc138 */
	T0* a447; /* yyvs138 */
	T0* a448; /* yytranslate */
	T0* a449; /* yyr1 */
	T0* a450; /* yytypes1 */
	T0* a451; /* yytypes2 */
	T0* a452; /* yydefact */
	T0* a453; /* yydefgoto */
	T0* a454; /* yypact */
	T0* a455; /* yypgoto */
	T0* a456; /* yytable */
	T0* a457; /* yycheck */
	T0* a458; /* yy_state_stack */
	T6 a459; /* yy_start_state */
	T6 a460; /* yy_line */
	T6 a461; /* yy_column */
	T6 a462; /* yy_position */
	T6 a463; /* yy_start */
	T6 a464; /* yy_end */
	T6 a465; /* line */
	T6 a466; /* column */
	T6 a467; /* position */
	T0* a468; /* yy_nxt */
	T0* a469; /* yy_chk */
	T0* a470; /* yy_base */
	T0* a471; /* yy_def */
	T0* a472; /* yy_ec */
	T0* a473; /* yy_meta */
	T0* a474; /* yy_accept */
	T0* a475; /* yy_acclist */
	T0* a476; /* yy_content */
	T0* a477; /* yy_content_area */
	T0* a478; /* yy_unicode_content_area */
	T6 a479; /* time_stamp */
	T0* a480; /* last_class */
	T6 a481; /* yy_parsing_status */
	T6 a482; /* yy_suspended_yystacksize */
	T6 a483; /* yy_suspended_yystate */
	T6 a484; /* yy_suspended_yyn */
	T6 a485; /* yy_suspended_yychar1 */
	T6 a486; /* yy_suspended_index */
	T6 a487; /* yy_suspended_yyss_top */
	T6 a488; /* yy_suspended_yy_goto */
	T6 a489; /* yyssp */
	T6 a490; /* error_count */
	T1 a491; /* yy_lookahead_needed */
	T6 a492; /* yyerrstatus */
	T6 a493; /* last_token */
	T0* a494; /* last_clients */
	T0* a495; /* last_export_clients */
	T0* a496; /* last_feature_clause */
	T6 a497; /* last_literal_end */
	T1 a498; /* yy_rejected */
	T6 a499; /* yy_state_count */
	T6 a500; /* yy_full_match */
	T6 a501; /* yy_lp */
	T6 a502; /* yy_looking_for_trail_begin */
	T6 a503; /* yy_full_lp */
	T6 a504; /* yy_full_state */
	T6 a505; /* pushed_start_condition_count */
	T1 a506; /* yy_more_flag */
	T6 a507; /* yy_more_len */
	T6 a508; /* yy_last_accepting_state */
	T6 a509; /* yy_last_accepting_cpos */
	T6 a510; /* yyvsp1 */
	T6 a511; /* yyvsp2 */
	T6 a512; /* yyvsp3 */
	T6 a513; /* yyvsp4 */
	T6 a514; /* yyvsp5 */
	T6 a515; /* yyvsp6 */
	T6 a516; /* yyvsp7 */
	T6 a517; /* yyvsp8 */
	T6 a518; /* yyvsp9 */
	T6 a519; /* yyvsp10 */
	T6 a520; /* yyvsp11 */
	T6 a521; /* yyvsp12 */
	T6 a522; /* yyvsp13 */
	T6 a523; /* yyvsp14 */
	T6 a524; /* yyvsp15 */
	T6 a525; /* yyvsp16 */
	T6 a526; /* yyvsp17 */
	T6 a527; /* yyvsp18 */
	T6 a528; /* yyvsp19 */
	T6 a529; /* yyvsp20 */
	T6 a530; /* yyvsp21 */
	T6 a531; /* yyvsp22 */
	T6 a532; /* yyvsp23 */
	T6 a533; /* yyvsp24 */
	T6 a534; /* yyvsp25 */
	T6 a535; /* yyvsp26 */
	T6 a536; /* yyvsp27 */
	T6 a537; /* yyvsp28 */
	T6 a538; /* yyvsp29 */
	T6 a539; /* yyvsp30 */
	T6 a540; /* yyvsp31 */
	T6 a541; /* yyvsp32 */
	T6 a542; /* yyvsp33 */
	T6 a543; /* yyvsp34 */
	T6 a544; /* yyvsp35 */
	T6 a545; /* yyvsp36 */
	T6 a546; /* yyvsp37 */
	T6 a547; /* yyvsp38 */
	T6 a548; /* yyvsp39 */
	T6 a549; /* yyvsp40 */
	T6 a550; /* yyvsp41 */
	T6 a551; /* yyvsp42 */
	T6 a552; /* yyvsp43 */
	T6 a553; /* yyvsp44 */
	T6 a554; /* yyvsp45 */
	T6 a555; /* yyvsp46 */
	T6 a556; /* yyvsp47 */
	T6 a557; /* yyvsp48 */
	T6 a558; /* yyvsp49 */
	T6 a559; /* yyvsp50 */
	T6 a560; /* yyvsp51 */
	T6 a561; /* yyvsp52 */
	T6 a562; /* yyvsp53 */
	T6 a563; /* yyvsp54 */
	T6 a564; /* yyvsp55 */
	T6 a565; /* yyvsp56 */
	T6 a566; /* yyvsp57 */
	T6 a567; /* yyvsp58 */
	T6 a568; /* yyvsp59 */
	T6 a569; /* yyvsp60 */
	T6 a570; /* yyvsp61 */
	T6 a571; /* yyvsp62 */
	T6 a572; /* yyvsp63 */
	T6 a573; /* yyvsp64 */
	T6 a574; /* yyvsp65 */
	T6 a575; /* yyvsp66 */
	T6 a576; /* yyvsp67 */
	T6 a577; /* yyvsp68 */
	T6 a578; /* yyvsp69 */
	T6 a579; /* yyvsp70 */
	T6 a580; /* yyvsp71 */
	T6 a581; /* yyvsp72 */
	T6 a582; /* yyvsp73 */
	T6 a583; /* yyvsp74 */
	T6 a584; /* yyvsp75 */
	T6 a585; /* yyvsp76 */
	T6 a586; /* yyvsp77 */
	T6 a587; /* yyvsp78 */
	T6 a588; /* yyvsp79 */
	T6 a589; /* yyvsp80 */
	T6 a590; /* yyvsp81 */
	T6 a591; /* yyvsp82 */
	T6 a592; /* yyvsp83 */
	T6 a593; /* yyvsp84 */
	T6 a594; /* yyvsp85 */
	T6 a595; /* yyvsp86 */
	T6 a596; /* yyvsp87 */
	T6 a597; /* yyvsp88 */
	T6 a598; /* yyvsp89 */
	T6 a599; /* yyvsp90 */
	T6 a600; /* yyvsp91 */
	T6 a601; /* yyvsp92 */
	T6 a602; /* yyvsp93 */
	T6 a603; /* yyvsp94 */
	T6 a604; /* yyvsp95 */
	T6 a605; /* yyvsp96 */
	T6 a606; /* yyvsp97 */
	T6 a607; /* yyvsp98 */
	T6 a608; /* yyvsp99 */
	T6 a609; /* yyvsp100 */
	T6 a610; /* yyvsp101 */
	T6 a611; /* yyvsp102 */
	T6 a612; /* yyvsp103 */
	T6 a613; /* yyvsp104 */
	T6 a614; /* yyvsp105 */
	T6 a615; /* yyvsp106 */
	T6 a616; /* yyvsp107 */
	T6 a617; /* yyvsp108 */
	T6 a618; /* yyvsp109 */
	T6 a619; /* yyvsp110 */
	T6 a620; /* yyvsp111 */
	T6 a621; /* yyvsp112 */
	T6 a622; /* yyvsp113 */
	T6 a623; /* yyvsp114 */
	T6 a624; /* yyvsp115 */
	T6 a625; /* yyvsp116 */
	T6 a626; /* yyvsp117 */
	T6 a627; /* yyvsp118 */
	T6 a628; /* yyvsp119 */
	T6 a629; /* yyvsp120 */
	T6 a630; /* yyvsp121 */
	T6 a631; /* yyvsp122 */
	T6 a632; /* yyvsp123 */
	T6 a633; /* yyvsp124 */
	T6 a634; /* yyvsp125 */
	T6 a635; /* yyvsp126 */
	T6 a636; /* yyvsp127 */
	T6 a637; /* yyvsp128 */
	T6 a638; /* yyvsp129 */
	T6 a639; /* yyvsp130 */
	T6 a640; /* yyvsp131 */
	T6 a641; /* yyvsp132 */
	T6 a642; /* yyvsp133 */
	T6 a643; /* yyvsp134 */
	T6 a644; /* yyvsp135 */
	T6 a645; /* yyvsp136 */
	T6 a646; /* yyvsp137 */
	T6 a647; /* yyvsp138 */
	T0* a648; /* last_detachable_any_value */
	T0* a649; /* last_detachable_et_keyword_value */
	T0* a650; /* last_detachable_et_agent_keyword_value */
	T0* a651; /* last_detachable_et_precursor_keyword_value */
	T0* a652; /* last_detachable_et_symbol_value */
	T0* a653; /* last_detachable_et_position_value */
	T0* a654; /* last_detachable_et_boolean_constant_value */
	T0* a655; /* last_detachable_et_break_value */
	T0* a656; /* last_detachable_et_character_constant_value */
	T0* a657; /* last_detachable_et_current_value */
	T0* a658; /* last_detachable_et_free_operator_value */
	T0* a659; /* last_detachable_et_identifier_value */
	T0* a660; /* last_detachable_et_integer_constant_value */
	T0* a661; /* last_detachable_et_keyword_operator_value */
	T0* a662; /* last_detachable_et_manifest_string_value */
	T0* a663; /* last_detachable_et_real_constant_value */
	T0* a664; /* last_detachable_et_result_value */
	T0* a665; /* last_detachable_et_retry_instruction_value */
	T0* a666; /* last_detachable_et_symbol_operator_value */
	T0* a667; /* last_detachable_et_void_value */
	T0* a668; /* last_detachable_et_semicolon_symbol_value */
	T0* a669; /* last_detachable_et_bracket_symbol_value */
	T0* a670; /* last_detachable_et_question_mark_symbol_value */
	T0* a671; /* last_formal_arguments */
	T0* a672; /* last_local_variables */
	T0* a673; /* last_object_tests */
	T0* a674; /* last_iteration_components */
	T0* a675; /* last_inline_separate_arguments */
	T6 a676; /* last_break_end */
	T6 a677; /* last_comment_end */
	T6 a678; /* ms_column */
	T6 a679; /* ms_line */
	T6 a680; /* break_kind */
	T3 a681; /* verbatim_opening_character */
	T1 a682; /* has_natural_64_overflow */
	T11 a683; /* last_natural_64 */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* qualified_anchored_type_checker */
	T0* a3; /* unfolded_tuple_actual_parameters_resolver */
	T0* a4; /* old_name_rename_table */
	T0* a5; /* new_name_rename_table */
	T0* a6; /* new_alias_name_rename_table */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T0* a3; /* feature_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* parent_checker3 */
	T0* a9; /* precursor_procedures */
	T0* a10; /* precursor_queries */
	T0* a11; /* supplier_builder */
	T0* a12; /* no_suppliers */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AST_FACTORY */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* targets */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* arguments */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T0* a7; /* object_tests */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a10; /* hash_code */
	T0* a11; /* end_keyword */
	T0* a12; /* clients */
	T1 a13; /* validity_checked */
	T1 a14; /* has_validity_error */
	T0* a15; /* preconditions */
	T0* a16; /* first_precursor */
	T0* a17; /* other_precursors */
	T0* a18; /* postconditions */
	T0* a19; /* frozen_keyword */
	T0* a20; /* obsolete_message */
	T0* a21; /* is_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_note */
	T0* a25; /* inline_separate_arguments */
	T6 a26; /* id */
	T6 a27; /* version */
	T0* a28; /* synonym */
};

/* Struct for type KL_PLATFORM */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DO_PROCEDURE */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* iteration_components */
	T0* a2; /* implementation_class */
	T0* a3; /* arguments */
	T0* a4; /* rescue_clause */
	T0* a5; /* locals */
	T0* a6; /* object_tests */
	T0* a7; /* compound */
	T6 a8; /* first_seed */
	T0* a9; /* implementation_feature */
	T0* a10; /* other_seeds */
	T0* a11; /* extended_name */
	T6 a12; /* hash_code */
	T0* a13; /* end_keyword */
	T0* a14; /* clients */
	T1 a15; /* validity_checked */
	T1 a16; /* has_validity_error */
	T0* a17; /* preconditions */
	T0* a18; /* first_precursor */
	T0* a19; /* other_precursors */
	T0* a20; /* postconditions */
	T0* a21; /* inline_separate_arguments */
	T0* a22; /* frozen_keyword */
	T0* a23; /* obsolete_message */
	T0* a24; /* is_keyword */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_note */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type UT_CONFIG_PARSER */
struct S525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_unicode_content_area */
	T0* a62; /* yy_accept */
	T6 a63; /* yy_last_accepting_state */
	T6 a64; /* yy_last_accepting_cpos */
	T0* a65; /* yy_content */
	T0* a66; /* yy_ec */
	T0* a67; /* yy_chk */
	T0* a68; /* yy_base */
	T0* a69; /* yy_def */
	T0* a70; /* yy_meta */
	T0* a71; /* yy_nxt */
	T6 a72; /* yy_lp */
	T0* a73; /* yy_acclist */
	T6 a74; /* yy_looking_for_trail_begin */
	T6 a75; /* yy_full_match */
	T6 a76; /* yy_full_state */
	T6 a77; /* yy_full_lp */
	T1 a78; /* yy_rejected */
	T0* a79; /* last_detachable_any_value */
	T6 a80; /* if_level */
	T6 a81; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_FUNCTION */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* rescue_clause */
	T0* a7; /* locals */
	T0* a8; /* compound */
	T0* a9; /* implementation_feature */
	T0* a10; /* other_seeds */
	T0* a11; /* first_precursor */
	T0* a12; /* other_precursors */
	T0* a13; /* preconditions */
	T6 a14; /* hash_code */
	T0* a15; /* postconditions */
	T0* a16; /* assigner */
	T0* a17; /* frozen_keyword */
	T0* a18; /* extended_name */
	T0* a19; /* declared_type */
	T0* a20; /* obsolete_message */
	T0* a21; /* clients */
	T0* a22; /* is_keyword */
	T0* a23; /* end_keyword */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* first_note */
	T0* a27; /* inline_separate_arguments */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type CELL [INTEGER_32] */
struct S532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type KL_ANY_ROUTINES */
struct S534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_PATHNAME */
struct S536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable STRING_8] */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable STRING_8] */
struct S550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* yy_state_stack */
	T6 a20; /* yy_state_count */
	T0* a21; /* yy_content_area */
	T0* a22; /* yy_unicode_content_area */
	T0* a23; /* yy_accept */
	T6 a24; /* yy_last_accepting_state */
	T6 a25; /* yy_last_accepting_cpos */
	T0* a26; /* yy_content */
	T0* a27; /* yy_ec */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T0* a39; /* input_buffer */
	T1 a40; /* yy_rejected */
	T0* a41; /* yy_pushed_start_conditions */
	T0* a42; /* last_string_value */
	T0* a43; /* last_error */
	T6 a44; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ANY] */
struct S580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T0* a44; /* yy_unicode_content_area */
	T6 a45; /* last_token */
	T0* a46; /* input_filter */
	T0* a47; /* input_stream */
	T0* a48; /* input_resolver */
	T0* a49; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* yy_state_stack */
	T6 a22; /* yy_state_count */
	T0* a23; /* yy_content_area */
	T0* a24; /* yy_unicode_content_area */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_content */
	T0* a29; /* yy_ec */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T0* a41; /* input_buffer */
	T1 a42; /* yy_rejected */
	T0* a43; /* yy_pushed_start_conditions */
	T0* a44; /* last_string_value */
	T0* a45; /* last_error */
	T6 a46; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T0* a46; /* yy_unicode_content_area */
	T6 a47; /* last_token */
	T0* a48; /* input_filter */
	T0* a49; /* input_stream */
	T0* a50; /* input_resolver */
	T0* a51; /* yy_acclist */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
struct S620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
struct S622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
struct S624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* implicit_attachment_type_mark */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_identity_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_identity_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_identity_any_type */
	T0* a34; /* immutable_string_8_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_separate_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_identity_type */
	T0* a60; /* procedure_identity_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_identity_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* special_identity_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* detachable_string_8_type */
	T0* a74; /* string_8_convert_feature */
	T0* a75; /* string_32_type */
	T0* a76; /* string_32_convert_feature */
	T0* a77; /* system_object_type */
	T0* a78; /* system_object_parents */
	T0* a79; /* system_string_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* type_detachable_like_current_type */
	T0* a84; /* type_identity_type */
	T0* a85; /* typed_pointer_identity_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
struct S640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* count */
	T0* a13; /* equality_tester */
	T6 a14; /* found_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_FEATURE_IDS */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T0* a8; /* equality_tester */
	T6 a9; /* capacity */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* special_item_routines */
	T0* a14; /* special_key_routines */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* modulus */
	T0* a2; /* key_equality_tester */
	T0* a3; /* item_storage */
	T0* a4; /* slots */
	T0* a5; /* hash_function */
	T0* a6; /* key_storage */
	T0* a7; /* clashes */
	T6 a8; /* position */
	T6 a9; /* count */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* free_slot */
	T6 a13; /* last_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_SYMBOL */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* break */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* break */
	T6 a4; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
struct S666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [INTEGER_32] */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
struct S676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* declared_type */
	T0* a5; /* expression */
	T0* a6; /* as_keyword */
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT] */
struct S707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
struct S709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
struct S712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
struct S720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTIONS] */
struct S721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM] */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_CLIENT_ITEM] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
struct S735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [NATURAL_32] */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_32] */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T6 a4; /* found_position */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T0* a7; /* key_equality_tester */
	T0* a8; /* key_storage */
	T0* a9; /* slots */
	T0* a10; /* hash_function */
	T0* a11; /* clashes */
	T0* a12; /* internal_keys */
	T6 a13; /* capacity */
	T6 a14; /* free_slot */
	T6 a15; /* last_position */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* equality_tester */
	T0* a19; /* special_item_routines */
	T0* a20; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_UTF8_STRING */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
struct S767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
struct S768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
struct S779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
struct S825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
struct S826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
struct S827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
struct S828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* slots */
	T0* a14; /* clashes */
	T0* a15; /* special_item_routines */
	T0* a16; /* key_storage */
	T0* a17; /* special_key_routines */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
struct S844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type THREAD_ATTRIBUTES */
struct S846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* shared */
	T14 a2; /* internal_item */
	T0* a3; /* managed_pointer */
};

/* Struct for type CELL [BOOLEAN] */
struct S847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
};

/* Struct for type CHARACTER_PROPERTY */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM_ERROR */
struct S850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type ET_ECF_NOTE_ELEMENT */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* attributes */
	T0* a3; /* elements */
	T0* a4; /* content */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_NAMESPACES */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* namespaces */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAGS */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_MAKES */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCES */
struct S865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ACTION] */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* eifgens_location */
	T0* a7; /* classname_prefix */
	T1 a8; /* is_read_only */
	T1 a9; /* use_application_options */
	T0* a10; /* options */
	T0* a11; /* class_options */
	T0* a12; /* class_renamings */
	T0* a13; /* visible_classes */
	T0* a14; /* conditions */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type ET_ECF_VERSION */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_release */
	T6 a4; /* internal_build */
	T0* a5; /* product */
	T0* a6; /* company */
	T0* a7; /* copyright */
};

/* Struct for type ET_ECF_CLUSTER */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* target */
	T0* a6; /* description */
	T1 a7; /* is_hidden */
	T0* a8; /* classname_prefix */
	T1 a9; /* is_read_only */
	T1 a10; /* is_recursive */
	T0* a11; /* conditioned_subclusters */
	T0* a12; /* conditioned_file_rules */
	T0* a13; /* options */
	T0* a14; /* class_options */
	T0* a15; /* class_renamings */
	T0* a16; /* class_mappings */
	T0* a17; /* visible_classes */
	T0* a18; /* provider_groups */
	T0* a19; /* conditions */
	T0* a20; /* notes */
	T1 a21; /* is_override */
	T0* a22; /* overridden_group */
	T1 a23; /* overridden_constraint_enabled */
	T1 a24; /* scm_mapping_constraint_enabled */
	T0* a25; /* subclusters */
	T1 a26; /* use_obsolete_syntax */
	T0* a27; /* scm_read_mapping */
	T0* a28; /* scm_write_mapping */
	T1 a29; /* is_implicit */
	T0* a30; /* file_rules */
	T0* a31; /* parent */
	T0* a32; /* provider_constraint */
	T0* a33; /* dependant_constraint */
	T1 a34; /* is_preparsed */
	T1 a35; /* is_abstract */
	T0* a36; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_NAMESPACE */
struct S871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* description */
	T0* a3; /* classname_prefix */
	T0* a4; /* class_renamings */
	T0* a5; /* notes */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAG */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAG */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_MAKE */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCE */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* conditions */
	T0* a6; /* description */
};

/* Struct for type ET_ECF_ACTION */
struct S880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* command_name */
	T0* a2; /* description */
	T1 a3; /* must_succeed */
	T0* a4; /* working_directory */
	T0* a5; /* conditions */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS] */
struct S883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
	T0* a3; /* cluster_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_ORED_CONDITIONS */
struct S887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_ANDED_CONDITIONS */
struct S888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_VISIBLE_CLASS */
struct S889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* feature_name */
	T0* a3; /* new_class_name */
	T0* a4; /* new_feature_name */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_VOID_SAFETY_CONDITION */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T0* a3; /* match */
	T1 a4; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type UT_COUNTER */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [UT_COUNTER] */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_UNIVERSE] */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_UNIVERSE]] */
struct S907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY] */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_INTERNAL_UNIVERSE] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_SYSTEM_PROCESSOR] */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* implicit_attachment_type_mark */
	T0* a8; /* master_classes */
	T0* a9; /* master_class_mutex */
	T0* a10; /* any_type */
	T0* a11; /* detachable_any_type */
	T0* a12; /* detachable_separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_identity_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_none_type */
	T0* a23; /* array_identity_type */
	T0* a24; /* boolean_type */
	T0* a25; /* character_type */
	T0* a26; /* character_8_type */
	T0* a27; /* character_8_convert_feature */
	T0* a28; /* character_32_type */
	T0* a29; /* character_32_convert_feature */
	T0* a30; /* double_type */
	T0* a31; /* exception_type */
	T0* a32; /* detachable_exception_type */
	T0* a33; /* exception_manager_type */
	T0* a34; /* function_identity_any_type */
	T0* a35; /* immutable_string_8_type */
	T0* a36; /* immutable_string_32_type */
	T0* a37; /* integer_type */
	T0* a38; /* integer_8_type */
	T0* a39; /* integer_8_convert_feature */
	T0* a40; /* integer_16_type */
	T0* a41; /* integer_16_convert_feature */
	T0* a42; /* integer_32_type */
	T0* a43; /* integer_32_convert_feature */
	T0* a44; /* integer_64_type */
	T0* a45; /* integer_64_convert_feature */
	T0* a46; /* ise_exception_manager_type */
	T0* a47; /* iterable_detachable_separate_any_type */
	T0* a48; /* natural_type */
	T0* a49; /* natural_8_type */
	T0* a50; /* natural_8_convert_feature */
	T0* a51; /* natural_16_type */
	T0* a52; /* natural_16_convert_feature */
	T0* a53; /* natural_32_type */
	T0* a54; /* natural_32_convert_feature */
	T0* a55; /* natural_64_type */
	T0* a56; /* natural_64_convert_feature */
	T0* a57; /* none_type */
	T0* a58; /* detachable_none_type */
	T0* a59; /* pointer_type */
	T0* a60; /* predicate_identity_type */
	T0* a61; /* procedure_identity_type */
	T0* a62; /* real_type */
	T0* a63; /* real_32_type */
	T0* a64; /* real_32_convert_feature */
	T0* a65; /* real_64_type */
	T0* a66; /* real_64_convert_feature */
	T0* a67; /* routine_identity_type */
	T0* a68; /* special_any_type */
	T0* a69; /* special_detachable_any_type */
	T0* a70; /* special_identity_type */
	T0* a71; /* string_type */
	T0* a72; /* detachable_string_type */
	T0* a73; /* string_8_type */
	T0* a74; /* detachable_string_8_type */
	T0* a75; /* string_8_convert_feature */
	T0* a76; /* string_32_type */
	T0* a77; /* string_32_convert_feature */
	T0* a78; /* system_object_type */
	T0* a79; /* system_object_parents */
	T0* a80; /* system_string_type */
	T0* a81; /* type_detachable_any_type */
	T0* a82; /* detachable_type_exception_type */
	T0* a83; /* type_detachable_exception_type */
	T0* a84; /* type_detachable_like_current_type */
	T0* a85; /* type_identity_type */
	T0* a86; /* typed_pointer_identity_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type TUPLE [ET_LIBRARY] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_LIBRARY]] */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [ET_CLUSTER] */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_CLUSTER]] */
struct S927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type TUPLE [ET_AST_PROCESSOR] */
struct S930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_MASTER_CLASS] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
struct S932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type PREDICATE [TUPLE [ET_CLASS]] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [BOOLEAN] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
struct S949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
struct S955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* impl */
	T0* a4; /* utf_queue */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
struct S977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIAS_NAME_LIST */
struct S979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type CONSOLE */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T0* a2; /* last_string_32 */
	T6 a3; /* mode */
	T0* a4; /* last_string */
	T0* a5; /* internal_name */
	T0* a6; /* internal_detachable_name_pointer */
	T2 a7; /* last_character */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_NOTE_ELEMENT] */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S1000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type C_DATE */
struct S1004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type YY_FILE_BUFFER */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T0* a8; /* file */
	T1 a9; /* beginning_of_line */
	T6 a10; /* capacity */
	T1 a11; /* end_of_file */
	T1 a12; /* interactive */
};

/* Struct for type KL_STDIN_FILE */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* character_buffer */
};

/* Struct for type YY_BUFFER */
struct S1007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T1 a8; /* beginning_of_line */
	T6 a9; /* capacity */
};

/* Struct for type YY_UNICODE_FILE_BUFFER */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* has_utf8_bom */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
	T1 a10; /* end_of_file */
	T1 a11; /* interactive */
	T6 a12; /* encoding */
	T0* a13; /* file */
	T6 a14; /* default_encoding */
	T1 a15; /* beginning_of_line */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S1012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S1015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S1016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_NAMED_CLASS] */
struct S1025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S1027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S1028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S1030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S1031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S1035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S1037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S1041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S1044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S1046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* break */
	T0* a5; /* operator_name */
	T6 a6; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_IDENTIFIER] */
struct S1053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S1057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S1059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S1062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S1070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S1071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* break */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S1073 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VOID */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S1078 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S1079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S1082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S1084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* item_name */
	T0* a3; /* as_keyword */
	T0* a4; /* unfolded_cursor_name */
	T0* a5; /* across_keyword */
	T0* a6; /* iterable_expression */
	T0* a7; /* until_conditional */
	T0* a8; /* iteration_conditional */
	T0* a9; /* end_keyword */
	T1 a10; /* is_all */
	T1 a11; /* has_cursor_name */
	T0* a12; /* invariant_part */
	T0* a13; /* variant_part */
	T0* a14; /* new_cursor_expression */
	T0* a15; /* cursor_item_expression */
	T0* a16; /* cursor_after_expression */
	T0* a17; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* as_keyword */
	T0* a3; /* unfolded_cursor_name */
	T0* a4; /* across_keyword */
	T0* a5; /* iterable_expression */
	T0* a6; /* from_compound */
	T0* a7; /* until_conditional */
	T0* a8; /* loop_compound */
	T0* a9; /* end_keyword */
	T1 a10; /* has_cursor_name */
	T0* a11; /* invariant_part */
	T0* a12; /* variant_part */
	T0* a13; /* new_cursor_expression */
	T0* a14; /* cursor_item_expression */
	T0* a15; /* cursor_after_expression */
	T0* a16; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S1090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S1095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S1097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S1102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ALIAS_NAME */
struct S1107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T0* a4; /* convert_keyword */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
struct S1110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S1113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S1116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CALL_AGENT */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S1119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S1122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S1125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S1130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S1133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S1136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S1141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLIENTS */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S1144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTANT] */
struct S1150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S1160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_RENAME_LIST */
struct S1161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* end_keyword */
	T0* a2; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S1177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATION_REGION */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_CREATION_REGION] */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR_LIST */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S1185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S1190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S1193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION] */
struct S1207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S1208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_EXPRESSION */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_keyword */
	T0* a4; /* then_expression */
	T0* a5; /* else_keyword */
	T0* a6; /* else_expression */
	T0* a7; /* end_keyword */
	T0* a8; /* elseif_parts */
};

/* Struct for type SPECIAL [detachable ET_IF_EXPRESSION] */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S1247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S1249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_AGENT] */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
struct S1252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
struct S1254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
struct S1256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
struct S1259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_EXPRESSION */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* when_parts */
	T0* a4; /* end_keyword */
	T0* a5; /* else_part */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S1263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INVARIANTS */
struct S1268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T1 a8; /* validity_checked */
	T1 a9; /* has_validity_error */
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S1269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T0* a3; /* left_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
struct S1297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NOTE_LIST */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* note_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_LIST] */
struct S1299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_ITEM] */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM] */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
struct S1307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
struct S1308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NOTE_TERM_LIST */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_NOTE_TERM_LIST] */
struct S1310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S1313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S1315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S1318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S1321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S1323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_POSTCONDITIONS */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PRECONDITIONS] */
struct S1330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PROCEDURE] */
struct S1332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
struct S1336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUANTIFIER_EXPRESSION */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* item_name */
	T0* a3; /* unfolded_cursor_name */
	T0* a4; /* quantifier_symbol */
	T0* a5; /* colon_symbol */
	T0* a6; /* iterable_expression */
	T0* a7; /* bar_symbol */
	T0* a8; /* iteration_expression */
	T1 a9; /* is_all */
	T0* a10; /* new_cursor_expression */
	T0* a11; /* cursor_item_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
struct S1338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUERY] */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
struct S1346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_REPEAT_INSTRUCTION */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item_name */
	T0* a2; /* unfolded_cursor_name */
	T0* a3; /* open_repeat_symbol */
	T0* a4; /* colon_symbol */
	T0* a5; /* iterable_expression */
	T0* a6; /* bar_symbol */
	T0* a7; /* loop_compound */
	T0* a8; /* close_repeat_symbol */
	T0* a9; /* new_cursor_expression */
	T0* a10; /* cursor_item_expression */
	T0* a11; /* cursor_after_expression */
	T0* a12; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
struct S1348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE] */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
struct S1357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S1360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_TYPE_CONSTRAINT_LIST */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VARIANT */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
struct S1374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_EXPRESSION */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
struct S1377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_EXPRESSION_LIST */
struct S1378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART */
struct S1381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S1382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* all_base_types */
	T0* a3; /* base_types */
	T0* a4; /* formal_dependencies */
	T0* a5; /* base_type_dependencies */
	T0* a6; /* recursive_formal_constraints */
	T0* a7; /* recursive_formal_constraints_to_be_processed */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* current_formal */
	T0* a11; /* current_type_constraint */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T6 a4; /* position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* position */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* count */
	T6 a10; /* free_slot */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* replicable_features */
	T0* a8; /* current_class */
	T0* a9; /* system_processor */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* adapted_base_class_checker */
	T0* a5; /* adapted_base_classes */
	T0* a6; /* target_context */
	T0* a7; /* other_context */
	T0* a8; /* classes_to_be_processed */
	T0* a9; /* system_processor */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1413 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T6 a3; /* position */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
struct S1415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* position */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T0* a5; /* key_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T0* a15; /* internal_cursor */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_RENAME */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S1421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
	T1 a9; /* has_other_deferred */
	T1 a10; /* has_other_effective */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S1429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [detachable STRING_8] */
struct S1437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S1440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [detachable STRING_8] */
struct S1460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
struct S1475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
struct S1482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_SYSTEM_PROCESSOR] */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
struct S1489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
struct S1490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
struct S1491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ADAPTED_CLASS] */
struct S1493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
struct S1498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
struct S1504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
struct S1505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_64] */
struct S1512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
struct S1515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type STRING_8_SEARCHER */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type UT_TRISTATE */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [UT_TRISTATE] */
struct S1525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
struct S1526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
struct S1527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PREDICATE [TUPLE] */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PREDICATE [TUPLE [ET_UNIVERSE]] */
struct S1534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
struct S1536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S1539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
struct S1540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type XM_COMMENT */
struct S1543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type ET_LIKE_N */
struct S1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S1551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type KL_UNICODE_CHARACTER_BUFFER */
struct S1554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_unicode_special */
	T2 a2; /* invalid_character */
	T0* a3; /* unicode_area */
	T0* a4; /* area */
	T3 a5; /* invalid_unicode_character */
};

/* Struct for type ET_INLINE_SEPARATE_ARGUMENT_LIST */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T0* a4; /* literal */
	T3 a5; /* value */
	T1 a6; /* has_invalid_code */
	T0* a7; /* type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_invalid_code */
	T0* a7; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1561 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T11 a6; /* value */
	T1 a7; /* has_overflow */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T11 a6; /* value */
	T1 a7; /* has_overflow */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T11 a6; /* value */
	T1 a7; /* has_overflow */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T11 a6; /* value */
	T1 a7; /* has_overflow */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_TAGGED_NOTE */
struct S1573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type ET_NOTE */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* constraint_base_types */
	T0* a5; /* implementation_class */
	T0* a6; /* type_mark */
	T6 a7; /* index */
	T0* a8; /* name */
	T0* a9; /* recursive_formal_constraints */
};

/* Struct for type ET_TYPE_RENAME_CONSTRAINT */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_ALL_EXPORT */
struct S1581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* compound */
	T0* a7; /* implementation_feature */
	T0* a8; /* other_seeds */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T0* a11; /* preconditions */
	T6 a12; /* hash_code */
	T0* a13; /* postconditions */
	T0* a14; /* assigner */
	T0* a15; /* frozen_keyword */
	T0* a16; /* extended_name */
	T0* a17; /* keys */
	T0* a18; /* first_note */
	T0* a19; /* declared_type */
	T0* a20; /* obsolete_message */
	T0* a21; /* locals */
	T0* a22; /* rescue_clause */
	T0* a23; /* clients */
	T0* a24; /* is_keyword */
	T0* a25; /* end_keyword */
	T0* a26; /* semicolon */
	T0* a27; /* feature_clause */
	T0* a28; /* inline_separate_arguments */
	T1 a29; /* validity_checked */
	T1 a30; /* has_validity_error */
	T6 a31; /* id */
	T6 a32; /* version */
	T0* a33; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T6 a2; /* first_seed */
	T0* a3; /* iteration_components */
	T0* a4; /* implementation_class */
	T0* a5; /* object_tests */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T0* a12; /* postconditions */
	T0* a13; /* assigner */
	T0* a14; /* declared_type */
	T0* a15; /* frozen_keyword */
	T0* a16; /* extended_name */
	T0* a17; /* obsolete_message */
	T0* a18; /* clients */
	T0* a19; /* is_keyword */
	T0* a20; /* deferred_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_note */
	T0* a25; /* inline_separate_arguments */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* arguments */
	T0* a6; /* compound */
	T0* a7; /* implementation_feature */
	T0* a8; /* other_seeds */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T0* a11; /* preconditions */
	T6 a12; /* hash_code */
	T0* a13; /* postconditions */
	T0* a14; /* keys */
	T0* a15; /* first_note */
	T0* a16; /* extended_name */
	T0* a17; /* frozen_keyword */
	T0* a18; /* obsolete_message */
	T0* a19; /* locals */
	T0* a20; /* rescue_clause */
	T0* a21; /* clients */
	T0* a22; /* is_keyword */
	T0* a23; /* end_keyword */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* inline_separate_arguments */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* iteration_components */
	T0* a3; /* implementation_class */
	T0* a4; /* object_tests */
	T0* a5; /* arguments */
	T0* a6; /* implementation_feature */
	T0* a7; /* other_seeds */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* preconditions */
	T6 a11; /* hash_code */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* postconditions */
	T0* a15; /* extended_name */
	T0* a16; /* frozen_keyword */
	T0* a17; /* language */
	T0* a18; /* obsolete_message */
	T0* a19; /* alias_clause */
	T0* a20; /* clients */
	T0* a21; /* is_keyword */
	T0* a22; /* end_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_note */
	T0* a26; /* inline_separate_arguments */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_names */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T0* a5; /* convert_keyword */
	T6 a6; /* seed */
};

/* Struct for type ET_CLASS_ASSERTION */
struct S1595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_keyword */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* like_keyword */
	T6 a4; /* seed */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* qualified_name */
	T0* a3; /* like_keyword */
	T0* a4; /* target_type */
	T0* a5; /* implementation_class */
	T0* a6; /* left_brace */
	T0* a7; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* qualified_name */
	T0* a3; /* target_type */
	T0* a4; /* implementation_class */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
	T0* a6; /* default_create_name */
	T0* a7; /* internal_separate_target */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
	T0* a6; /* default_create_name */
	T0* a7; /* internal_separate_target */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S1619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* attached_keyword */
	T0* a5; /* as_keyword */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_ITERATION_CURSOR */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* at_symbol */
	T0* a3; /* item_name */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* iteration_components */
	T0* a9; /* inline_separate_arguments */
	T0* a10; /* actual_arguments */
	T0* a11; /* preconditions */
	T0* a12; /* locals */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
	T6 a17; /* attached_result_index */
	T6 a18; /* result_index */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* iteration_components */
	T0* a9; /* inline_separate_arguments */
	T0* a10; /* actual_arguments */
	T0* a11; /* preconditions */
	T0* a12; /* locals */
	T0* a13; /* keys */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* target */
	T6 a18; /* attached_result_index */
	T6 a19; /* result_index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* iteration_components */
	T0* a6; /* inline_separate_arguments */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* postconditions */
	T0* a11; /* formal_arguments */
	T0* a12; /* declared_type */
	T0* a13; /* end_keyword */
	T0* a14; /* implicit_result */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T0* a8; /* actual_arguments */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
	T6 a15; /* attached_result_index */
	T6 a16; /* result_index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* iteration_components */
	T0* a7; /* inline_separate_arguments */
	T0* a8; /* actual_arguments */
	T0* a9; /* preconditions */
	T0* a10; /* locals */
	T0* a11; /* keys */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
	T6 a16; /* attached_result_index */
	T6 a17; /* result_index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* iteration_components */
	T0* a6; /* inline_separate_arguments */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* alias_clause */
	T0* a10; /* postconditions */
	T0* a11; /* formal_arguments */
	T0* a12; /* end_keyword */
	T0* a13; /* target */
	T6 a14; /* attached_result_index */
	T6 a15; /* result_index */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* untagged_assertion */
};

/* Struct for type ET_FILE_POSITION */
struct S1638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type SPECIAL [NATURAL_16] */
struct S1649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_16] */
struct S1650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [NATURAL_32] */
struct S1651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
struct S1656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
struct S1657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_ACTION] */
struct S1665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
struct S1666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ECF_OPTIONS] */
struct S1668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
struct S1671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
struct S1672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
struct S1673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_VISIBLE_CLASS] */
struct S1674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
struct S1675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
struct S1676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
struct S1677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_TARGET_PARENT] */
struct S1708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
struct S1709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
struct S1710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S1714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S1715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type YY_UNICODE_BUFFER */
struct S1717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T6 a6; /* count */
	T1 a7; /* filled */
	T1 a8; /* beginning_of_line */
	T6 a9; /* capacity */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
struct S1720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_OBJECT_TEST_LIST] */
struct S1721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
struct S1723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
struct S1725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
struct S1729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [NATURAL_32] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_BASE_TYPE_CONSTRAINT_LIST */
struct S1743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S1751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1779 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
struct S1793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_LINKABLE [detachable STRING_8] */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TUPLE [ET_ECF_CLUSTER] */
struct S1808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
struct S1809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, STRING_8] */
struct S1810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
struct S1812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
struct S1813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
struct S1815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type PROCEDURE [TUPLE [STRING_8]] */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_OPTIONS, STRING_8] */
struct S1819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S1820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* position */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a10; /* slots_position */
	T6 a11; /* count */
	T6 a12; /* free_slot */
	T0* a13; /* equality_tester */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type DS_LINKABLE [XM_ELEMENT_NODE] */
struct S1828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* name */
	T0* a3; /* parenthesis_call */
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
	T0* a3; /* group_pathnames */
	T0* a4; /* pathname_buffer */
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_CLIENT_LIST] */
struct S1843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T6 a3; /* index */
	T6 a4; /* attached_index */
	T1 a5; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S1856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
struct S1860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S1862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S1864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S1865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_MAKE] */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
struct S1869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S1871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
struct S1872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
struct S1873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S1885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S1891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S1893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S1894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S1897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S1898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S1899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_EXPRESSION] */
struct S1900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
struct S1901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S1902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S1908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_ITEM] */
struct S1910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
struct S1911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_NOTE_TERM_ITEM] */
struct S1912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S1914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S1915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
struct S1917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
struct S1918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_WHEN_EXPRESSION] */
struct S1919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
struct S1920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S1921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S1922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BASE_TYPE_RENAME_CONSTRAINT */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S1936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S1937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S1938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S1942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S1943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S1944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
struct S1945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_NAMESPACE] */
struct S1946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
struct S1947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
struct S1948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
struct S1949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
struct S1950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S1951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S1952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S1953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S1954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S1955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S1956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
struct S1960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
struct S1961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
struct S1962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S1963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S1964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S1965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
struct S1966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
struct S1967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
struct S1968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S1969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S1970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S1971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
struct S1972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
struct S1973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
struct S1974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
struct S1975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION_ITEM] */
struct S1976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
struct S1977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S1979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
struct S1981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
struct S1982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
struct S1983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
struct S1984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S2003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S2004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S2005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S2006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S2007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S2008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S2009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S2010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S2012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S2013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S2014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S2015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S2016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S2017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S2018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S2019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S2020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S2021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S2022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S2025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S2026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type ST_SPLITTER */
struct S2030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S2031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S2032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S2033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S2035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S2036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S2037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S2040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S2041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_arguments */
	T0* a3; /* left_symbol */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S2045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S2047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
struct S2055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S2057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S2061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
struct S2065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
struct S2066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S2067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S2070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S2074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S2075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S2082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S2097 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S2098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S2099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S2100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
struct S2105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
struct S2117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S2123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S2124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S2125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type DS_HASH_SET [NATURAL_32] */
struct S2126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S2128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S2129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* type */
	T6 a3; /* index */
	T0* a4; /* expression */
	T0* a5; /* internal_separate_target */
	T0* a6; /* convert_feature */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S2130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
	T0* a4; /* convert_feature */
};

/* Struct for type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type TUPLE [ET_ECF_LIBRARY] */
struct S2132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type DS_CELL [detachable ET_CLASS] */
struct S2138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type TUPLE [DS_CELL [detachable ET_CLASS]] */
struct S2139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S2141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S2144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULE] */
struct S2145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_FILE_RULES] */
struct S2147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
struct S2148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_ECF_STATE] */
struct S2149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [STRING_8]] */
struct S2151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S2152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [DS_HASH_SET [STRING_8]] */
struct S2154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type LX_DFA_WILDCARD */
struct S2156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* subject_start */
	T6 a4; /* subject_end */
	T6 a5; /* match_count */
	T6 a6; /* matched_start */
	T6 a7; /* matched_end */
	T0* a8; /* yy_ec */
	T6 a9; /* yyNull_equiv_class */
	T6 a10; /* yyMax_symbol_equiv_class */
	T6 a11; /* yyNb_rows */
	T0* a12; /* pattern */
	T1 a13; /* is_case_insensitive */
	T0* a14; /* subject */
};

/* Struct for type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S2157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S2161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TUPLE [LX_WILDCARD] */
struct S2163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [LX_WILDCARD]] */
struct S2164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S2165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S2168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S2169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S2172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [NATURAL_32] */
struct S2173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S2174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* unions_of_concatenations_of_symbol_classes_by_utf8_character_class */
	T0* a12; /* buffer */
	T6 a13; /* maximum_used_symbol */
	T0* a14; /* description */
	T0* a15; /* last_string_value */
	T0* a16; /* last_string_32_value */
	T0* a17; /* last_lx_symbol_class_value */
	T0* a18; /* error_handler */
	T0* a19; /* name_definitions */
	T0* a20; /* character_classes */
	T0* a21; /* character_classes_by_name */
	T0* a22; /* equiv_character_classes */
	T0* a23; /* utf8_character_classes_by_name */
	T0* a24; /* utf8_mode */
	T6 a25; /* line_nb */
	T0* a26; /* eiffel_verbatim_marker */
	T0* a27; /* yyss */
	T0* a28; /* input_buffer */
	T6 a29; /* yy_end */
	T6 a30; /* yy_position */
	T6 a31; /* yy_line */
	T6 a32; /* yy_column */
	T6 a33; /* yy_parsing_status */
	T6 a34; /* yy_suspended_yystacksize */
	T6 a35; /* yy_suspended_yystate */
	T6 a36; /* yy_suspended_yyn */
	T6 a37; /* yy_suspended_yychar1 */
	T6 a38; /* yy_suspended_index */
	T6 a39; /* yy_suspended_yyss_top */
	T6 a40; /* yy_suspended_yy_goto */
	T0* a41; /* yyr1 */
	T6 a42; /* yyssp */
	T0* a43; /* yypgoto */
	T0* a44; /* yycheck */
	T0* a45; /* yytable */
	T0* a46; /* yydefgoto */
	T6 a47; /* error_count */
	T1 a48; /* yy_lookahead_needed */
	T6 a49; /* yyerrstatus */
	T0* a50; /* yypact */
	T6 a51; /* last_token */
	T0* a52; /* yytranslate */
	T0* a53; /* yydefact */
	T0* a54; /* yy_pushed_start_conditions */
	T0* a55; /* yyspecial_routines1 */
	T6 a56; /* yyvsc1 */
	T0* a57; /* yyvs1 */
	T0* a58; /* yyspecial_routines2 */
	T6 a59; /* yyvsc2 */
	T0* a60; /* yyvs2 */
	T0* a61; /* yyspecial_routines3 */
	T6 a62; /* yyvsc3 */
	T0* a63; /* yyvs3 */
	T0* a64; /* yyspecial_routines4 */
	T6 a65; /* yyvsc4 */
	T0* a66; /* yyvs4 */
	T0* a67; /* yyspecial_routines5 */
	T6 a68; /* yyvsc5 */
	T0* a69; /* yyvs5 */
	T0* a70; /* yytypes1 */
	T0* a71; /* yytypes2 */
	T6 a72; /* yy_start */
	T6 a73; /* yyvsp1 */
	T6 a74; /* yyvsp2 */
	T6 a75; /* yyvsp3 */
	T6 a76; /* yyvsp4 */
	T6 a77; /* yyvsp5 */
	T1 a78; /* yy_more_flag */
	T6 a79; /* yy_more_len */
	T6 a80; /* line */
	T6 a81; /* column */
	T6 a82; /* position */
	T6 a83; /* yy_start_state */
	T0* a84; /* yy_state_stack */
	T6 a85; /* yy_state_count */
	T0* a86; /* yy_content_area */
	T0* a87; /* yy_unicode_content_area */
	T0* a88; /* yy_accept */
	T6 a89; /* yy_last_accepting_state */
	T6 a90; /* yy_last_accepting_cpos */
	T0* a91; /* yy_content */
	T0* a92; /* yy_ec */
	T0* a93; /* yy_chk */
	T0* a94; /* yy_base */
	T0* a95; /* yy_def */
	T0* a96; /* yy_meta */
	T0* a97; /* yy_nxt */
	T6 a98; /* yy_lp */
	T0* a99; /* yy_acclist */
	T6 a100; /* yy_looking_for_trail_begin */
	T6 a101; /* yy_full_match */
	T6 a102; /* yy_full_state */
	T6 a103; /* yy_full_lp */
	T1 a104; /* yy_rejected */
	T0* a105; /* last_detachable_any_value */
	T6 a106; /* last_integer_value */
	T1 a107; /* in_trail_context */
	T0* a108; /* rule */
	T1 a109; /* has_trail_context */
	T6 a110; /* head_count */
	T6 a111; /* head_line */
	T6 a112; /* head_column */
	T6 a113; /* trail_count */
	T6 a114; /* i_ */
	T6 a115; /* rule_line_nb */
	T1 a116; /* has_bol_context */
};

/* Struct for type LX_DESCRIPTION */
struct S2175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* maximum_symbol */
	T1 a2; /* utf8_mode */
	T1 a3; /* equiv_classes_used */
	T1 a4; /* full_table */
	T1 a5; /* meta_equiv_classes_used */
	T1 a6; /* reject_used */
	T1 a7; /* variable_trail_context */
	T0* a8; /* rules */
	T0* a9; /* start_conditions */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* equiv_classes */
	T1 a17; /* bol_needed */
	T0* a18; /* input_filename */
	T1 a19; /* has_utf8_enconding */
	T1 a20; /* actions_separated */
	T0* a21; /* eiffel_code */
	T1 a22; /* pre_action_used */
	T1 a23; /* post_action_used */
	T1 a24; /* pre_eof_action_used */
	T1 a25; /* post_eof_action_used */
	T1 a26; /* line_used */
	T1 a27; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S2176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T0* a3; /* yy_ec */
	T6 a4; /* yyNb_rows */
	T6 a5; /* yyNull_equiv_class */
	T6 a6; /* yyMax_symbol_equiv_class */
	T0* a7; /* input_filename */
	T1 a8; /* has_utf8_enconding */
	T6 a9; /* array_size */
	T1 a10; /* inspect_used */
	T1 a11; /* actions_separated */
	T0* a12; /* eiffel_code */
	T0* a13; /* eiffel_header */
	T1 a14; /* bol_needed */
	T1 a15; /* pre_action_used */
	T1 a16; /* post_action_used */
	T1 a17; /* pre_eof_action_used */
	T1 a18; /* post_eof_action_used */
	T1 a19; /* line_pragma */
	T0* a20; /* yy_start_conditions */
	T6 a21; /* yyNb_rules */
	T0* a22; /* yy_rules */
	T6 a23; /* yyEnd_of_buffer */
	T1 a24; /* yyLine_used */
	T1 a25; /* yyPosition_used */
	T6 a26; /* minimum_symbol */
	T6 a27; /* maximum_symbol */
	T0* a28; /* states */
	T6 a29; /* backing_up_count */
	T0* a30; /* partitions */
	T6 a31; /* start_states_count */
	T1 a32; /* yyBacking_up */
	T0* a33; /* yy_eof_rules */
};

/* Struct for type TUPLE [ET_GROUP] */
struct S2178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
struct S2179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S2180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S2181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S2183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S2184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S2185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_SYMBOL_CLASS */
struct S2187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* upper */
	T1 a2; /* is_empty */
	T1 a3; /* is_negated */
	T11 a4; /* first_set */
	T11 a5; /* second_set */
	T11 a6; /* third_set */
	T11 a7; /* fourth_set */
	T0* a8; /* other_sets */
	T6 a9; /* lower */
};

/* Struct for type DS_HASH_TABLE [STRING_32, STRING_8] */
struct S2188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [LX_SYMBOL_CLASS] */
struct S2189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
struct S2190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_EQUALITY_TESTER [STRING_32] */
struct S2191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_STACK [BOOLEAN] */
struct S2192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_32] */
struct S2193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [STRING_32] */
struct S2194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S2195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S2196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S2197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S2198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S2199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_RULE */
struct S2200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
struct S2201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S2202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_upper */
	T0* a2; /* storage */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S2203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_INVALID_UNICODE_CHARACTER_ERROR */
struct S2204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S2205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S2206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S2207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S2208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S2209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S2210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S2211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [LX_RULE] */
struct S2212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S2213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S2214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S2215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S2216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S2217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* new_upper */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S2218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [detachable LX_RULE] */
struct S2219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_RULE] */
struct S2220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_START_CONDITION */
struct S2221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S2222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* lower */
	T6 a2; /* upper */
	T6 a3; /* minimum_label */
	T6 a4; /* second_minimum_label */
	T6 a5; /* maximum_label */
	T0* a6; /* transitions */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S2223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S2224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S2225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type ARRAY [detachable LX_SYMBOL_CLASS] */
struct S2226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable LX_SYMBOL_CLASS] */
struct S2227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
struct S2228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
struct S2229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
struct S2231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S2232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S2233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S2234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S2235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S2236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S2237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S2238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
struct S2240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
struct S2242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
struct S2243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [detachable SPECIAL [NATURAL_64]] */
struct S2244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
struct S2246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
struct S2248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S2249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S2252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S2253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_ACTION */
struct S2255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S2256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S2257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S2258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S2259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S2261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S2263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S2265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S2266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S2268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S2269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S2270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S2271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
struct S2272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S2273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S2275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S2279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S2282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
struct S2287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
struct S2288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S2289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
struct S2291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T20 GE_default20;
extern T21 GE_default21;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T36 GE_default36;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T41 GE_default41;
extern T42 GE_default42;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T48 GE_default48;
extern T49 GE_default49;
extern T50 GE_default50;
extern T52 GE_default52;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T59 GE_default59;
extern T61 GE_default61;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T71 GE_default71;
extern T73 GE_default73;
extern T74 GE_default74;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T81 GE_default81;
extern T83 GE_default83;
extern T84 GE_default84;
extern T85 GE_default85;
extern T89 GE_default89;
extern T90 GE_default90;
extern T91 GE_default91;
extern T93 GE_default93;
extern T94 GE_default94;
extern T95 GE_default95;
extern T96 GE_default96;
extern T98 GE_default98;
extern T100 GE_default100;
extern T102 GE_default102;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T126 GE_default126;
extern T127 GE_default127;
extern T128 GE_default128;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T142 GE_default142;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T158 GE_default158;
extern T159 GE_default159;
extern T162 GE_default162;
extern T165 GE_default165;
extern T166 GE_default166;
extern T167 GE_default167;
extern T168 GE_default168;
extern T169 GE_default169;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T176 GE_default176;
extern T177 GE_default177;
extern T179 GE_default179;
extern T180 GE_default180;
extern T181 GE_default181;
extern T183 GE_default183;
extern T184 GE_default184;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T190 GE_default190;
extern T192 GE_default192;
extern T193 GE_default193;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T198 GE_default198;
extern T200 GE_default200;
extern T201 GE_default201;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T216 GE_default216;
extern T217 GE_default217;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T227 GE_default227;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T242 GE_default242;
extern T246 GE_default246;
extern T247 GE_default247;
extern T248 GE_default248;
extern T250 GE_default250;
extern T251 GE_default251;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T277 GE_default277;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T289 GE_default289;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T310 GE_default310;
extern T313 GE_default313;
extern T316 GE_default316;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T322 GE_default322;
extern T323 GE_default323;
extern T324 GE_default324;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T335 GE_default335;
extern T336 GE_default336;
extern T337 GE_default337;
extern T338 GE_default338;
extern T339 GE_default339;
extern T340 GE_default340;
extern T341 GE_default341;
extern T342 GE_default342;
extern T343 GE_default343;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T350 GE_default350;
extern T351 GE_default351;
extern T352 GE_default352;
extern T353 GE_default353;
extern T354 GE_default354;
extern T355 GE_default355;
extern T356 GE_default356;
extern T357 GE_default357;
extern T358 GE_default358;
extern T359 GE_default359;
extern T360 GE_default360;
extern T361 GE_default361;
extern T363 GE_default363;
extern T364 GE_default364;
extern T367 GE_default367;
extern T368 GE_default368;
extern T370 GE_default370;
extern T371 GE_default371;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T394 GE_default394;
extern T395 GE_default395;
extern T396 GE_default396;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T405 GE_default405;
extern T406 GE_default406;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T415 GE_default415;
extern T423 GE_default423;
extern T424 GE_default424;
extern T425 GE_default425;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T432 GE_default432;
extern T437 GE_default437;
extern T438 GE_default438;
extern T442 GE_default442;
extern T443 GE_default443;
extern T444 GE_default444;
extern T447 GE_default447;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T453 GE_default453;
extern T454 GE_default454;
extern T457 GE_default457;
extern T458 GE_default458;
extern T459 GE_default459;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T466 GE_default466;
extern T467 GE_default467;
extern T470 GE_default470;
extern T471 GE_default471;
extern T475 GE_default475;
extern T477 GE_default477;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T482 GE_default482;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T488 GE_default488;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T515 GE_default515;
extern T516 GE_default516;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T521 GE_default521;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T529 GE_default529;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T536 GE_default536;
extern T537 GE_default537;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T543 GE_default543;
extern T544 GE_default544;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T558 GE_default558;
extern T559 GE_default559;
extern T562 GE_default562;
extern T563 GE_default563;
extern T566 GE_default566;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T574 GE_default574;
extern T576 GE_default576;
extern T578 GE_default578;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T602 GE_default602;
extern T603 GE_default603;
extern T604 GE_default604;
extern T605 GE_default605;
extern T608 GE_default608;
extern T609 GE_default609;
extern T611 GE_default611;
extern T612 GE_default612;
extern T613 GE_default613;
extern T614 GE_default614;
extern T615 GE_default615;
extern T616 GE_default616;
extern T617 GE_default617;
extern T620 GE_default620;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T627 GE_default627;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T632 GE_default632;
extern T633 GE_default633;
extern T634 GE_default634;
extern T638 GE_default638;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T643 GE_default643;
extern T644 GE_default644;
extern T645 GE_default645;
extern T648 GE_default648;
extern T649 GE_default649;
extern T650 GE_default650;
extern T651 GE_default651;
extern T652 GE_default652;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T660 GE_default660;
extern T661 GE_default661;
extern T662 GE_default662;
extern T664 GE_default664;
extern T665 GE_default665;
extern T666 GE_default666;
extern T667 GE_default667;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T699 GE_default699;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T709 GE_default709;
extern T710 GE_default710;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T717 GE_default717;
extern T718 GE_default718;
extern T719 GE_default719;
extern T720 GE_default720;
extern T721 GE_default721;
extern T724 GE_default724;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T748 GE_default748;
extern T751 GE_default751;
extern T752 GE_default752;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T811 GE_default811;
extern T812 GE_default812;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T818 GE_default818;
extern T819 GE_default819;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T829 GE_default829;
extern T830 GE_default830;
extern T833 GE_default833;
extern T836 GE_default836;
extern T837 GE_default837;
extern T838 GE_default838;
extern T839 GE_default839;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T849 GE_default849;
extern T850 GE_default850;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T878 GE_default878;
extern T879 GE_default879;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T888 GE_default888;
extern T889 GE_default889;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T899 GE_default899;
extern T900 GE_default900;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T915 GE_default915;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T941 GE_default941;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T949 GE_default949;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T964 GE_default964;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T986 GE_default986;
extern T987 GE_default987;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1119 GE_default1119;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1212 GE_default1212;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1256 GE_default1256;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1280 GE_default1280;
extern T1281 GE_default1281;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1313 GE_default1313;
extern T1314 GE_default1314;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1324 GE_default1324;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1402 GE_default1402;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1413 GE_default1413;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1422 GE_default1422;
extern T1423 GE_default1423;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1434 GE_default1434;
extern T1435 GE_default1435;
extern T1436 GE_default1436;
extern T1437 GE_default1437;
extern T1438 GE_default1438;
extern T1440 GE_default1440;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1469 GE_default1469;
extern T1471 GE_default1471;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1475 GE_default1475;
extern T1477 GE_default1477;
extern T1479 GE_default1479;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1483 GE_default1483;
extern T1484 GE_default1484;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1490 GE_default1490;
extern T1491 GE_default1491;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1496 GE_default1496;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1502 GE_default1502;
extern T1503 GE_default1503;
extern T1504 GE_default1504;
extern T1505 GE_default1505;
extern T1512 GE_default1512;
extern T1515 GE_default1515;
extern T1516 GE_default1516;
extern T1517 GE_default1517;
extern T1518 GE_default1518;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1530 GE_default1530;
extern T1531 GE_default1531;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1534 GE_default1534;
extern T1535 GE_default1535;
extern T1536 GE_default1536;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1541 GE_default1541;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1548 GE_default1548;
extern T1551 GE_default1551;
extern T1552 GE_default1552;
extern T1554 GE_default1554;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1559 GE_default1559;
extern T1560 GE_default1560;
extern T1561 GE_default1561;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1565 GE_default1565;
extern T1566 GE_default1566;
extern T1568 GE_default1568;
extern T1569 GE_default1569;
extern T1570 GE_default1570;
extern T1571 GE_default1571;
extern T1573 GE_default1573;
extern T1574 GE_default1574;
extern T1575 GE_default1575;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1579 GE_default1579;
extern T1580 GE_default1580;
extern T1581 GE_default1581;
extern T1583 GE_default1583;
extern T1584 GE_default1584;
extern T1586 GE_default1586;
extern T1587 GE_default1587;
extern T1589 GE_default1589;
extern T1590 GE_default1590;
extern T1591 GE_default1591;
extern T1592 GE_default1592;
extern T1595 GE_default1595;
extern T1596 GE_default1596;
extern T1598 GE_default1598;
extern T1599 GE_default1599;
extern T1600 GE_default1600;
extern T1601 GE_default1601;
extern T1602 GE_default1602;
extern T1603 GE_default1603;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1607 GE_default1607;
extern T1608 GE_default1608;
extern T1610 GE_default1610;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1623 GE_default1623;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1633 GE_default1633;
extern T1636 GE_default1636;
extern T1638 GE_default1638;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1643 GE_default1643;
extern T1649 GE_default1649;
extern T1650 GE_default1650;
extern T1651 GE_default1651;
extern T1652 GE_default1652;
extern T1653 GE_default1653;
extern T1654 GE_default1654;
extern T1655 GE_default1655;
extern T1656 GE_default1656;
extern T1657 GE_default1657;
extern T1658 GE_default1658;
extern T1659 GE_default1659;
extern T1660 GE_default1660;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1666 GE_default1666;
extern T1667 GE_default1667;
extern T1668 GE_default1668;
extern T1671 GE_default1671;
extern T1672 GE_default1672;
extern T1673 GE_default1673;
extern T1674 GE_default1674;
extern T1675 GE_default1675;
extern T1676 GE_default1676;
extern T1677 GE_default1677;
extern T1678 GE_default1678;
extern T1679 GE_default1679;
extern T1680 GE_default1680;
extern T1682 GE_default1682;
extern T1683 GE_default1683;
extern T1685 GE_default1685;
extern T1686 GE_default1686;
extern T1688 GE_default1688;
extern T1689 GE_default1689;
extern T1690 GE_default1690;
extern T1691 GE_default1691;
extern T1692 GE_default1692;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1696 GE_default1696;
extern T1697 GE_default1697;
extern T1699 GE_default1699;
extern T1700 GE_default1700;
extern T1701 GE_default1701;
extern T1702 GE_default1702;
extern T1703 GE_default1703;
extern T1704 GE_default1704;
extern T1705 GE_default1705;
extern T1706 GE_default1706;
extern T1707 GE_default1707;
extern T1708 GE_default1708;
extern T1709 GE_default1709;
extern T1710 GE_default1710;
extern T1711 GE_default1711;
extern T1712 GE_default1712;
extern T1713 GE_default1713;
extern T1714 GE_default1714;
extern T1715 GE_default1715;
extern T1716 GE_default1716;
extern T1717 GE_default1717;
extern T1718 GE_default1718;
extern T1719 GE_default1719;
extern T1720 GE_default1720;
extern T1721 GE_default1721;
extern T1722 GE_default1722;
extern T1723 GE_default1723;
extern T1724 GE_default1724;
extern T1725 GE_default1725;
extern T1726 GE_default1726;
extern T1727 GE_default1727;
extern T1728 GE_default1728;
extern T1729 GE_default1729;
extern T1730 GE_default1730;
extern T1731 GE_default1731;
extern T1732 GE_default1732;
extern T1733 GE_default1733;
extern T1734 GE_default1734;
extern T1736 GE_default1736;
extern T1738 GE_default1738;
extern T1739 GE_default1739;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1745 GE_default1745;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1759 GE_default1759;
extern T1760 GE_default1760;
extern T1761 GE_default1761;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1766 GE_default1766;
extern T1767 GE_default1767;
extern T1768 GE_default1768;
extern T1769 GE_default1769;
extern T1770 GE_default1770;
extern T1772 GE_default1772;
extern T1774 GE_default1774;
extern T1775 GE_default1775;
extern T1776 GE_default1776;
extern T1777 GE_default1777;
extern T1778 GE_default1778;
extern T1779 GE_default1779;
extern T1780 GE_default1780;
extern T1783 GE_default1783;
extern T1785 GE_default1785;
extern T1786 GE_default1786;
extern T1789 GE_default1789;
extern T1793 GE_default1793;
extern T1794 GE_default1794;
extern T1795 GE_default1795;
extern T1796 GE_default1796;
extern T1797 GE_default1797;
extern T1798 GE_default1798;
extern T1799 GE_default1799;
extern T1801 GE_default1801;
extern T1802 GE_default1802;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1808 GE_default1808;
extern T1809 GE_default1809;
extern T1810 GE_default1810;
extern T1812 GE_default1812;
extern T1813 GE_default1813;
extern T1814 GE_default1814;
extern T1815 GE_default1815;
extern T1818 GE_default1818;
extern T1819 GE_default1819;
extern T1820 GE_default1820;
extern T1821 GE_default1821;
extern T1828 GE_default1828;
extern T1832 GE_default1832;
extern T1833 GE_default1833;
extern T1835 GE_default1835;
extern T1836 GE_default1836;
extern T1839 GE_default1839;
extern T1843 GE_default1843;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1846 GE_default1846;
extern T1848 GE_default1848;
extern T1852 GE_default1852;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1856 GE_default1856;
extern T1859 GE_default1859;
extern T1860 GE_default1860;
extern T1861 GE_default1861;
extern T1862 GE_default1862;
extern T1863 GE_default1863;
extern T1864 GE_default1864;
extern T1865 GE_default1865;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1869 GE_default1869;
extern T1870 GE_default1870;
extern T1871 GE_default1871;
extern T1872 GE_default1872;
extern T1873 GE_default1873;
extern T1877 GE_default1877;
extern T1880 GE_default1880;
extern T1881 GE_default1881;
extern T1882 GE_default1882;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1886 GE_default1886;
extern T1888 GE_default1888;
extern T1890 GE_default1890;
extern T1891 GE_default1891;
extern T1893 GE_default1893;
extern T1894 GE_default1894;
extern T1896 GE_default1896;
extern T1897 GE_default1897;
extern T1898 GE_default1898;
extern T1899 GE_default1899;
extern T1900 GE_default1900;
extern T1901 GE_default1901;
extern T1902 GE_default1902;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1907 GE_default1907;
extern T1908 GE_default1908;
extern T1910 GE_default1910;
extern T1911 GE_default1911;
extern T1912 GE_default1912;
extern T1913 GE_default1913;
extern T1914 GE_default1914;
extern T1915 GE_default1915;
extern T1917 GE_default1917;
extern T1918 GE_default1918;
extern T1919 GE_default1919;
extern T1920 GE_default1920;
extern T1921 GE_default1921;
extern T1922 GE_default1922;
extern T1924 GE_default1924;
extern T1927 GE_default1927;
extern T1931 GE_default1931;
extern T1933 GE_default1933;
extern T1934 GE_default1934;
extern T1935 GE_default1935;
extern T1936 GE_default1936;
extern T1937 GE_default1937;
extern T1938 GE_default1938;
extern T1939 GE_default1939;
extern T1940 GE_default1940;
extern T1941 GE_default1941;
extern T1942 GE_default1942;
extern T1943 GE_default1943;
extern T1944 GE_default1944;
extern T1945 GE_default1945;
extern T1946 GE_default1946;
extern T1947 GE_default1947;
extern T1948 GE_default1948;
extern T1949 GE_default1949;
extern T1950 GE_default1950;
extern T1951 GE_default1951;
extern T1952 GE_default1952;
extern T1953 GE_default1953;
extern T1954 GE_default1954;
extern T1955 GE_default1955;
extern T1956 GE_default1956;
extern T1957 GE_default1957;
extern T1958 GE_default1958;
extern T1959 GE_default1959;
extern T1960 GE_default1960;
extern T1961 GE_default1961;
extern T1962 GE_default1962;
extern T1963 GE_default1963;
extern T1964 GE_default1964;
extern T1965 GE_default1965;
extern T1966 GE_default1966;
extern T1967 GE_default1967;
extern T1968 GE_default1968;
extern T1969 GE_default1969;
extern T1970 GE_default1970;
extern T1971 GE_default1971;
extern T1972 GE_default1972;
extern T1973 GE_default1973;
extern T1974 GE_default1974;
extern T1975 GE_default1975;
extern T1976 GE_default1976;
extern T1977 GE_default1977;
extern T1979 GE_default1979;
extern T1980 GE_default1980;
extern T1981 GE_default1981;
extern T1982 GE_default1982;
extern T1983 GE_default1983;
extern T1984 GE_default1984;
extern T1985 GE_default1985;
extern T1986 GE_default1986;
extern T1988 GE_default1988;
extern T1989 GE_default1989;
extern T1991 GE_default1991;
extern T1992 GE_default1992;
extern T1993 GE_default1993;
extern T1994 GE_default1994;
extern T1995 GE_default1995;
extern T1996 GE_default1996;
extern T1997 GE_default1997;
extern T1998 GE_default1998;
extern T1999 GE_default1999;
extern T2000 GE_default2000;
extern T2003 GE_default2003;
extern T2004 GE_default2004;
extern T2005 GE_default2005;
extern T2006 GE_default2006;
extern T2007 GE_default2007;
extern T2008 GE_default2008;
extern T2009 GE_default2009;
extern T2010 GE_default2010;
extern T2012 GE_default2012;
extern T2013 GE_default2013;
extern T2014 GE_default2014;
extern T2015 GE_default2015;
extern T2016 GE_default2016;
extern T2017 GE_default2017;
extern T2018 GE_default2018;
extern T2019 GE_default2019;
extern T2020 GE_default2020;
extern T2021 GE_default2021;
extern T2022 GE_default2022;
extern T2025 GE_default2025;
extern T2026 GE_default2026;
extern T2030 GE_default2030;
extern T2031 GE_default2031;
extern T2032 GE_default2032;
extern T2033 GE_default2033;
extern T2035 GE_default2035;
extern T2036 GE_default2036;
extern T2037 GE_default2037;
extern T2040 GE_default2040;
extern T2041 GE_default2041;
extern T2045 GE_default2045;
extern T2047 GE_default2047;
extern T2055 GE_default2055;
extern T2057 GE_default2057;
extern T2061 GE_default2061;
extern T2062 GE_default2062;
extern T2065 GE_default2065;
extern T2066 GE_default2066;
extern T2067 GE_default2067;
extern T2070 GE_default2070;
extern T2071 GE_default2071;
extern T2074 GE_default2074;
extern T2075 GE_default2075;
extern T2082 GE_default2082;
extern T2097 GE_default2097;
extern T2098 GE_default2098;
extern T2099 GE_default2099;
extern T2100 GE_default2100;
extern T2104 GE_default2104;
extern T2105 GE_default2105;
extern T2117 GE_default2117;
extern T2123 GE_default2123;
extern T2124 GE_default2124;
extern T2125 GE_default2125;
extern T2126 GE_default2126;
extern T2127 GE_default2127;
extern T2128 GE_default2128;
extern T2129 GE_default2129;
extern T2130 GE_default2130;
extern T2131 GE_default2131;
extern T2132 GE_default2132;
extern T2134 GE_default2134;
extern T2138 GE_default2138;
extern T2139 GE_default2139;
extern T2141 GE_default2141;
extern T2143 GE_default2143;
extern T2144 GE_default2144;
extern T2145 GE_default2145;
extern T2146 GE_default2146;
extern T2147 GE_default2147;
extern T2148 GE_default2148;
extern T2149 GE_default2149;
extern T2151 GE_default2151;
extern T2152 GE_default2152;
extern T2154 GE_default2154;
extern T2156 GE_default2156;
extern T2157 GE_default2157;
extern T2161 GE_default2161;
extern T2163 GE_default2163;
extern T2164 GE_default2164;
extern T2165 GE_default2165;
extern T2167 GE_default2167;
extern T2168 GE_default2168;
extern T2169 GE_default2169;
extern T2172 GE_default2172;
extern T2173 GE_default2173;
extern T2174 GE_default2174;
extern T2175 GE_default2175;
extern T2176 GE_default2176;
extern T2178 GE_default2178;
extern T2179 GE_default2179;
extern T2180 GE_default2180;
extern T2181 GE_default2181;
extern T2183 GE_default2183;
extern T2184 GE_default2184;
extern T2185 GE_default2185;
extern T2186 GE_default2186;
extern T2187 GE_default2187;
extern T2188 GE_default2188;
extern T2189 GE_default2189;
extern T2190 GE_default2190;
extern T2191 GE_default2191;
extern T2192 GE_default2192;
extern T2193 GE_default2193;
extern T2194 GE_default2194;
extern T2195 GE_default2195;
extern T2196 GE_default2196;
extern T2197 GE_default2197;
extern T2198 GE_default2198;
extern T2199 GE_default2199;
extern T2200 GE_default2200;
extern T2201 GE_default2201;
extern T2202 GE_default2202;
extern T2203 GE_default2203;
extern T2204 GE_default2204;
extern T2205 GE_default2205;
extern T2206 GE_default2206;
extern T2207 GE_default2207;
extern T2208 GE_default2208;
extern T2209 GE_default2209;
extern T2210 GE_default2210;
extern T2211 GE_default2211;
extern T2212 GE_default2212;
extern T2213 GE_default2213;
extern T2214 GE_default2214;
extern T2215 GE_default2215;
extern T2216 GE_default2216;
extern T2217 GE_default2217;
extern T2218 GE_default2218;
extern T2219 GE_default2219;
extern T2220 GE_default2220;
extern T2221 GE_default2221;
extern T2222 GE_default2222;
extern T2223 GE_default2223;
extern T2224 GE_default2224;
extern T2225 GE_default2225;
extern T2226 GE_default2226;
extern T2227 GE_default2227;
extern T2228 GE_default2228;
extern T2229 GE_default2229;
extern T2230 GE_default2230;
extern T2231 GE_default2231;
extern T2232 GE_default2232;
extern T2233 GE_default2233;
extern T2234 GE_default2234;
extern T2235 GE_default2235;
extern T2236 GE_default2236;
extern T2237 GE_default2237;
extern T2238 GE_default2238;
extern T2239 GE_default2239;
extern T2240 GE_default2240;
extern T2242 GE_default2242;
extern T2243 GE_default2243;
extern T2244 GE_default2244;
extern T2246 GE_default2246;
extern T2248 GE_default2248;
extern T2249 GE_default2249;
extern T2252 GE_default2252;
extern T2253 GE_default2253;
extern T2255 GE_default2255;
extern T2256 GE_default2256;
extern T2257 GE_default2257;
extern T2258 GE_default2258;
extern T2259 GE_default2259;
extern T2261 GE_default2261;
extern T2263 GE_default2263;
extern T2265 GE_default2265;
extern T2266 GE_default2266;
extern T2268 GE_default2268;
extern T2269 GE_default2269;
extern T2270 GE_default2270;
extern T2271 GE_default2271;
extern T2272 GE_default2272;
extern T2273 GE_default2273;
extern T2275 GE_default2275;
extern T2279 GE_default2279;
extern T2282 GE_default2282;
extern T2285 GE_default2285;
extern T2286 GE_default2286;
extern T2287 GE_default2287;
extern T2288 GE_default2288;
extern T2289 GE_default2289;
extern T2291 GE_default2291;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr8(T6 c);
extern T0* GE_new_istr32(T6 c);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(TC* ac, T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(TC* ac, T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(TC* ac, T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new20(TC* ac, T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new21(TC* ac, T1 initialize);
/* New instance of type GEC */
extern T0* GE_new25(TC* ac, T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new26(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new27(TC* ac, T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new28(TC* ac, T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new29(TC* ac, T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new30(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new31(TC* ac, T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new32(TC* ac, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new33(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new34(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new35(TC* ac, T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new36(TC* ac, T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new37(TC* ac, T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new38(TC* ac, T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new41(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new42(TC* ac, T1 initialize);
/* New instance of type UT_GOBO_VARIABLES */
extern T0* GE_new43(TC* ac, T1 initialize);
/* New instance of type UT_ISE_VARIABLES */
extern T0* GE_new44(TC* ac, T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new45(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new46(TC* ac, T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new48(TC* ac, T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new49(TC* ac, T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new50(TC* ac, T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new52(TC* ac, T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new53(TC* ac, T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new54(TC* ac, T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new55(TC* ac, T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new59(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new61(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new62(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new63(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new64(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new65(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CAPABILITIES */
extern T0* GE_new66(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new67(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new68(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new69(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new71(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new73(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new74(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new76(TC* ac, T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new77(TC* ac, T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new78(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new79(TC* ac, T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new81(TC* ac, T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new83(TC* ac, T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new84(TC* ac, T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new85(TC* ac, T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new89(TC* ac, T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new90(TC* ac, T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new91(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new93(TC* ac, T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new94(TC* ac, T1 initialize);
/* New instance of type GECC */
extern T0* GE_new95(TC* ac, T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new96(TC* ac, T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new98(TC* ac, T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new100(TC* ac, T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new102(TC* ac, T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new104(TC* ac, T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new105(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new106(TC* ac, T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new107(TC* ac, T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new108(TC* ac, T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new109(TC* ac, T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new110(TC* ac, T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new112(TC* ac, T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new113(TC* ac, T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new114(TC* ac, T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new115(TC* ac, T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new116(TC* ac, T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new117(TC* ac, T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new118(TC* ac, T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new119(TC* ac, T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new120(TC* ac, T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new121(TC* ac, T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new122(TC* ac, T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new123(TC* ac, T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new124(TC* ac, T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new125(TC* ac, T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new126(TC* ac, T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new127(TC* ac, T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new128(TC* ac, T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new129(TC* ac, T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new130(TC* ac, T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new131(TC* ac, T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new132(TC* ac, T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new133(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new134(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new135(TC* ac, T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new138(TC* ac, T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new139(TC* ac, T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new140(TC* ac, T1 initialize);
/* New instance of type KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new142(TC* ac, T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new144(TC* ac, T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new145(TC* ac, T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new146(TC* ac, T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new148(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new149(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new150(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new151(TC* ac, T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new152(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [AP_OPTION] */
extern T0* GE_new153(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new154(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable STRING_8] */
extern T0* GE_new155(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable STRING_8] */
extern T0* GE_new156(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new157(TC* ac, T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new158(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new159(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new162(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new165(TC* ac, T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new166(TC* ac, T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new167(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new168(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET] */
extern T0* GE_new169(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_TARGET]] */
extern T0* GE_new170(TC* ac, T1 initialize);
/* New instance of type TUPLE */
extern T0* GE_new171(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new172(TC* ac, T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new173(TC* ac, T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new174(TC* ac, T1 initialize);
/* New instance of type TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8] */
extern T0* GE_new175(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]] */
extern T0* GE_new176(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, detachable STRING_8, PROCEDURE [TUPLE [ET_ECF_TARGET]], DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new177(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new179(TC* ac, T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new180(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new181(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new183(TC* ac, T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new184(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new187(TC* ac, T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new188(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new189(TC* ac, T1 initialize);
/* New instance of type ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new190(TC* ac, T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new192(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new193(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new195(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new196(TC* ac, T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new197(TC* ac, T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new198(TC* ac, T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new200(TC* ac, T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new201(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new203(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new204(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGET_PARENT */
extern T0* GE_new205(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new206(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new207(TC* ac, T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new208(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new209(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new210(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new212(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new213(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new214(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new216(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new217(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new219(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new220(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new221(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new222(TC* ac, T1 initialize);
/* New instance of type TUPLE [STRING_8] */
extern T0* GE_new223(TC* ac, T1 initialize);
/* New instance of type FUNCTION [TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new224(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new225(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new227(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE */
extern T0* GE_new229(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new230(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new231(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new232(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLASS] */
extern T0* GE_new233(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLASS]] */
extern T0* GE_new234(TC* ac, T1 initialize);
/* New instance of type TUPLE [INTEGER_32] */
extern T0* GE_new235(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new236(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new237(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new242(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new246(TC* ac, T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new247(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new248(TC* ac, T1 initialize);
/* New instance of type ARRAY [ET_TYPE] */
extern T0* GE_new250(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new251(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new259(TC* ac, T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new260(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new261(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new262(TC* ac, T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new263(TC* ac, T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new264(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_MULTIPROCESSOR */
extern T0* GE_new265(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new266(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new267(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new269(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new270(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new271(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new272(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new273(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new274(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new275(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new277(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new280(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new281(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new282(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new283(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new284(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new285(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new286(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new287(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new288(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new289(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_ITEM_SCOPE */
extern T0* GE_new290(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new291(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_SCOPE */
extern T0* GE_new292(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new293(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new294(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new295(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new296(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NOTE_TERM] */
extern T0* GE_new297(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new298(TC* ac, T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new299(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new300(TC* ac, T1 initialize);
/* New instance of type ET_ADAPTED_BASE_CLASS_CHECKER */
extern T0* GE_new301(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new303(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new304(TC* ac, T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new305(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new310(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new313(TC* ac, T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new316(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new318(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new319(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new320(TC* ac, T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new322(TC* ac, T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new323(TC* ac, T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new324(TC* ac, T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new326(TC* ac, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new327(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new328(TC* ac, T6 a1, T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new329(TC* ac, T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new330(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENTS */
extern T0* GE_new332(TC* ac, T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new333(TC* ac, T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new334(TC* ac, T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new335(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new336(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new337(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new338(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [BOOLEAN] */
extern T0* GE_new339(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new340(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new341(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new342(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new343(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new344(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new345(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_RESULT] */
extern T0* GE_new346(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST */
extern T0* GE_new347(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new348(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new349(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new350(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new351(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new352(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new353(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new354(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new355(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new356(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new357(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new358(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new359(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new360(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new361(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new363(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT */
extern T0* GE_new364(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_INSTRUCTION */
extern T0* GE_new367(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new368(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new370(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION */
extern T0* GE_new371(TC* ac, T1 initialize);
/* New instance of type ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION */
extern T0* GE_new373(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new374(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FEATURE] */
extern T0* GE_new375(TC* ac, T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new376(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new377(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new378(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new379(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new380(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new381(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new382(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_FEATURE] */
extern T0* GE_new383(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new384(TC* ac, T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new385(TC* ac, T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new386(TC* ac, T1 initialize);
/* New instance of type DS_STRING_HASH_TABLE */
extern T0* GE_new387(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new388(TC* ac, T1 initialize);
/* New instance of type UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR */
extern T0* GE_new389(TC* ac, T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new390(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new391(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_TYPES */
extern T0* GE_new392(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new394(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_TYPES */
extern T0* GE_new395(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new396(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new399(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_SECONDARY_TYPE */
extern T0* GE_new400(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new401(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new405(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new406(TC* ac, T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new410(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new411(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [STRING_8] */
extern T0* GE_new412(TC* ac, T1 initialize);
/* New instance of type UC_STRING_COMPARATOR */
extern T0* GE_new413(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new415(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_INLINED_EXPRESSION */
extern T0* GE_new423(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_CALL_CONTEXT */
extern T0* GE_new424(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new425(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE] */
extern T0* GE_new427(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new428(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new429(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new430(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new431(TC* ac, T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new432(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new437(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new438(TC* ac, T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new442(TC* ac, T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new443(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new444(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_COMPONENT_LIST */
extern T0* GE_new447(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_EXPRESSION, ET_DYNAMIC_PRIMARY_TYPE, BOOLEAN] */
extern T0* GE_new449(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, INTEGER_32, INTEGER_32] */
extern T0* GE_new450(TC* ac, T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new451(TC* ac, T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new453(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new454(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new457(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new458(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new459(TC* ac, T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new462(TC* ac, T1 initialize);
/* New instance of type TUPLE [GECC, DS_ARRAYED_LIST [STRING_8], INTEGER_32, MUTEX] */
extern T0* GE_new463(TC* ac, T1 initialize);
/* New instance of type WORKER_THREAD */
extern T0* GE_new464(TC* ac, T1 initialize);
/* New instance of type PATH */
extern T0* GE_new466(TC* ac, T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new467(TC* ac, T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new470(TC* ac, T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new471(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_ECF_CONFIG] */
extern T0* GE_new475(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_SYSTEM, DS_CELL [detachable ET_ECF_CONFIG]] */
extern T0* GE_new477(TC* ac, T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new479(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new480(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new481(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new482(TC* ac, T1 initialize);
/* New instance of type ET_ECF_REDIRECTION_CONFIG */
extern T0* GE_new484(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new485(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new486(TC* ac, T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new488(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new489(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new490(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new491(TC* ac, T1 initialize);
/* New instance of type ET_ATTACHMENT_MARK_SEPARATE_KEYWORD */
extern T0* GE_new492(TC* ac, T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new493(TC* ac, T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new494(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new495(TC* ac, T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new498(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new499(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new500(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new501(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new502(TC* ac, T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new503(TC* ac, T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new504(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new505(TC* ac, T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new506(TC* ac, T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new507(TC* ac, T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new508(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new509(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new510(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new511(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new512(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new513(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new514(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new515(TC* ac, T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new516(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new518(TC* ac, T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new519(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new520(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new521(TC* ac, T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new523(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new524(TC* ac, T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new525(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new526(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new529(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new530(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new531(TC* ac, T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new532(TC* ac, T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new533(TC* ac, T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new534(TC* ac, T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new536(TC* ac, T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new537(TC* ac, T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new538(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new539(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new541(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new543(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new544(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new545(TC* ac, T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new546(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new547(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new548(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable STRING_8] */
extern T0* GE_new549(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable STRING_8] */
extern T0* GE_new550(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new551(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [STRING_8] */
extern T0* GE_new552(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [BOOLEAN] */
extern T0* GE_new553(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new554(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [INTEGER_32] */
extern T0* GE_new555(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new556(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new558(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new559(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new562(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new563(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new566(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new567(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new568(TC* ac, T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new569(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new571(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new572(TC* ac, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new573(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new574(TC* ac, T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new576(TC* ac, T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new578(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new579(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new580(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new581(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new582(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new583(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new584(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new585(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new586(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new587(TC* ac, T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new588(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new589(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new590(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new591(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new592(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new593(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new594(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new595(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new596(TC* ac, T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new597(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new598(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new599(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new600(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new601(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new602(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new603(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new604(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new605(TC* ac, T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new608(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new609(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new611(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new612(TC* ac, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new613(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new614(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new615(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new616(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new617(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new620(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new622(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8] */
extern T0* GE_new623(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new624(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new625(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new627(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new629(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new630(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new631(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new632(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new633(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new634(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new638(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new639(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8] */
extern T0* GE_new640(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new641(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new642(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new643(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_FEATURE] */
extern T0* GE_new644(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
extern T0* GE_new645(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new648(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new649(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new650(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new651(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new652(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8] */
extern T0* GE_new654(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new655(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new656(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new660(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new661(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new662(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new664(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new665(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new666(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR, DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new667(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new669(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new670(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new671(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new673(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new674(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new675(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_CLASS] */
extern T0* GE_new676(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new677(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new678(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new679(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new680(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new681(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new682(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new683(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new684(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new685(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new686(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new687(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new688(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new689(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new690(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new691(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new692(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new693(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new694(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]] */
extern T0* GE_new695(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new696(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new697(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new698(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new699(TC* ac, T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new702(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new703(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new704(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new705(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT] */
extern T0* GE_new706(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT] */
extern T0* GE_new707(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT] */
extern T0* GE_new709(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ITERATION_COMPONENT] */
extern T0* GE_new710(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new712(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new713(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new714(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new715(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new717(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new718(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new719(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new720(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTIONS] */
extern T0* GE_new721(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
extern T0* GE_new724(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new725(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new726(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM] */
extern T0* GE_new727(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM] */
extern T0* GE_new729(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM] */
extern T0* GE_new730(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new731(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
extern T0* GE_new732(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new733(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new734(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]] */
extern T0* GE_new735(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new736(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_32] */
extern T0* GE_new737(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_CHARACTER_SET] */
extern T0* GE_new738(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_32] */
extern T0* GE_new739(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new740(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_64, NATURAL_32] */
extern T0* GE_new741(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32] */
extern T0* GE_new742(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new743(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new744(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new745(TC* ac, T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new748(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new751(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new752(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new754(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
extern T0* GE_new755(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new756(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new757(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new758(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new759(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new760(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new762(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new763(TC* ac, T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new764(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new765(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new766(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new767(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new768(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES] */
extern T0* GE_new769(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new770(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new771(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES] */
extern T0* GE_new772(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new773(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new774(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new775(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new776(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new777(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new778(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new779(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new780(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new781(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new782(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RESULT] */
extern T0* GE_new783(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RESULT] */
extern T0* GE_new784(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_RESULT] */
extern T0* GE_new785(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new786(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new787(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new788(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new789(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new790(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new791(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32] */
extern T0* GE_new792(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new793(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new795(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new796(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new797(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new798(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new801(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new802(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new803(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new804(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new806(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new807(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new808(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new809(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE] */
extern T0* GE_new810(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new811(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new812(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new814(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new815(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new816(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new818(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new819(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new821(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new822(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new823(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new824(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION] */
extern T0* GE_new825(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new826(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new827(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT] */
extern T0* GE_new828(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new829(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new830(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new833(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new837(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new838(TC* ac, T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new839(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new843(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new844(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new845(TC* ac, T1 initialize);
/* New instance of type THREAD_ATTRIBUTES */
extern T0* GE_new846(TC* ac, T1 initialize);
/* New instance of type CELL [BOOLEAN] */
extern T0* GE_new847(TC* ac, T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new849(TC* ac, T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new850(TC* ac, T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new851(TC* ac, T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new852(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NOTE_ELEMENT */
extern T0* GE_new853(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new854(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new855(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new856(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new857(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NAMESPACES */
extern T0* GE_new858(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new859(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new860(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new861(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new862(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new863(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new864(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new865(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ACTION] */
extern T0* GE_new866(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new867(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VERSION */
extern T0* GE_new869(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new870(TC* ac, T1 initialize);
/* New instance of type ET_ECF_NAMESPACE */
extern T0* GE_new871(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new872(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new873(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new874(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new875(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new876(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new877(TC* ac, T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new878(TC* ac, T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new879(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ACTION */
extern T0* GE_new880(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new881(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new882(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS] */
extern T0* GE_new883(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_OPTIONS]] */
extern T0* GE_new884(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new885(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new886(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ORED_CONDITIONS */
extern T0* GE_new887(TC* ac, T1 initialize);
/* New instance of type ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new888(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VISIBLE_CLASS */
extern T0* GE_new889(TC* ac, T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new891(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new892(TC* ac, T1 initialize);
/* New instance of type ET_ECF_VOID_SAFETY_CONDITION */
extern T0* GE_new893(TC* ac, T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new894(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new895(TC* ac, T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new896(TC* ac, T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new897(TC* ac, T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new899(TC* ac, T1 initialize);
/* New instance of type ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new900(TC* ac, T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new902(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new903(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_COUNTER] */
extern T0* GE_new904(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_CLASS], PROCEDURE [TUPLE]] */
extern T0* GE_new905(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_UNIVERSE] */
extern T0* GE_new906(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new907(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]]] */
extern T0* GE_new908(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new909(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new911(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new912(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new913(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new914(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new915(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new916(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new917(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]], PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new918(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new919(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new920(TC* ac, T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new921(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY] */
extern T0* GE_new922(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_LIBRARY]] */
extern T0* GE_new923(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new924(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER] */
extern T0* GE_new926(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_CLUSTER]] */
extern T0* GE_new927(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new928(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new929(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new930(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new931(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new932(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new933(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new934(TC* ac, T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new935(TC* ac, T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new936(TC* ac, T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new937(TC* ac, T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new938(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_CLASS]] */
extern T0* GE_new939(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new941(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new942(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new943(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new944(TC* ac, T1 initialize);
/* New instance of type TUPLE [BOOLEAN] */
extern T0* GE_new945(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new946(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLUSTER]]] */
extern T0* GE_new949(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new953(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new954(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], FUNCTION [TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new955(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new957(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new958(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new959(TC* ac, T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new962(TC* ac, T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new964(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new966(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new967(TC* ac, T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new968(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new969(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new970(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new971(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new972(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new973(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new974(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new975(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT] */
extern T0* GE_new977(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new978(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_ALIAS_NAME_LIST */
extern T0* GE_new979(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new980(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new981(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new982(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new983(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new986(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new987(TC* ac, T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new992(TC* ac, T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new993(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new994(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new995(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new996(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new997(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new999(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
extern T0* GE_new1000(TC* ac, T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1002(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1003(TC* ac, T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new1004(TC* ac, T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new1005(TC* ac, T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new1006(TC* ac, T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new1007(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_FILE_BUFFER */
extern T0* GE_new1011(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new1012(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1013(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1014(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new1015(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new1016(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1017(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1018(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1019(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1020(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1021(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1022(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new1023(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1024(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new1025(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new1026(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new1027(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new1028(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new1029(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new1030(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new1031(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new1032(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new1033(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new1034(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new1035(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new1036(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new1037(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new1038(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new1040(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new1041(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new1043(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new1044(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new1046(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new1047(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new1048(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new1049(TC* ac, T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new1050(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new1051(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER] */
extern T0* GE_new1052(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IDENTIFIER] */
extern T0* GE_new1053(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new1054(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new1056(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new1057(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new1058(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new1059(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new1060(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new1061(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new1062(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new1064(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new1065(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new1066(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new1067(TC* ac, T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new1068(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new1069(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new1070(TC* ac, T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new1071(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new1072(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new1073(TC* ac, T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new1074(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new1075(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new1076(TC* ac, T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new1077(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new1078(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new1079(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new1080(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new1081(TC* ac, T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new1082(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new1083(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new1084(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new1085(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new1086(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new1087(TC* ac, T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new1088(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new1089(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1090(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1091(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1092(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1093(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1094(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1095(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1096(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1097(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1098(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1100(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1101(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new1102(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1103(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new1104(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new1105(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new1106(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new1107(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new1108(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new1109(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME_LIST] */
extern T0* GE_new1110(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new1111(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new1113(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new1114(TC* ac, T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new1115(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new1116(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new1117(TC* ac, T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new1118(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new1119(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1120(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1121(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new1122(TC* ac, T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new1123(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new1124(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new1125(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new1127(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1128(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new1130(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1131(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new1133(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new1134(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new1135(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new1136(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new1137(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new1138(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1139(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1140(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new1141(TC* ac, T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new1142(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new1143(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new1144(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new1145(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new1146(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new1148(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new1149(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new1150(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1151(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1153(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1154(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new1155(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1156(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1157(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new1158(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1159(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new1160(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_RENAME_LIST */
extern T0* GE_new1161(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST] */
extern T0* GE_new1162(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1163(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1165(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1166(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1168(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1169(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1171(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1172(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1173(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1174(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1175(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1176(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new1177(TC* ac, T1 initialize);
/* New instance of type ET_CREATION_REGION */
extern T0* GE_new1178(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new1179(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1180(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new1181(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1182(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1183(TC* ac, T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new1184(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1185(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1186(TC* ac, T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new1187(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1188(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1189(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new1190(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1191(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1192(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new1193(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new1194(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1195(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new1196(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1197(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1198(TC* ac, T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new1199(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1200(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1201(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1203(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1204(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1205(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new1206(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new1207(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1208(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new1209(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1210(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1211(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1212(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1214(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1215(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new1216(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1217(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1218(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new1219(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1220(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1221(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new1222(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1223(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1224(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1225(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1226(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1228(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1229(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1230(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1231(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1233(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1234(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1235(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1236(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1237(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1238(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1240(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1241(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1242(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1243(TC* ac, T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new1244(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new1245(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1246(TC* ac, T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new1247(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1248(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new1249(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new1250(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1251(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1252(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1253(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM] */
extern T0* GE_new1254(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new1255(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS] */
extern T0* GE_new1256(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new1257(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION] */
extern T0* GE_new1258(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new1259(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_EXPRESSION */
extern T0* GE_new1260(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_EXPRESSION] */
extern T0* GE_new1261(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1262(TC* ac, T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new1263(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1264(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1265(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1266(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1267(TC* ac, T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new1268(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1269(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1270(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1271(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1272(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1274(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1275(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new1276(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1277(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1278(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1280(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1281(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1282(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1283(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new1284(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1285(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1286(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new1287(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1288(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1289(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1291(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1292(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new1293(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1294(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1295(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1296(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST] */
extern T0* GE_new1297(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_LIST */
extern T0* GE_new1298(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_LIST] */
extern T0* GE_new1299(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM] */
extern T0* GE_new1300(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_ITEM] */
extern T0* GE_new1302(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM] */
extern T0* GE_new1303(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM] */
extern T0* GE_new1304(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new1305(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_ITEM] */
extern T0* GE_new1307(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new1308(TC* ac, T1 initialize);
/* New instance of type ET_NOTE_TERM_LIST */
extern T0* GE_new1309(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_NOTE_TERM_LIST] */
extern T0* GE_new1310(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1311(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1313(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1314(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new1315(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1316(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1317(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1318(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1319(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new1320(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1321(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1322(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1323(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1324(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1325(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1326(TC* ac, T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new1327(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1328(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new1329(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new1330(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new1331(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new1332(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1333(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1335(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new1336(TC* ac, T1 initialize);
/* New instance of type ET_QUANTIFIER_EXPRESSION */
extern T0* GE_new1337(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUANTIFIER_EXPRESSION] */
extern T0* GE_new1338(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new1339(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUERY] */
extern T0* GE_new1340(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1341(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1343(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1344(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1345(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new1346(TC* ac, T1 initialize);
/* New instance of type ET_REPEAT_INSTRUCTION */
extern T0* GE_new1347(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_REPEAT_INSTRUCTION] */
extern T0* GE_new1348(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1349(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1350(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1351(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1352(TC* ac, T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new1353(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1354(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new1355(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE] */
extern T0* GE_new1356(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new1357(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT] */
extern T0* GE_new1359(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1360(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1362(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new1363(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1364(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST] */
extern T0* GE_new1365(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1366(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1368(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1369(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1370(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1371(TC* ac, T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new1372(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1373(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new1374(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION */
extern T0* GE_new1375(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION] */
extern T0* GE_new1376(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new1377(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_EXPRESSION_LIST */
extern T0* GE_new1378(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_EXPRESSION_LIST] */
extern T0* GE_new1379(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1380(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1381(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1382(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1383(TC* ac, T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new1384(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1385(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1386(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1387(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1388(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1389(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1390(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1391(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1392(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1393(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1395(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1396(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1398(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1399(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1400(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1401(TC* ac, T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1402(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1403(TC* ac, T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1404(TC* ac, T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1405(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1406(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1407(TC* ac, T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1408(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1409(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1410(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1411(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1412(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1413(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1414(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1415(TC* ac, T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1419(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1420(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new1421(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new1422(TC* ac, T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1423(TC* ac, T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1426(TC* ac, T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1427(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS] */
extern T0* GE_new1428(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS] */
extern T0* GE_new1429(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1430(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1432(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1433(TC* ac, T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1434(TC* ac, T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1435(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1436(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [detachable STRING_8] */
extern T0* GE_new1437(TC* ac, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1438(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1440(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1441(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1442(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1443(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1446(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1447(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1450(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1451(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1452(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1453(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1454(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1455(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [STRING_8] */
extern T0* GE_new1456(TC* ac, T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1457(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [detachable STRING_8] */
extern T0* GE_new1460(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1461(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1462(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1463(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1464(TC* ac, T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1465(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1466(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1467(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1468(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1469(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1471(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1472(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1473(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1474(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32] */
extern T0* GE_new1475(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1477(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1479(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME] */
extern T0* GE_new1481(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL] */
extern T0* GE_new1482(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1483(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1484(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL] */
extern T0* GE_new1486(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME] */
extern T0* GE_new1487(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1488(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1489(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1490(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS] */
extern T0* GE_new1491(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_CLASS] */
extern T0* GE_new1493(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS] */
extern T0* GE_new1494(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1495(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1496(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1497(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT] */
extern T0* GE_new1498(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT] */
extern T0* GE_new1499(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1502(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1503(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_CHARACTER_SET] */
extern T0* GE_new1504(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET] */
extern T0* GE_new1505(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_64] */
extern T0* GE_new1512(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new1515(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1516(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1517(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1518(TC* ac, T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1521(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1522(TC* ac, T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1523(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new1524(TC* ac, T1 initialize);
/* New instance of type TUPLE [UT_TRISTATE] */
extern T0* GE_new1525(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ANY], PROCEDURE [TUPLE]] */
extern T0* GE_new1526(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new1527(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE] */
extern T0* GE_new1528(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1530(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1531(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1532(TC* ac, T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1533(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1534(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1535(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], PREDICATE [TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1536(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1538(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new1539(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_MASTER_CLASS]], FUNCTION [TUPLE [ET_MASTER_CLASS], BOOLEAN], FUNCTION [TUPLE, BOOLEAN]] */
extern T0* GE_new1540(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1541(TC* ac, T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1543(TC* ac, T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1544(TC* ac, T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1545(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1548(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1551(TC* ac, T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1552(TC* ac, T1 initialize);
/* New instance of type KL_UNICODE_CHARACTER_BUFFER */
extern T0* GE_new1554(TC* ac, T1 initialize);
/* New instance of type ET_INLINE_SEPARATE_ARGUMENT_LIST */
extern T0* GE_new1556(TC* ac, T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1557(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new1558(TC* ac, T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1559(TC* ac, T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1560(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1561(TC* ac, T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1562(TC* ac, T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1563(TC* ac, T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1564(TC* ac, T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1565(TC* ac, T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1566(TC* ac, T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1568(TC* ac, T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1569(TC* ac, T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1570(TC* ac, T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1571(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_NOTE */
extern T0* GE_new1573(TC* ac, T1 initialize);
/* New instance of type ET_NOTE */
extern T0* GE_new1574(TC* ac, T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1575(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1576(TC* ac, T1 initialize);
/* New instance of type ET_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1577(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1578(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1579(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1580(TC* ac, T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1581(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1583(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1584(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1586(TC* ac, T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1587(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1589(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1590(TC* ac, T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1591(TC* ac, T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1592(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_ASSERTION */
extern T0* GE_new1595(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1596(TC* ac, T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1598(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1599(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1600(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1601(TC* ac, T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1602(TC* ac, T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1603(TC* ac, T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1605(TC* ac, T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1606(TC* ac, T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1607(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1608(TC* ac, T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1610(TC* ac, T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1611(TC* ac, T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1612(TC* ac, T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1613(TC* ac, T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1614(TC* ac, T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1615(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1616(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1617(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1618(TC* ac, T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1619(TC* ac, T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1620(TC* ac, T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1621(TC* ac, T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1622(TC* ac, T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1623(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1624(TC* ac, T1 initialize);
/* New instance of type ET_ITERATION_CURSOR */
extern T0* GE_new1625(TC* ac, T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1626(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1627(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1628(TC* ac, T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1629(TC* ac, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1630(TC* ac, T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1631(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1632(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1633(TC* ac, T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1636(TC* ac, T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1638(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1640(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1641(TC* ac, T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1643(TC* ac, T1 initialize);
/* New instance of type SPECIAL [NATURAL_16] */
extern T0* GE_new1649(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [NATURAL_16] */
extern T0* GE_new1650(TC* ac, T1 initialize);
/* New instance of type ARRAY [NATURAL_32] */
extern T0* GE_new1651(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1652(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1653(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1654(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1655(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_NAMESPACE] */
extern T0* GE_new1656(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1657(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1658(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1659(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1660(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1661(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1662(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1663(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ACTION] */
extern T0* GE_new1664(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ACTION] */
extern T0* GE_new1665(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION] */
extern T0* GE_new1666(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1667(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_OPTIONS] */
extern T0* GE_new1668(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS] */
extern T0* GE_new1671(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1672(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1673(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1674(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1675(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1676(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1677(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1678(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1679(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1680(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1682(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1683(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1685(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1686(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1688(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1689(TC* ac, T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1690(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1691(TC* ac, T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1692(TC* ac, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1693(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1694(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1695(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1696(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1697(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1699(TC* ac, T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1700(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1701(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1702(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1703(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1704(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1705(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1706(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1707(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1708(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1709(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT] */
extern T0* GE_new1710(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1711(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1712(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1713(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new1714(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
extern T0* GE_new1715(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1716(TC* ac, T1 initialize);
/* New instance of type YY_UNICODE_BUFFER */
extern T0* GE_new1717(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1718(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1719(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1720(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST_LIST] */
extern T0* GE_new1721(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1722(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1723(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1724(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ITERATION_COMPONENT_LIST] */
extern T0* GE_new1725(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1726(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1727(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1728(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST] */
extern T0* GE_new1729(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1730(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1731(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1732(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1733(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1734(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1736(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1738(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1739(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1741(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [NATURAL_32] */
extern T0* GE_new1742(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_CONSTRAINT_LIST */
extern T0* GE_new1743(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1744(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1745(TC* ac, T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new1748(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1749(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
extern T0* GE_new1750(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new1751(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
extern T0* GE_new1753(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1754(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1755(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1756(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1757(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1759(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1760(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1761(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE_NAME] */
extern T0* GE_new1762(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1763(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1764(TC* ac, T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1766(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1767(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1768(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1769(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1770(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1772(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1774(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1775(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1776(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1777(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1778(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1779(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1780(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1783(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1785(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1786(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1789(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME] */
extern T0* GE_new1793(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1794(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1795(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1796(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1797(TC* ac, T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1798(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1799(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1801(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1802(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1804(TC* ac, T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1805(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [detachable STRING_8] */
extern T0* GE_new1806(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1807(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new1808(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new1809(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, STRING_8] */
extern T0* GE_new1810(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1812(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]] */
extern T0* GE_new1813(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1814(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new1815(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [STRING_8]] */
extern T0* GE_new1818(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_OPTIONS, STRING_8] */
extern T0* GE_new1819(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new1820(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new1821(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new1828(TC* ac, T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1832(TC* ac, T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1833(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1835(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1836(TC* ac, T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1839(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1843(TC* ac, T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1844(TC* ac, T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1845(TC* ac, T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1846(TC* ac, T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1848(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1852(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1854(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1855(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1856(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1859(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new1860(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1861(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1862(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1863(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1864(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1865(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1866(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new1867(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1868(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new1869(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1870(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1871(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1872(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new1873(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1877(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1880(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1881(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1882(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new1884(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
extern T0* GE_new1885(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1886(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1888(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1890(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1891(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new1893(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
extern T0* GE_new1894(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1896(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1897(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR] */
extern T0* GE_new1898(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR] */
extern T0* GE_new1899(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1900(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION] */
extern T0* GE_new1901(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new1902(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
extern T0* GE_new1903(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new1904(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
extern T0* GE_new1905(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1907(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1908(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_ITEM] */
extern T0* GE_new1910(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_ITEM] */
extern T0* GE_new1911(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1912(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM] */
extern T0* GE_new1913(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new1914(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
extern T0* GE_new1915(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1917(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM] */
extern T0* GE_new1918(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_EXPRESSION] */
extern T0* GE_new1919(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION] */
extern T0* GE_new1920(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART] */
extern T0* GE_new1921(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
extern T0* GE_new1922(TC* ac, T1 initialize);
/* New instance of type ET_BASE_TYPE_RENAME_CONSTRAINT */
extern T0* GE_new1924(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1927(TC* ac, T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1931(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1933(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1934(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1935(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1936(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1937(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1938(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1939(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1940(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1941(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new1942(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new1943(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new1944(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE] */
extern T0* GE_new1945(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_NAMESPACE] */
extern T0* GE_new1946(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE] */
extern T0* GE_new1947(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1948(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1949(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1950(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1951(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1952(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1953(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1954(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1955(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1956(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1957(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1958(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1959(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1960(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1961(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1962(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1963(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1964(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1965(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1966(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1967(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1968(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1969(TC* ac, T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1970(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1971(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1972(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1973(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1974(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1975(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1976(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1977(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1979(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1980(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1981(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1982(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT] */
extern T0* GE_new1983(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [NATURAL_32] */
extern T0* GE_new1984(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
extern T0* GE_new1985(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1986(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1988(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1989(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1991(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1992(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1993(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1994(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1995(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1996(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1997(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1998(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1999(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new2000(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new2003(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new2004(TC* ac, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new2005(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new2006(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new2007(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new2008(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new2009(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new2010(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new2012(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new2013(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new2014(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new2015(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new2016(TC* ac, T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new2017(TC* ac, T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new2018(TC* ac, T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new2019(TC* ac, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new2020(TC* ac, T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new2021(TC* ac, T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new2022(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new2025(TC* ac, T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new2026(TC* ac, T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new2030(TC* ac, T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new2031(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new2032(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new2033(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new2035(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new2036(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new2037(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new2040(TC* ac, T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new2041(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT] */
extern T0* GE_new2045(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT] */
extern T0* GE_new2047(TC* ac, T1 initialize);
/* New instance of type TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
extern T0* GE_new2055(TC* ac, T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new2057(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new2061(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2062(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]] */
extern T0* GE_new2065(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8] */
extern T0* GE_new2066(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new2067(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new2070(TC* ac, T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2071(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new2074(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new2075(TC* ac, T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new2082(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new2097(TC* ac, T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new2098(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new2099(TC* ac, T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new2100(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_SEPARATE_CALL, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2104(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE] */
extern T0* GE_new2105(TC* ac, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8] */
extern T0* GE_new2117(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new2123(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new2124(TC* ac, T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new2125(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [NATURAL_32] */
extern T0* GE_new2126(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2127(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new2128(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new2129(TC* ac, T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new2130(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2131(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new2132(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2134(TC* ac, T1 initialize);
/* New instance of type DS_CELL [detachable ET_CLASS] */
extern T0* GE_new2138(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new2139(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new2141(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2143(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new2144(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new2145(TC* ac, T1 initialize);
/* New instance of type PROCEDURE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2146(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new2147(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new2148(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_ECF_STATE] */
extern T0* GE_new2149(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [STRING_8]] */
extern T0* GE_new2151(TC* ac, T1 initialize);
/* New instance of type TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new2152(TC* ac, T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [STRING_8]] */
extern T0* GE_new2154(TC* ac, T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new2156(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2157(TC* ac, T1 initialize);
/* New instance of type DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new2161(TC* ac, T1 initialize);
/* New instance of type TUPLE [LX_WILDCARD] */
extern T0* GE_new2163(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [LX_WILDCARD]] */
extern T0* GE_new2164(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new2165(TC* ac, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2167(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new2168(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new2169(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new2172(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [NATURAL_32] */
extern T0* GE_new2173(TC* ac, T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new2174(TC* ac, T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new2175(TC* ac, T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new2176(TC* ac, T1 initialize);
/* New instance of type TUPLE [ET_GROUP] */
extern T0* GE_new2178(TC* ac, T1 initialize);
/* New instance of type TUPLE [PROCEDURE [TUPLE [ET_CLASS]], PREDICATE [TUPLE [ET_CLASS]]] */
extern T0* GE_new2179(TC* ac, T1 initialize);
/* New instance of type TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2180(TC* ac, T1 initialize);
/* New instance of type PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2181(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new2183(TC* ac, T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new2184(TC* ac, T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new2185(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2186(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new2187(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_32, STRING_8] */
extern T0* GE_new2188(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET [LX_SYMBOL_CLASS] */
extern T0* GE_new2189(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2190(TC* ac, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_32] */
extern T0* GE_new2191(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_STACK [BOOLEAN] */
extern T0* GE_new2192(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_32] */
extern T0* GE_new2193(TC* ac, T1 initialize);
/* New instance of type SPECIAL [STRING_32] */
extern T0* GE_new2194(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new2195(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new2196(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new2197(TC* ac, T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new2198(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new2199(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new2200(TC* ac, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2201(TC* ac, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new2202(TC* ac, T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new2203(TC* ac, T1 initialize);
/* New instance of type LX_INVALID_UNICODE_CHARACTER_ERROR */
extern T0* GE_new2204(TC* ac, T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new2205(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new2206(TC* ac, T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new2207(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new2208(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new2209(TC* ac, T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new2210(TC* ac, T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new2211(TC* ac, T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new2212(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new2213(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new2214(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new2215(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new2216(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new2217(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new2218(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_RULE] */
extern T0* GE_new2219(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_RULE] */
extern T0* GE_new2220(TC* ac, T6 a1, T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new2221(TC* ac, T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new2222(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new2223(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new2224(TC* ac, T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new2225(TC* ac, T1 initialize);
/* New instance of type ARRAY [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2226(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable LX_SYMBOL_CLASS] */
extern T0* GE_new2227(TC* ac, T6 a1, T1 initialize);
/* New instance of type ARRAY [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2228(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable DS_HASH_SET [INTEGER_32]] */
extern T0* GE_new2229(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2230(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_SYMBOL_CLASS] */
extern T0* GE_new2231(TC* ac, T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new2232(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new2233(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new2234(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new2235(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new2236(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new2237(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new2238(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2239(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [LX_SYMBOL_CLASS] */
extern T0* GE_new2240(TC* ac, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]] */
extern T0* GE_new2242(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS] */
extern T0* GE_new2243(TC* ac, T1 initialize);
/* New instance of type SPECIAL [detachable SPECIAL [NATURAL_64]] */
extern T0* GE_new2244(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_32, STRING_8] */
extern T0* GE_new2246(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32] */
extern T0* GE_new2248(TC* ac, T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2249(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2252(TC* ac, T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new2253(TC* ac, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new2255(TC* ac, T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2256(TC* ac, T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new2257(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new2258(TC* ac, T6 a1, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new2259(TC* ac, T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new2261(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new2263(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new2265(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new2266(TC* ac, T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new2268(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new2269(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new2270(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new2271(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2272(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new2273(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new2275(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new2279(TC* ac, T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new2282(TC* ac, T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2285(TC* ac, T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2286(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]] */
extern T0* GE_new2287(TC* ac, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS] */
extern T0* GE_new2288(TC* ac, T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new2289(TC* ac, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32] */
extern T0* GE_new2291(TC* ac, T1 initialize);
/* GEC.execute */
extern T0* T25c63(TC* ac);
/* GEC.execute_with_arguments */
extern void T25f64(TC* ac, T0* C, T0* a1);
/* GEC.execute_with_arguments_and_error_handler */
extern void T25f65(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.report_cannot_read_error */
extern void T25f69(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T59f192(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T59f194(TC* ac, T0* C, T0* a1);
/* MUTEX.unlock */
extern void T138f12(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T138f15(TC* ac, T0* C, T14 a1);
/* MUTEX.default_pointer */
extern T14 T138f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T59f196(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T59f194p1(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T166f4(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T166f7(TC* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T166f5(TC* ac, T0* C, T0* a1);
/* MUTEX.lock */
extern void T138f11(TC* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T138f4(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_lock */
extern void T138f14(TC* ac, T0* C, T14 a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T59f11(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T2020f12(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T2020f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T2020f6(TC* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T32c6(TC* ac);
/* KL_ARGUMENTS.argument */
extern T0* T32f3(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T20f10(TC* ac, T0* C);
/* STRING_8.put_code */
extern void T17f75(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_8.reset_hash_codes */
extern void T17f54(TC* ac, T0* C);
/* STRING_8.valid_code */
extern T1 T17f36(TC* ac, T0* C, T10 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f5(TC* ac, volatile T10* C, T10 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f19(TC* ac, volatile T6* C);
/* IMMUTABLE_STRING_32.code */
extern T10 T20f6(TC* ac, T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f60(TC* ac, T0* C, T6 a1);
/* STRING_8.make */
extern void T17f48(TC* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c48(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c11(TC* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f18(TC* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f17(TC* ac, volatile T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f15(TC* ac, volatile T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(TC* ac, T6 a1);
/* ARGUMENTS_32.argument */
extern T0* T135f2(TC* ac, T0* C, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T537f5(TC* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T135f3(TC* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T537f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T537f7(TC* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T537c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T537f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T538c6(TC* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T538f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T538f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T538f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T538c4(TC* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T20c14(TC* ac);
/* IMMUTABLE_STRING_32.make */
extern void T20f17(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make */
extern T0* T20c17(TC* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c8(TC* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f11(TC* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f15(TC* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c12(TC* ac, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T32f4(TC* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T135c5(TC* ac);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T85f5(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T748f19(TC* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T748f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T330f3(TC* ac, T0* C, T2 a1);
/* CHARACTER_8.is_less_equal */
extern T1 T2f8(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f14(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f9(TC* ac, volatile T2* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T748f14(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T748f48(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T748f73(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T748f94(TC* ac, T0* C);
/* UC_UTF8_STRING.utf8 */
extern T0* T748f42(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T330c55(TC* ac);
/* STRING_32.append_code */
extern void T18f25(TC* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f31(TC* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.reset_hash_codes */
extern void T18f30(TC* ac, T0* C);
/* STRING_32.set_count */
extern void T18f29(TC* ac, T0* C, T6 a1);
/* STRING_32.resize */
extern void T18f28(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f4(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f5(TC* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f5(TC* ac, T0* C);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T748f15(TC* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f10(TC* ac, volatile T10* C);
/* UC_UTF8_STRING.code_at_byte_index */
extern T10 T748f41(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_next_value */
extern T10 T330f5(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.natural_32_encoded_first_value */
extern T10 T330f4(TC* ac, T0* C, T2 a1);
/* STRING_32.make */
extern void T18f23(TC* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c23(TC* ac, T6 a1);
/* UC_STRING.to_string_32 */
extern T0* T329f58(TC* ac, T0* C);
/* UC_STRING.next_byte_index */
extern T6 T329f36(TC* ac, T0* C, T6 a1);
/* UC_STRING.byte_item */
extern T2 T329f31(TC* ac, T0* C, T6 a1);
/* UC_STRING.old_item */
extern T2 T329f52(TC* ac, T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T329f87(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T329f100(TC* ac, T0* C);
/* UC_STRING.utf8 */
extern T0* T329f41(TC* ac, T0* C);
/* UC_STRING.item_code_at_byte_index */
extern T6 T329f35(TC* ac, T0* C, T6 a1);
/* UC_STRING.code_at_byte_index */
extern T10 T329f33(TC* ac, T0* C, T6 a1);
/* STRING_8.to_string_32 */
extern T0* T17f30(TC* ac, T0* C);
/* STRING_8.code */
extern T10 T17f10(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append_string_general */
extern void T748f76(TC* ac, T0* C, T0* a1);
extern T1 T748f76ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string_general */
extern void T748f76p1(TC* ac, T0* C, T0* a1);
extern T1 T748f76p1ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.append */
extern void T748f76p0(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T748f98(TC* ac, T0* C);
/* UC_UTF8_STRING.old_set_count */
extern void T748f90(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append_code */
extern void T748f77(TC* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T748f99(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T748f110(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T748f111(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T748f102(TC* ac, T0* C, T2 a1, T6 a2);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T745f2(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T748f56(TC* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T745c5(TC* ac);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T748f100(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T330f9(TC* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.natural_32_code_byte_count */
extern T6 T330f20(TC* ac, T0* C, T10 a1);
/* STRING_32.code */
extern T10 T18f7(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.code */
extern T10 T748f46(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_index */
extern T6 T748f11(TC* ac, T0* C, T6 a1);
/* UC_STRING.code */
extern T10 T329f53(TC* ac, T0* C, T6 a1);
/* UC_STRING.byte_index */
extern T6 T329f32(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T748f97(TC* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T748f59(TC* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T748f59p1(TC* ac, T0* C);
/* STRING_32.count */
extern T6 T18f2(TC* ac, T0* C);
/* UC_UTF8_STRING.count */
extern T6 T748f1(TC* ac, T0* C);
/* UC_STRING.count */
extern T6 T329f1(TC* ac, T0* C);
/* STRING_8.count */
extern T6 T17f2(TC* ac, T0* C);
/* UC_UTF8_STRING.append */
extern void T748f96(TC* ac, T0* C, T0* a1);
extern T1 T748f96ot1(TC* ac, T0* a1);
extern T1 T748f96ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T748f63(TC* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T329c107(TC* ac);
/* UC_STRING.make */
extern void T329f81(TC* ac, T0* C, T6 a1);
/* UC_STRING.make */
extern T0* T329c81(TC* ac, T6 a1);
/* UC_STRING.old_set_count */
extern void T329f84(TC* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T329f92(TC* ac, T0* C);
/* UC_STRING.byte_capacity */
extern T6 T329f56(TC* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T329f56p1(TC* ac, T0* C);
/* UC_STRING.make */
extern void T329f81p1(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T748f78(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T748f101(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T748f101ot1(TC* ac, T0* a1);
extern T1 T748f101ot2(TC* ac, T0* a1);
extern T1 T748f101ot3(TC* ac, T0* a1);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T748f103(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T330f8(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.character_8_byte_count */
extern T6 T330f13(TC* ac, T0* C, T2 a1);
/* UC_STRING.item */
extern T2 T329f19(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_item_at_byte_index */
extern T2 T329f43(TC* ac, T0* C, T6 a1);
/* UC_STRING.integer_ */
extern T0* T329f55(TC* ac, T0* C);
/* KL_PLATFORM.maximum_character_code */
extern T6 T523f2(TC* ac, T0* C);
/* UC_STRING.platform */
extern T0* T329f39(TC* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T523c3(TC* ac);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T330f7(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T330f6(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T748f9(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T748f43(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.platform */
extern T0* T748f45(TC* ac, T0* C);
/* UC_UTF8_STRING.cloned_string */
extern T0* T748f32(TC* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T748f24(TC* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T748f89(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T748f89p1(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f17(TC* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* INTEGER_32.is_greater_equal */
extern T1 T6f14(TC* ac, volatile T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T748f96p1(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T748f47(TC* ac, T0* C);
/* UC_STRING.area_lower */
extern T6 T329f15(TC* ac, T0* C);
/* STRING_8.area_lower */
extern T6 T17f9(TC* ac, T0* C);
/* UC_UTF8_STRING.area */
extern T0* T748f2(TC* ac, T0* C);
/* UC_STRING.area */
extern T0* T329f2(TC* ac, T0* C);
/* STRING_8.area */
extern T0* T17f1(TC* ac, T0* C);
/* UC_UTF8_STRING.additional_space */
extern T6 T748f60(TC* ac, T0* C);
/* INTEGER_32.max */
extern T6 T6f16(TC* ac, volatile T6* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T330f2(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T330f2ot1(TC* ac, T0* a1);
extern T1 T330f2ot2(TC* ac, T0* a1);
extern T1 T330f2ot3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.character_32_byte_count */
extern T6 T330f15(TC* ac, T0* C, T3 a1);
/* UC_UTF8_STRING.character_32_item */
extern T3 T748f13(TC* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f12(TC* ac, T0* C, T6 a1);
/* UC_STRING.character_32_item */
extern T3 T329f26(TC* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f11(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T748f12(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.shifted_byte_index */
extern T6 T329f61(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T330f14(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T330f11(TC* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T534c2(TC* ac);
/* KL_ANY_ROUTINES.same_types */
extern T1 T534f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].same_type */
extern T1 T2215f18(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.same_type */
extern T1 T2214f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_type */
extern T1 T357f42(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.same_type */
extern T1 T748f22(TC* ac, T0* C, T0* a1);
/* STRING_32.same_type */
extern T1 T18f18(TC* ac, T0* C, T0* a1);
/* STRING_8.same_type */
extern T1 T17f28(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_type */
extern T1 T329f14(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_type */
extern T1 T131f27(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.same_type */
extern T1 T130f30(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.any_ */
extern T0* T748f40(TC* ac, T0* C);
/* UC_STRING.append_string_general */
extern void T329f73(TC* ac, T0* C, T0* a1);
extern T1 T329f73ot1(TC* ac, T0* a1);
/* UC_STRING.append_string_general */
extern void T329f73p1(TC* ac, T0* C, T0* a1);
extern T1 T329f73p1ot1(TC* ac, T0* a1);
/* UC_STRING.append */
extern void T329f73p0(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_code */
extern void T329f75(TC* ac, T0* C, T10 a1);
/* UC_STRING.append_item_code */
extern void T329f95(TC* ac, T0* C, T6 a1);
/* UC_STRING.put_code_at_byte_index */
extern void T329f105(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_STRING.put_byte */
extern void T329f106(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.old_put */
extern void T329f96(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.resize_byte_storage */
extern void T329f93(TC* ac, T0* C, T6 a1);
/* UC_STRING.resize */
extern void T329f91(TC* ac, T0* C, T6 a1);
/* UC_STRING.append */
extern void T329f90(TC* ac, T0* C, T0* a1);
extern T1 T329f90ot1(TC* ac, T0* a1);
extern T1 T329f90ot2(TC* ac, T0* a1);
/* UC_STRING.dummy_uc_string */
extern T0* T329f60(TC* ac, T0* C);
/* UC_STRING.gobo_append_substring */
extern void T329f74(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.put_substring_at_byte_index */
extern void T329f94(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T329f94ot1(TC* ac, T0* a1);
extern T1 T329f94ot2(TC* ac, T0* a1);
extern T1 T329f94ot3(TC* ac, T0* a1);
/* UC_STRING.put_character_at_byte_index */
extern void T329f97(TC* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_STRING.cloned_string */
extern T0* T329f42(TC* ac, T0* C);
/* UC_STRING.twin */
extern T0* T329f38(TC* ac, T0* C);
/* UC_STRING.copy */
extern void T329f83(TC* ac, T0* C, T0* a1);
/* UC_STRING.copy */
extern void T329f83p1(TC* ac, T0* C, T0* a1);
/* UC_STRING.append */
extern void T329f90p1(TC* ac, T0* C, T0* a1);
/* UC_STRING.additional_space */
extern T6 T329f57(TC* ac, T0* C);
/* UC_STRING.any_ */
extern T0* T329f45(TC* ac, T0* C);
/* STRING_8.append_string_general */
extern void T17f71(TC* ac, T0* C, T0* a1);
extern T1 T17f71ot1(TC* ac, T0* a1);
/* STRING_8.append */
extern void T17f71p1(TC* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f69(TC* ac, T0* C, T10 a1);
/* STRING_8.resize */
extern void T17f53(TC* ac, T0* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f7(TC* ac, T0* C);
/* STRING_8.append */
extern void T17f52(TC* ac, T0* C, T0* a1);
/* STRING_8.additional_space */
extern T6 T17f8(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_readable_string_general_no_uc_string */
extern T0* T85f6(TC* ac, T0* C, T0* a1);
extern T1 T85f6ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.as_string */
extern T0* T748f18(TC* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T748f49(TC* ac, T0* C);
/* UC_STRING.as_string */
extern T0* T329f54(TC* ac, T0* C);
/* UC_STRING.to_utf8 */
extern T0* T329f34(TC* ac, T0* C);
/* KL_STRING_ROUTINES.appended_string_8 */
extern T0* T85f14(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T85f14ot1(TC* ac, T0* a1);
extern T1 T85f14ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T748f75(TC* ac, T0* C, T0* a1);
/* UC_STRING.append_string */
extern void T329f79(TC* ac, T0* C, T0* a1);
/* STRING_8.append_string */
extern void T17f49(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat_string_8 */
extern T0* T85f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T85f16ot1(TC* ac, T0* a1);
extern T1 T85f16ot2(TC* ac, T0* a1);
/* UC_STRING.make_from_string_general */
extern T0* T329c72(TC* ac, T0* a1);
extern T1 T329f72ot1(TC* ac, T0* a1);
/* UC_STRING.make_from_substring_general */
extern void T329f89(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T329f89ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.plus */
extern T0* T748f8(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T748f83(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T748c83(TC* ac, T6 a1);
/* UC_UTF8_STRING.make */
extern void T748f83p1(TC* ac, T0* C, T6 a1);
/* STRING_8.plus */
extern T0* T17f5(TC* ac, T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f6(TC* ac, T0* C, T6 a1);
/* UC_STRING.plus */
extern T0* T329f16(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_string_8 */
extern T0* T748f31(TC* ac, T0* C);
/* UC_UTF8_STRING.put_code */
extern void T748f91(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T748f109(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T748f107(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T748f106(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.to_string_8 */
extern T0* T329f11(TC* ac, T0* C);
/* UC_STRING.put_code */
extern void T329f85(TC* ac, T0* C, T10 a1, T6 a2);
/* UC_STRING.put_item_code */
extern void T329f102(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_right */
extern void T329f104(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.move_bytes_left */
extern void T329f103(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.to_string_8 */
extern T0* T17f31(TC* ac, T0* C);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T748f17(TC* ac, T0* C, T0* a1);
/* UC_STRING.prefixed_string */
extern T0* T329f20(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.gobo_plus_general */
extern T0* T748f30(TC* ac, T0* C, T0* a1);
/* UC_STRING.gobo_plus_general */
extern T0* T329f10(TC* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].item */
extern T0* T33f5(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].valid_index */
extern T1 T33f4(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T748f39(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T467f13(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T467f17(TC* ac, T0* C, T0* a1, T6 a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f27(TC* ac, volatile T10* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f10(TC* ac, volatile T3* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T467f23(TC* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T467f15(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T992f7(TC* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f15(TC* ac, volatile T11* C, T11 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T467f14(TC* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T992c13(TC* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f18(TC* ac, volatile T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f32(TC* ac, volatile T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f19(TC* ac, volatile T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f15(TC* ac, volatile T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f18(TC* ac, volatile T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f6(TC* ac, volatile T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f9(TC* ac, volatile T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T740f13(TC* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern void T740f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T740c11(TC* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f42(TC* ac, T0* C, T2 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f30(TC* ac, volatile T6* C);
/* CHARACTER_8.is_digit */
extern T1 T2f26(TC* ac, volatile T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f5(TC* ac, volatile T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f12(TC* ac, volatile T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f15(TC* ac, volatile T2* C);
/* SPECIAL [NATURAL_8].extend */
extern void T539f7(TC* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T539f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T539c6(TC* ac, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T467f22(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T748f58(TC* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T467f21(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T467f20(TC* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T467f19(TC* ac, T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c80(TC* ac, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T467f18(TC* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T467c16(TC* ac);
/* UC_STRING.to_integer */
extern T6 T329f29(TC* ac, T0* C);
/* UC_STRING.ctoi_convertor */
extern T0* T329f51(TC* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f21(TC* ac, T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f25(TC* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T748f38(TC* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T748f57(TC* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T467f12(TC* ac, T0* C);
/* UC_STRING.is_integer */
extern T1 T329f28(TC* ac, T0* C);
/* UC_STRING.is_valid_integer_or_natural */
extern T1 T329f50(TC* ac, T0* C, T6 a1);
/* STRING_8.is_integer */
extern T1 T17f29(TC* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f37(TC* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T85f23(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T85f23ot1(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T85f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.append_substring_general */
extern void T748f81(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring_general */
extern void T329f77(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring_general */
extern void T17f70(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_ROUTINES.appended_substring_8 */
extern T0* T85f13(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T85f13ot1(TC* ac, T0* a1);
extern T1 T85f13ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_substring */
extern void T748f80(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_STRING.append_substring */
extern void T329f76(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.append_substring */
extern void T17f72(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T748f23(TC* ac, T0* C, T6 a1);
/* UC_STRING.new_empty_string */
extern T0* T329f30(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append_character */
extern void T748f79(TC* ac, T0* C, T2 a1);
/* UC_STRING.append_character */
extern void T329f78(TC* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f51(TC* ac, T0* C, T2 a1);
/* STRING_8.item */
extern T2 T17f18(TC* ac, T0* C, T6 a1);
/* INTEGER_32.is_greater */
extern T1 T6f4(TC* ac, volatile T6* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T85f3(TC* ac, T0* C, T0* a1, T6 a2);
extern T1 T85f3ot1(TC* ac, T0* a1);
/* UC_UTF8_STRING.old_wipe_out */
extern void T748f85(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T748f95(TC* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T748f85p1(TC* ac, T0* C);
/* UC_STRING.old_wipe_out */
extern void T329f82(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T329f98(TC* ac, T0* C);
/* UC_STRING.wipe_out */
extern void T329f82p1(TC* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f68(TC* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f13(TC* ac, T0* C);
/* STRING_8.copy */
extern void T17f62(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T2020f9(TC* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T85c22(TC* ac);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T2018f12(TC* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T2018f7(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T2018f6(TC* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T2018f9(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T2017f12(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T2017f7(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T2017f6(TC* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T2017f9(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T2019f11(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T2019f14(TC* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T2019f12(TC* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T2019f16(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1435f5(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1435f3(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1435f6(TC* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1435f4(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1434f5(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1434f3(TC* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1434f6(TC* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1434f4(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T852f41(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T852f16(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T852f13(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T852f40(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T851f5(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T851f7(TC* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T851f6(TC* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T851f9(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T850f5(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T850f7(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T850f6(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T850f9(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T390f5(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T390f3(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T390f6(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T390f4(TC* ac, T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.default_message */
extern T0* T389f5(TC* ac, T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.message */
extern T0* T389f3(TC* ac, T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.arguments */
extern T0* T389f6(TC* ac, T0* C);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.string_ */
extern T0* T389f4(TC* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T81f3(TC* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T81f5(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T81f7(TC* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T81f6(TC* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T90f17(TC* ac, T0* C);
/* AP_ERROR.message */
extern T0* T90f18(TC* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T90f20(TC* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T90f19(TC* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T83f3(TC* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T83f5(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T83f7(TC* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T83f6(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T79f3(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T79f5(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T79f7(TC* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T79f6(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_error */
extern void T41f192(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T41f194(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T41f196(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T41f194p1(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T38f7(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T38f8(TC* ac, T0* C);
/* ET_ERROR_HANDLER.message */
extern T0* T41f11(TC* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T79c8(TC* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T33f8(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T33c7(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T33f9(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T34c7(TC* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T34f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T34f10(TC* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T34f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T34c8(TC* ac, T6 a1);
/* GEC.process_system */
extern void T25f68(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T69f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T69f68(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STDOUT_FILE.put_line */
extern void T140f9(TC* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T140f8(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.out */
extern T0* T519f9(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T519f18(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T519f23(TC* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T745f6(TC* ac, T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T519f14(TC* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T519f22(TC* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_string */
extern void T140f6(TC* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T993f22(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T993f27(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_readable_string_8_no_uc_string */
extern T0* T85f7(TC* ac, T0* C, T0* a1);
extern T1 T85f7ot1(TC* ac, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T140f2(TC* ac, T0* C);
/* KL_STDOUT_FILE.console */
extern T0* T140f1(TC* ac, T0* C);
/* STD_FILES.output */
extern T0* T470f3(TC* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T993c23(TC* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T993f26(TC* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T993f13(TC* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T993f25(TC* ac, T0* C, T0* a1);
/* STRING_32.make_empty */
extern T0* T18c22(TC* ac);
/* CONSOLE.make_with_name */
extern void T993f25p1(TC* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c57(TC* ac);
/* CONSOLE.default_pointer */
extern T14 T993f10(TC* ac, T0* C);
/* CONSOLE.set_name */
extern void T993f29(TC* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T145f11(TC* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T30f11(TC* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T30f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T144f15(TC* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f19(TC* ac, volatile T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f20(TC* ac, volatile T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f22(TC* ac, volatile T10* C);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T30f10(TC* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T30c10(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T144c14(TC* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T144f12(TC* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T39f18(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T532f2(TC* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T532c2(TC* ac, T6 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T39f6(TC* ac, volatile T39* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T471f12(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T471f19(TC* ac, T0* C, T0* a1, T6 a2);
extern T1 T471f19ot1(TC* ac, T0* a1);
extern T1 T471f19ot2(TC* ac, T0* a1);
/* IMMUTABLE_STRING_32.count */
extern T6 T20f2(TC* ac, T0* C);
/* STRING_32.area_lower */
extern T6 T18f9(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T471f22(TC* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T471f16(TC* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T471f15(TC* ac, T0* C);
/* CHARACTER_8.to_hexa_digit */
extern T8 T2f28(TC* ac, volatile T2* C);
/* INTEGER_8.to_natural_8 */
extern T8 T4f5(TC* ac, volatile T4* C);
/* NATURAL_8.to_integer_8 */
extern T4 T8f17(TC* ac, volatile T8* C);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f27(TC* ac, volatile T2* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T471f18(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T39f7(TC* ac, volatile T39* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T471f21(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T471f20(TC* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T471c17(TC* ac);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T39f5(TC* ac, volatile T39* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T471f14(TC* ac, T0* C);
/* UC_UTF8_STRING.substring */
extern T0* T748f21(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T748c84(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T748f104(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f13(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(TC* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.new_string */
extern T0* T18f19(TC* ac, T0* C, T6 a1);
/* UC_STRING.substring */
extern T0* T329f12(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.make_from_substring */
extern T0* T329c86(TC* ac, T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f12(TC* ac, T0* C, T6 a1, T6 a2);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T39f12(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f37(TC* ac, volatile T6* C);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T145f10(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T145f9(TC* ac, T0* C);
/* C_STRING.item */
extern T14 T30f4(TC* ac, T0* C);
/* C_STRING.make */
extern T0* T30c9(TC* ac, T0* a1);
/* C_STRING.make_empty */
extern void T30f7(TC* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T30c7(TC* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T39f17(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T144f16(TC* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f23(TC* ac, volatile T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f14(TC* ac, volatile T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T39f13(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.make */
extern T0* T144c10(TC* ac, T6 a1);
/* EXCEPTIONS.raise */
extern void T36f4(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T126f18(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T21f19(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T126f10(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T21f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T21f17(TC* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T26f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T26c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T21f2(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T126f13(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T21f8(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T126f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T21f13(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T27f34(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T27f26(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T27f25(TC* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f25(TC* ac, volatile T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T21f3(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T27c35(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T133c9(TC* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T133f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T133f13(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T134c5(TC* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T134f8(TC* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T134f10(TC* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T134f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T134c7(TC* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T133f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T133c8(TC* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T132f1(TC* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T132f3(TC* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T132c5(TC* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T126f8(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.set_description */
extern void T126f15(TC* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T30f8(TC* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T39f16(TC* ac, volatile T39* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T126c12(TC* ac);
/* EXCEPTIONS.default_create */
extern T0* T36c3(TC* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T144f4(TC* ac, T0* C);
/* POINTER.memory_calloc */
extern T14 T14f5(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f8(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* MANAGED_POINTER.resize */
extern void T144f11(TC* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f15(TC* ac, volatile T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f18(TC* ac, volatile T14* C, T14 a1, T6 a2, T6 a3);
/* POINTER.memory_realloc */
extern T14 T14f6(TC* ac, volatile T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f9(TC* ac, volatile T14* C, T14 a1, T6 a2);
/* CONSOLE.buffered_file_info */
extern T0* T993f11(TC* ac, T0* C);
/* FILE_INFO.make */
extern T0* T145c22(TC* ac);
/* FILE_INFO.make_filled_area */
extern void T145f24(TC* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T539c5(TC* ac, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].fill_with */
extern void T539f8(TC* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* FILE_INFO.stat_size */
extern T6 T145f7(TC* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T140f4(TC* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T470f6(TC* ac, T0* C);
/* STD_FILES.default_create */
extern T0* T470c5(TC* ac);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T519f17(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T519f21(TC* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T519f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T519c16(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T519f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T519f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T71f43(TC* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T71f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T71f38(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T71f42(TC* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T71f41(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T71f40(TC* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T71f10(TC* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T71f9(TC* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T71f8(TC* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T71f62(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T71f66(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T71f69(TC* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T71f70(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T71f68(TC* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T71f57(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T71f46(TC* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T71f11(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T71f24(TC* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T71f23(TC* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T71f22(TC* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T745f4(TC* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T71f21(TC* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T71f67(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f21(TC* ac, volatile T7* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f20(TC* ac, volatile T6* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T519f15(TC* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T71f65(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T71f61(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T71f60(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T519f8(TC* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T71c59(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T71f64(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T71f63(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T71f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T71f16(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T71f7(TC* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T71f6(TC* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T71f5(TC* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T71f4(TC* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T71f3(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T504f10(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T504f12(TC* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T71f58(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T504f13(TC* ac, T0* C);
/* C_DATE.second_now */
extern T6 T1004f6(TC* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T1004f13(TC* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T1004f5(TC* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T1004f12(TC* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T1004f4(TC* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T1004f11(TC* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T1004f15(TC* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T1004f10(TC* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T1004f8(TC* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T1004f9(TC* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T1004f7(TC* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T1004f14(TC* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T1004f23(TC* ac, T0* C);
/* POINTER.memory_free */
extern void T14f14(TC* ac, volatile T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(TC* ac, volatile T14* C);
/* POINTER.c_free */
extern void T14f16(TC* ac, volatile T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T1004f21(TC* ac, T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T144c13(TC* ac, T14 a1, T6 a2);
/* C_DATE.tm_structure_size */
extern T6 T1004f20(TC* ac, T0* C);
/* C_DATE.localtime */
extern T14 T1004f19(TC* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T1004f18(TC* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T1004f25(TC* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T1004f24(TC* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T1004f17(TC* ac, T0* C);
/* POINTER.memory_alloc */
extern T14 T14f11(TC* ac, volatile T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f12(TC* ac, volatile T14* C, T6 a1);
/* C_DATE.timeb_structure_size */
extern T6 T1004f16(TC* ac, T0* C);
/* C_DATE.default_create */
extern T0* T1004c22(TC* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T71c56(TC* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T503f1(TC* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T504c11(TC* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T503c2(TC* ac);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T69f42(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.record_end_time */
extern void T265f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.print_time */
extern void T265f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.stop_requested */
extern T1 T265f44(TC* ac, T0* C);
/* GEC.compile_c_code */
extern void T25f79(TC* ac, T0* C, T0* a1, T0* a2);
/* GECC.execute_with_arguments */
extern T0* T95c11(TC* ac, T0* a1);
/* GECC.execute_with_arguments_and_error_handler */
extern void T95f12(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature GECC.execute_with_arguments_and_error_handler */
extern T0* T95f12ac1(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* PROCEDURE [TUPLE].set_rout_disp_final */
extern void T427f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* GECC.report_cannot_read_error */
extern void T95f16(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T139f9(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T139f11(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.message */
extern T0* T139f5(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2232f5(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T2232f3(TC* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2232f6(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2232f4(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T2211f5(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T2211f3(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T2211f6(TC* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T2211f4(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T2210f5(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T2210f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T2210f6(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T2210f4(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T2209f5(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T2209f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T2209f6(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T2209f4(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T2208f5(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T2208f3(TC* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T2208f6(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T2208f4(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T2207f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T2207f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T2207f6(TC* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T2207f4(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T2206f5(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T2206f3(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T2206f6(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T2206f4(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T2205f5(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T2205f3(TC* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T2205f6(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T2205f4(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.default_message */
extern T0* T2204f5(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.message */
extern T0* T2204f3(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.arguments */
extern T0* T2204f6(TC* ac, T0* C);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.string_ */
extern T0* T2204f4(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T2203f5(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T2203f3(TC* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T2203f6(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T2203f4(TC* ac, T0* C);
/* GECC.process_lines */
extern void T95f14(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [STRING_8].remove_first */
extern void T151f27(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T151f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].keep_head */
extern void T34f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T34f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T151f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T151f36(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T548f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T151f35(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T151f38(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T548f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T548f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T151f8(TC* ac, T0* C);
/* GECC.process */
extern void T95f15(TC* ac, T0* C, T0* a1, T6 a2);
/* WORKER_THREAD.launch */
extern void T464f10(TC* ac, T0* C);
/* WORKER_THREAD.launch_with_attributes */
extern void T464f12(TC* ac, T0* C, T0* a1);
/* WORKER_THREAD.last_created_thread */
extern T14 T464f6(TC* ac, T0* C);
/* WORKER_THREAD.thr_set_terminated */
extern void T464f14(TC* ac, T0* C, T1 a1);
/* WORKER_THREAD.thr_set_terminated */
extern void T464a14(T0* C, T1 a1);
/* WORKER_THREAD.thr_main */
extern void T464f13(TC* ac, T0* C, T6 a1);
/* WORKER_THREAD.thr_main */
extern void T464a13(T0* C, T6 a1);
/* WORKER_THREAD.execute_procedure */
extern void T464f16(TC* ac, T0* C);
/* WORKER_THREAD.default_pointer */
extern T14 T464f8(TC* ac, T0* C);
/* WORKER_THREAD.create_thread_with_attr */
extern void T464f15(TC* ac, T0* C, T0* a1, T14 a2, T14 a3, T14 a4);
/* THREAD_ATTRIBUTES.item */
extern T14 T846f4(TC* ac, T0* C);
/* WORKER_THREAD.is_launchable */
extern T1 T464f5(TC* ac, T0* C);
/* MUTEX.is_set */
extern T1 T138f5(TC* ac, T0* C);
/* CELL [BOOLEAN].put */
extern void T847f2(TC* ac, T0* C, T1 a1);
/* CELL [BOOLEAN].put */
extern T0* T847c2(TC* ac, T1 a1);
/* WORKER_THREAD.is_last_launch_successful_cell */
extern T0* T464f7(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.make */
extern T0* T846c7(TC* ac);
/* THREAD_ATTRIBUTES.set_priority */
extern void T846f9(TC* ac, T0* C, T6 a1);
/* THREAD_ATTRIBUTES.c_set_priority */
extern void T846f10(TC* ac, T0* C, T14 a1, T6 a2);
/* THREAD_ATTRIBUTES.default_priority */
extern T6 T846f5(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.mem_make */
extern void T846f8(TC* ac, T0* C);
/* THREAD_ATTRIBUTES.structure_size */
extern T6 T846f6(TC* ac, T0* C);
/* WORKER_THREAD.make */
extern T0* T464c9(TC* ac, T0* a1);
/* WORKER_THREAD.thread_make */
extern void T464f11(TC* ac, T0* C);
/* GECC.thread_count */
extern T6 T95f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.parameter */
extern T6 T55f14(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T165f7(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T165f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T55f13(TC* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T55f16(TC* ac, T0* C);
/* MUTEX.make */
extern T0* T138c10(TC* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T138f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T151f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T151f25(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T267f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T151f31(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T267f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T34f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T151f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T151f16(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T748f27(TC* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f24(TC* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T748f51(TC* ac, T0* C);
/* UC_STRING.ends_with */
extern T1 T329f21(TC* ac, T0* C, T0* a1);
/* UC_STRING.area_upper */
extern T6 T329f44(TC* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f19(TC* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f17(TC* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f15(TC* ac, T0* C);
/* STRING_8.adjust */
extern void T17f61(TC* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f66(TC* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f6(TC* ac, volatile T2* C);
/* STRING_8.left_adjust */
extern void T17f65(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T42f64(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T42f69(TC* ac, T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T142f4(TC* ac, T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T142c3(TC* ac, T2 a1);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T42f68(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T42f72(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T42f30(TC* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T42f26(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T42f32(TC* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.wipe_out */
extern void T85f24(TC* ac, T0* C, T0* a1);
/* STRING_8.keep_head */
extern void T17f64(TC* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T42f28(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T151f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T151c21(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T151f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T151f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T548c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T267f1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T267c3(TC* ac);
/* GECC.parse_arguments */
extern void T95f13(TC* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_info_message */
extern void T139f8(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T148f12(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T48f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T150f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T150f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T545f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T150f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T545f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T150f23(TC* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T48f21(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T146f5(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T146f12(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.put */
extern void T748f88(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.put */
extern void T329f109(TC* ac, T0* C, T2 a1, T6 a2);
/* STRING_8.put */
extern void T17f74(TC* ac, T0* C, T2 a1, T6 a2);
/* ST_WORD_WRAPPER.is_space */
extern T1 T146f8(TC* ac, T0* C, T2 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T85f8(TC* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T146f4(TC* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T146f10(TC* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T48f12(TC* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T146f11(TC* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T146c9(TC* ac);
/* STRING_8.make_filled */
extern T0* T17c58(TC* ac, T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f63(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.keep_head */
extern void T748f87(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_head */
extern void T329f99(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T131f2(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T131f15(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T131f14(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T130f2(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T130f18(TC* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.secondary_directory_separator */
extern T2 T130f27(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T130f17(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T130f16(TC* ac, T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T48f27(TC* ac, T0* C);
/* AP_PARSER.file_system */
extern T0* T48f26(TC* ac, T0* C);
/* AP_PARSER.unix_file_system */
extern T0* T48f15(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T131c30(TC* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T96f2(TC* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T96f4(TC* ac, T0* C);
/* PATH.utf_8_name */
extern T0* T466f6(TC* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_string_to_utf_8_string_8 */
extern T0* T39f3(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T39f15(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f56(TC* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.substring */
extern T0* T20f5(TC* ac, T0* C, T6 a1, T6 a2);
/* IMMUTABLE_STRING_32.empty_string */
extern T0* T20f7(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T20f16(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern T0* T20c16(TC* ac, T0* a1, T6 a2, T6 a3);
/* IMMUTABLE_STRING_32.item */
extern T3 T20f8(TC* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f55(TC* ac, T0* C, T6 a1);
/* PATH.name */
extern T0* T466f4(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T39f8(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T39f20(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escape_code_into */
extern void T39f24(TC* ac, volatile T39* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f12(TC* ac, volatile T9* C);
/* NATURAL_16.to_hex_character */
extern T2 T9f15(TC* ac, volatile T9* C);
/* CHARACTER_8.plus */
extern T2 T2f32(TC* ac, volatile T2* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f31(TC* ac, volatile T2* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f5(TC* ac, volatile T9* C);
/* STRING_32.append_string_general */
extern void T18f24(TC* ac, T0* C, T0* a1);
extern T1 T18f24ot1(TC* ac, T0* a1);
/* STRING_32.append */
extern void T18f24p1(TC* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f27(TC* ac, T0* C, T0* a1);
/* STRING_32.additional_space */
extern T6 T18f6(TC* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f14(TC* ac, volatile T8* C);
/* NATURAL_8.to_hex_character */
extern T2 T8f21(TC* ac, volatile T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f25(TC* ac, volatile T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f10(TC* ac, volatile T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f32(TC* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f12(TC* ac, volatile T8* C);
/* STRING_32.extend */
extern void T18f36(TC* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f9(TC* ac, volatile T8* C, T8 a1);
/* STRING_32.grow */
extern void T18f35(TC* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T20c15(TC* ac, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T39f11(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T39f23(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* NATURAL_32.is_greater_equal */
extern T1 T10f12(TC* ac, volatile T10* C, T10 a1);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T129f3(TC* ac, T0* C);
/* PATH.make_from_pointer */
extern T0* T466c17(TC* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T466f20(TC* ac, T0* C);
/* PATH.normalize */
extern void T466f19(TC* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f59(TC* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T466f13(TC* ac, T0* C);
/* STRING_8.remove_head */
extern void T17f73(TC* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f77(TC* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T466f12(TC* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T466f15(TC* ac, T0* C, T6 a1);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f7(TC* ac, volatile T2* C, T2 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f25(TC* ac, volatile T2* C);
/* CHARACTER_8.lower_value */
extern T0* T2f29(TC* ac, volatile T2* C);
/* PATH.is_character */
extern T1 T466f8(TC* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* C_STRING.substring_8 */
extern T0* T30f3(TC* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T30f12(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f8(TC* ac, volatile T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T144f5(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T960f4(TC* ac, volatile T960* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T960f6(TC* ac, volatile T960* C, T14 a1, T14 a2, T6 a3);
/* PATH.unit_size */
extern T6 T466f5(TC* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T466f7(TC* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f9(TC* ac, volatile T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f8(TC* ac, volatile T11* C, T11 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T466f14(TC* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T466c16(TC* ac, T0* a1);
/* PATH.internal_append_into */
extern void T466f18(TC* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T39f19(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T129f5(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T96f5(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T129c9(TC* ac);
/* STRING_8.is_equal */
extern T1 T17f33(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T96f3(TC* ac, T0* C, T0* a1);
/* STRING_32.to_string_8 */
extern T0* T18f15(TC* ac, T0* C);
/* STRING_32.is_valid_as_string_8 */
extern T1 T18f14(TC* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T129f2(TC* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T462f6(TC* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T39f10(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T39f22(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T39f26(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T39f9(TC* ac, volatile T39* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T39f21(TC* ac, volatile T39* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T39f25(TC* ac, volatile T39* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_16.to_natural_32 */
extern T10 T9f13(TC* ac, volatile T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T144f6(TC* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T961f4(TC* ac, volatile T961* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T961f6(TC* ac, volatile T961* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T462c10(TC* ac, T14 a1);
/* NATIVE_STRING.unit_size */
extern T6 T462f5(TC* ac, T0* C);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T462f4(TC* ac, T0* C, T14 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T462f8(TC* ac, T0* C, T14 a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T129f4(TC* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T462f3(TC* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T462c9(TC* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T462f12(TC* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T462f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.upper_cell */
extern T0* T462f7(TC* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T462f11(TC* ac, T0* C, T6 a1);
/* AP_PARSER.windows_file_system */
extern T0* T48f14(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T130c33(TC* ac);
/* AP_PARSER.operating_system */
extern T0* T48f13(TC* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T96c6(TC* ac);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T49f20(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T49f22(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T49f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T154f9(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T49f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T154f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T49f9(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T49f11(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T49f8(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T49f10(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T49f19(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T49f21(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T49f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T154f6(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T148f14(TC* ac, T0* C);
/* CHARACTER_8.out */
extern T0* T2f4(TC* ac, volatile T2* C);
/* AP_FLAG.example */
extern T0* T45f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T150f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T150f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T150f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T150f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T545f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T150f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T150f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T545f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T150f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T545f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T545f6(TC* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T48f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T149f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T149f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T541f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T149f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T541f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T149f26(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.example */
extern T0* T55f15(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T54f17(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T53f13(TC* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T50f18(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_hidden */
extern T1 T148f6(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_hidden */
extern T1 T55f8(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_hidden */
extern T1 T54f7(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_hidden */
extern T1 T53f8(TC* ac, T0* C);
/* AP_FLAG.is_hidden */
extern T1 T45f6(TC* ac, T0* C);
/* AP_STRING_OPTION.is_hidden */
extern T1 T50f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T149f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T149f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T149f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T149f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T541f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T149f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T149f23(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T541f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T149f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T541f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T541f6(TC* ac, T0* C);
/* GECC.report_version_number */
extern void T95f17(TC* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T139f10(TC* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T81c8(TC* ac, T0* a1);
/* AP_PARSER.parse_array */
extern void T48f44(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_list */
extern void T48f45(TC* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T48f49(TC* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T48f31(TC* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T35c1(TC* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T152f10(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T152f10p1(TC* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T48f48(TC* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T90c23(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T148f10(TC* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T55f17(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T54f13(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T53f15(TC* ac, T0* C);
/* AP_FLAG.name */
extern T0* T45f10(TC* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T50f14(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.occurrences */
extern T6 T148f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T54f14(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T53f16(TC* ac, T0* C);
/* AP_FLAG.occurrences */
extern T6 T45f1(TC* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T50f17(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.maximum_occurrences */
extern T6 T148f8(TC* ac, T0* C);
/* AP_INTEGER_OPTION.maximum_occurrences */
extern T6 T55f10(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.maximum_occurrences */
extern T6 T54f9(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.maximum_occurrences */
extern T6 T53f10(TC* ac, T0* C);
/* AP_FLAG.maximum_occurrences */
extern T6 T45f8(TC* ac, T0* C);
/* AP_STRING_OPTION.maximum_occurrences */
extern T6 T50f10(TC* ac, T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T152f9(TC* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T152f6(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T90c22(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T148f13(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T54f16(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T53f18(TC* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T50f13(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.is_mandatory */
extern T1 T148f7(TC* ac, T0* C);
/* AP_INTEGER_OPTION.is_mandatory */
extern T1 T55f9(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.is_mandatory */
extern T1 T54f8(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.is_mandatory */
extern T1 T53f9(TC* ac, T0* C);
/* AP_FLAG.is_mandatory */
extern T1 T45f7(TC* ac, T0* C);
/* AP_STRING_OPTION.is_mandatory */
extern T1 T50f9(TC* ac, T0* C);
/* AP_PARSER.parse_argument */
extern void T48f47(TC* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T48f51(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T148f26(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T148f27(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T148f18(TC* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T152f11(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T148f17(TC* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T48f35(TC* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T48f40(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.description */
extern T0* T148f1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.description */
extern T0* T55f3(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.description */
extern T0* T54f3(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.description */
extern T0* T53f3(TC* ac, T0* C);
/* AP_FLAG.description */
extern T0* T45f2(TC* ac, T0* C);
/* AP_STRING_OPTION.description */
extern T0* T50f3(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T148f19(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T55f21(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T55f22(TC* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T55f21p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T54f24(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T54f25(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T54f24p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T53f23(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T53f24(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T53f23p1(TC* ac, T0* C);
/* AP_FLAG.names */
extern T0* T45f16(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T50f22(TC* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T50f23(TC* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T50f22p1(TC* ac, T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T2022f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T2022f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T2022f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T376f14(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T133f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T133f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].force */
extern void T133f11(TC* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T133f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].capacity */
extern T6 T376f7(TC* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T376f16(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T133f5(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T376f15(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T376f6(TC* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T376f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T149f28(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T149f27(TC* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T2021f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T85f20(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T85f20ot1(TC* ac, T0* a1);
extern T1 T85f20ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.three_way_unicode_comparison */
extern T6 T748f69(TC* ac, T0* C, T0* a1);
extern T1 T748f69ot1(TC* ac, T0* a1);
/* UC_STRING.three_way_unicode_comparison */
extern T6 T329f69(TC* ac, T0* C, T0* a1);
extern T1 T329f69ot1(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T2021f2(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.long_form */
extern T0* T148f4(TC* ac, T0* C);
/* AP_INTEGER_OPTION.long_form */
extern T0* T55f6(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.long_form */
extern T0* T54f6(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.long_form */
extern T0* T53f7(TC* ac, T0* C);
/* AP_FLAG.long_form */
extern T0* T45f3(TC* ac, T0* C);
/* AP_STRING_OPTION.long_form */
extern T0* T50f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T149f16(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].item */
extern T6 T376f4(TC* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T376f12(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T376c10(TC* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T376f13(TC* ac, T0* C, T6 a1, T6 a2);
/* AP_PARSER.all_options */
extern T0* T48f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T149f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T149c17(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T149f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T149f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T541c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T544f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T543c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T544c3(TC* ac);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T2022c2(TC* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T2021c3(TC* ac);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T55f29(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T90c21(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T165f10(TC* ac, T0* C, T6 a1);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T555f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T555c3(TC* ac, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T54f32(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T54f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T151f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T151f42(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T54f23(TC* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T180c3(TC* ac);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T151f18(TC* ac, T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T180f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T85f9(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T85f9ot1(TC* ac, T0* a1);
extern T1 T85f9ot2(TC* ac, T0* a1);
/* CHARACTER_32.lower */
extern T3 T3f6(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T849f1(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_16 */
extern T0* T849f19(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T849f18(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T849f17(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T849f16(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T849f15(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T849f14(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T849f13(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T849f12(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T849f11(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T849f10(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T849f9(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T849f8(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T849f7(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T849f6(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T849f5(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T849f4(TC* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f13(TC* ac, volatile T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f12(TC* ac, volatile T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f15(TC* ac, volatile T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f9(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.make */
extern T0* T849c37(TC* ac);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T326f2(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T326f7(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T326f10(TC* ac, T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T743c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T743f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T743f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T743f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T326f17(TC* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T745f1(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T326f28(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T326f9(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T326f27(TC* ac, T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T744c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T744f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T744f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T744f6(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T326f8(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T326f26(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T326f25(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T326f24(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T326f23(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T326f22(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T326f21(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T326f20(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T326f19(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T326f18(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T326f16(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T326f15(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T326f14(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T326f13(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T326f12(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T326f11(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_natural_32_code */
extern T1 T326f1(TC* ac, T0* C, T10 a1);
/* KL_STRING_ROUTINES.unicode */
extern T0* T85f15(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T326c57(TC* ac);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T180f2(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T54f21(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T162f10(TC* ac, T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T553f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T553c3(TC* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T53f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T157f14(TC* ac, T0* C, T0* a1);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T158f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [detachable STRING_8].force_last */
extern void T155f19(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].force */
extern void T550f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable STRING_8].fill_with */
extern void T549f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].extend */
extern void T549f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].resize */
extern void T155f20(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].aliased_resized_area */
extern T0* T550f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].aliased_resized_area */
extern T0* T549f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].new_capacity */
extern T6 T155f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].extendible */
extern T1 T155f11(TC* ac, T0* C, T6 a1);
/* AP_FLAG.record_occurrence */
extern void T45f24(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.record_occurrence */
extern void T50f31(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T90c25(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T151f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T151f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T548f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T548f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T548f5(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T148f9(TC* ac, T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T55f5(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T54f5(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.needs_parameter */
extern T1 T53f6(TC* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T45f12(TC* ac, T0* C);
/* AP_STRING_OPTION.needs_parameter */
extern T1 T50f6(TC* ac, T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T90c24(TC* ac, T0* a1);
/* AP_DISPLAY_HELP_FLAG.short_form */
extern T2 T148f2(TC* ac, T0* C);
/* AP_INTEGER_OPTION.short_form */
extern T2 T55f7(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.short_form */
extern T2 T54f11(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.short_form */
extern T2 T53f12(TC* ac, T0* C);
/* AP_FLAG.short_form */
extern T2 T45f4(TC* ac, T0* C);
/* AP_STRING_OPTION.short_form */
extern T2 T50f12(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.has_short_form */
extern T1 T148f3(TC* ac, T0* C);
/* AP_INTEGER_OPTION.has_short_form */
extern T1 T55f11(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_short_form */
extern T1 T54f10(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_short_form */
extern T1 T53f11(TC* ac, T0* C);
/* AP_FLAG.has_short_form */
extern T1 T45f5(TC* ac, T0* C);
/* AP_STRING_OPTION.has_short_form */
extern T1 T50f11(TC* ac, T0* C);
/* AP_PARSER.parse_long */
extern void T48f50(TC* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T90c26(TC* ac, T0* a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T148f11(TC* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T55f18(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T54f15(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T53f17(TC* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T45f13(TC* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T50f16(TC* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T85f1(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T85f1ot1(TC* ac, T0* a1);
extern T1 T85f1ot2(TC* ac, T0* a1);
/* UC_UTF8_STRING.same_string_general */
extern T1 T748f35(TC* ac, T0* C, T0* a1);
extern T1 T748f35ot1(TC* ac, T0* a1);
/* UC_STRING.same_string_general */
extern T1 T329f25(TC* ac, T0* C, T0* a1);
extern T1 T329f25ot1(TC* ac, T0* a1);
/* STRING_8.same_string_general */
extern T1 T17f14(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters_general */
extern T1 T17f22(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T748f34(TC* ac, T0* C, T0* a1);
extern T1 T748f34ot1(TC* ac, T0* a1);
/* UC_STRING.same_unicode_string */
extern T1 T329f24(TC* ac, T0* C, T0* a1);
extern T1 T329f24ot1(TC* ac, T0* a1);
/* AP_PARSER.string_ */
extern T0* T48f33(TC* ac, T0* C);
/* UC_UTF8_STRING.index_of */
extern T6 T748f29(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T748f52(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_STRING.index_of */
extern T6 T329f23(TC* ac, T0* C, T2 a1, T6 a2);
/* UC_STRING.index_of_item_code */
extern T6 T329f46(TC* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f34(TC* ac, T0* C, T2 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T151f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T151f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T151f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T151f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T151f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T151f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T151f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T151f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T151f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T151f29(TC* ac, T0* C, T0* a1);
/* AP_PARSER.reset_parser */
extern void T48f46(TC* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T148f25(TC* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T55f28(TC* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T165c8(TC* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T165f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T165f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T556c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T54f31(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T162c8(TC* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T162f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T162f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T554c3(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T53f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].make */
extern T0* T155c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].set_internal_cursor */
extern void T155f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].new_cursor */
extern T0* T155f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].make */
extern T0* T156c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].make */
extern T0* T550f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern void T549f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable STRING_8].make_empty */
extern T0* T549c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable STRING_8].default_create */
extern T0* T550c3(TC* ac);
/* AP_FLAG.reset */
extern void T45f22(TC* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T50f30(TC* ac, T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T152f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_array */
extern T0* T151c22(TC* ac, T0* a1);
/* ARRAY [STRING_8].count */
extern T6 T33f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T150f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T547f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T546f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T546f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T150f19(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T547f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T546f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T150f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T150f10(TC* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T49c13(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T49f17(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T49f18(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T49f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T154c7(TC* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T49f16(TC* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T49f15(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_description */
extern void T45f18(TC* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T45c19(TC* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T45f21(TC* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T45f23(TC* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T45f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T149f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T544f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T543f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T543f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T149f22(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T544f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T543f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T149f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T149f13(TC* ac, T0* C, T6 a1);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T55f25(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T55f24(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T55c23(TC* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T55f27(TC* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T55f26(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T55f26p1(TC* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T55f26p0(TC* ac, T0* C);
/* AP_PARSER.set_parameters_description */
extern void T48f43(TC* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T48f42(TC* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T48c41(TC* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T148f21(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T148c20(TC* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T148f24(TC* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T148f23(TC* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T148f22(TC* ac, T0* C);
/* AP_PARSER.make */
extern void T48f41p1(TC* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T152c7(TC* ac);
/* KL_STANDARD_FILES.output */
extern T0* T37f2(TC* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T140c5(TC* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T152f5(TC* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T37c4(TC* ac);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T150c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T150f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T150f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T545c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T547f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T546c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T547c3(TC* ac);
/* GECC.ise_variables */
extern T0* T95f7(TC* ac, T0* C);
/* UT_ISE_VARIABLES.default_create */
extern T0* T44c17(TC* ac);
/* GECC.gobo_variables */
extern T0* T95f6(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.default_create */
extern T0* T43c14(TC* ac);
/* GECC.arguments */
extern T0* T95f9(TC* ac, T0* C);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T139c7(TC* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T139f4(TC* ac, T0* C);
/* INTEGER_32.out */
extern T0* T6f7(TC* ac, volatile T6* C);
/* STRING_8.append_integer */
extern void T17f50(TC* ac, T0* C, T6 a1);
/* GEC.c_compile_using_gecc */
extern T1 T25f60(TC* ac, T0* C);
/* GEC.string_ */
extern T0* T25f50(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T53f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].last */
extern T0* T155f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].is_empty */
extern T1 T155f8(TC* ac, T0* C);
/* GEC.c_compile_using_make */
extern T1 T25f59(TC* ac, T0* C);
/* KL_SHELL_COMMAND.execute */
extern void T94f11(TC* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T94f5(TC* ac, T0* C);
/* KL_SHELL_COMMAND.system */
extern void T94f12(TC* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T94f7(TC* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T94f6(TC* ac, T0* C);
/* KL_SHELL_COMMAND.item */
extern T0* T94f8(TC* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T94f9(TC* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T748f25(TC* ac, T0* C);
/* UC_STRING.old_is_empty */
extern T1 T329f17(TC* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T94c10(TC* ac, T0* a1);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T131f1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T131f6(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T131f17(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T131f13(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T131f24(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T131f12(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T130f1(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T85f18(TC* ac, T0* C, T0* a1, T0* a2);
/* STRING_32.plus */
extern T0* T18f17(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_string_32 */
extern T0* T748f20(TC* ac, T0* C);
/* STRING_32.as_string_32 */
extern T0* T18f16(TC* ac, T0* C);
/* UC_STRING.as_string_32 */
extern T0* T329f62(TC* ac, T0* C);
/* STRING_8.as_string_32 */
extern T0* T17f38(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T130f15(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T130f14(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T130f6(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T130f13(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T130f26(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T130f9(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T130f12(TC* ac, T0* C, T0* a1);
/* GEC.file_system */
extern T0* T25f58(TC* ac, T0* C);
/* GEC.unix_file_system */
extern T0* T25f62(TC* ac, T0* C);
/* GEC.windows_file_system */
extern T0* T25f61(TC* ac, T0* C);
/* GEC.c_compile_using_script */
extern T1 T25f57(TC* ac, T0* C);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T96f1(TC* ac, T0* C);
/* GEC.operating_system */
extern T0* T25f56(TC* ac, T0* C);
/* ET_CLASS.lower_name */
extern T0* T78f170(TC* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T189f10(TC* ac, T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T748f61(TC* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T748f92(TC* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T748f62(TC* ac, T0* C);
/* UC_STRING.as_lower */
extern T0* T329f18(TC* ac, T0* C);
/* UC_STRING.to_lower */
extern void T329f88(TC* ac, T0* C);
/* UC_STRING.unicode */
extern T0* T329f59(TC* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f32(TC* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f76(TC* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f78(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.lower */
extern T2 T2f23(TC* ac, volatile T2* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T76f11(TC* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T78f87(TC* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T491f42(TC* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T25f48(TC* ac, T0* C);
/* GEC.compile_degree_minus_3 */
extern void T25f78(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.dynamic_feature_count */
extern T6 T68f74(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.procedures */
extern T0* T502f18(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedures */
extern T0* T501f18(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedures */
extern T0* T310f14(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedures */
extern T0* T396f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T229f13(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.queries */
extern T0* T502f6(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.queries */
extern T0* T501f6(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.queries */
extern T0* T310f6(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.queries */
extern T0* T396f6(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T229f3(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T93f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.alive_dynamic_type_count */
extern T6 T68f73(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_alive */
extern T1 T502f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_alive */
extern T1 T501f4(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_alive */
extern T1 T310f4(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_alive */
extern T1 T396f4(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T229f1(TC* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T140f7(TC* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T140f11(TC* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T140f10(TC* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T993f24(TC* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T993f28(TC* ac, T0* C, T14 a1, T2 a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T166f6(TC* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T166f10(TC* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T166f8(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.generate */
extern void T91f634(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T220f53(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T220f70(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T220f69(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T220f68(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T220f67(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T220f59(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T220f66(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T388f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T388f17(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T91f640(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.generate_compilation_makefile */
extern void T91f682(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T91f643(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T91f170(TC* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T390c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T91f641(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T385f35(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T385f40(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T385f18(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T385f48(TC* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T385f31(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T385f32(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T385f33(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T385f43(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T385f50(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T385f12(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.expanded_string */
extern T0* T387f43(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_STRING_HASH_TABLE.value */
extern T0* T387f41(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.item_storage_item */
extern T0* T387f46(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.position_of_key */
extern T6 T387f21(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.clashes_item */
extern T6 T387f28(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T159f1(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T159f1e1(TC* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T748f44(TC* ac, T0* C, T0* a1);
/* UC_STRING.is_equal */
extern T1 T329f22(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.key_storage_item */
extern T0* T387f27(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.hash_position */
extern T6 T387f26(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T748f10(TC* ac, T0* C);
/* UC_UTF8_STRING.string */
extern T0* T748f37(TC* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T748f10p1(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T329f9(TC* ac, T0* C);
/* UC_STRING.string */
extern T0* T329f40(TC* ac, T0* C);
/* UC_STRING.hash_code */
extern T6 T329f9p1(TC* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f27(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.slots_item */
extern T6 T387f24(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.string_ */
extern T0* T387f25(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T385f21(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T385f19(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T385f30(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T385f17(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T385f20(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T385f42(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T385f42p1(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T385f23(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T385f22(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T385f14(TC* ac, T0* C);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T748f26(TC* ac, T0* C);
/* UC_UTF8_STRING.valid_code */
extern T1 T748f50(TC* ac, T0* C, T10 a1);
/* UC_STRING.as_string_8 */
extern T0* T329f8(TC* ac, T0* C);
/* UC_STRING.valid_code */
extern T1 T329f37(TC* ac, T0* C, T10 a1);
/* STRING_8.as_string_8 */
extern T0* T17f26(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T385c29(TC* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T385f41(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T385f41p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T385f49(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T385f26(TC* ac, T0* C);
/* KL_STRING_ROUTINES.as_string_no_uc_string */
extern T0* T85f2(TC* ac, T0* C, T0* a1);
extern T1 T85f2ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.operating_system */
extern T0* T91f169(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_shell_script */
extern void T91f681(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T385f39(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T385f47(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T385f52(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T385f16(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T385f27(TC* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T131f4(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T42f33(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T42f35(TC* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T145f13(TC* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T145f14(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T42f29(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T42f73(TC* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T145f23(TC* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T145f12(TC* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T42f24(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T42f15(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T42f31(TC* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T42f23(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T42f13(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T42f74(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T131f18(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T130f4(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T130f20(TC* ac, T0* C);
/* UC_UTF8_STRING.remove_tail */
extern void T748f74(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_tail */
extern void T329f80(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T131f11(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T130f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T91f157(TC* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T91f566(TC* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T91f565(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T388f5(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_item */
extern T0* T387f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T220f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T220f33(TC* ac, T0* C, T6 a1);
/* UT_ISE_VARIABLES.ise_platform_value */
extern T0* T44f7(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T89f1(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T89f4(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T89f3(TC* ac, T0* C);
/* UT_ISE_VARIABLES.execution_environment */
extern T0* T44f3(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T89c16(TC* ac);
/* ET_C_GENERATOR.ise_variables */
extern T0* T91f245(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.boehm_gc_value */
extern T0* T43f1(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.execution_environment */
extern T0* T43f2(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.zig_value */
extern T0* T43f8(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.gobo_value */
extern T0* T43f4(TC* ac, T0* C);
/* ET_C_GENERATOR.gobo_variables */
extern T0* T91f155(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.make */
extern T0* T387c55(TC* ac, T6 a1);
/* DS_STRING_HASH_TABLE.make_with_equality_testers */
extern void T387f62(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_STRING_HASH_TABLE.make_sparse_container */
extern void T387f69(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.set_internal_cursor */
extern void T387f78(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.new_cursor */
extern T0* T387f47(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T388c12(TC* ac, T0* a1);
/* DS_STRING_HASH_TABLE.unset_found_item */
extern void T387f63(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.make_slots */
extern void T387f77(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_modulus */
extern T6 T387f45(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_clashes */
extern void T387f76(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_key_storage */
extern void T387f75(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.make_item_storage */
extern void T387f74(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T159c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T388f16(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_forth */
extern void T387f82(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.add_traversing_cursor */
extern void T387f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T388f19(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.remove_traversing_cursor */
extern void T387f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T220f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T220f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T220f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T220f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T388f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T388f15(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_start */
extern void T387f81(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.cursor_off */
extern T1 T387f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T388f11(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.is_empty */
extern T1 T387f53(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T220f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T220f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T220f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T388f14(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_back */
extern void T387f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T388f20(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T220f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T388f9(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_key */
extern T0* T387f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T220f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T220f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_last */
extern T1 T388f7(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_is_last */
extern T1 T387f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_last */
extern T1 T220f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T388f6(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T388f13(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.cursor_finish */
extern void T387f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T220f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T220f22(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.item */
extern T0* T387f23(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.search_position */
extern void T387f61(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T91f680(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T85f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T85f19(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
extern T1 T85f19ot1(TC* ac, T0* a1);
/* STRING_8.substring_index */
extern T6 T17f39(TC* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1521f2(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1521f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1521f6(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f43(TC* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1521c5(TC* ac);
/* UC_UTF8_STRING.substring_index */
extern T6 T748f33(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING.substring_index */
extern T6 T329f63(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T385f34(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T385f44(TC* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T385f51(TC* ac, T0* C, T14 a1, T2 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T220f52(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T220f64(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T220f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T220f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T220f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T220f31(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T222f2(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T220f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T220f77(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T269f1(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T133f4(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern T0* T220f42(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T269c6(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T220f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T220f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T220f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T220f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T220f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T220f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T220f60(TC* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T964f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T964f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].sort */
extern void T151f39(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [STRING_8].sort */
extern void T412f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [STRING_8].sort_with_comparator */
extern void T412f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [STRING_8].subsort_with_comparator */
extern void T412f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [STRING_8].swap */
extern void T151f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].replace */
extern void T151f40(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_STRING_COMPARATOR.less_than */
extern T1 T413f1(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_COMPARATOR.string_ */
extern T0* T413f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].item */
extern T0* T411f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.scoop_mode */
extern T1 T91f337(TC* ac, T0* C);
/* ET_C_GENERATOR.use_threads */
extern T1 T91f333(TC* ac, T0* C);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T91f525(TC* ac, T0* C);
/* DS_QUICK_SORTER [STRING_8].make */
extern T0* T412c2(TC* ac, T0* a1);
/* UC_STRING_COMPARATOR.default_create */
extern T0* T413c3(TC* ac);
/* KL_DIRECTORY.close */
extern void T410f36(TC* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T410f38(TC* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T410f23(TC* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T410f42(TC* ac, T0* C, T14 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].force_last */
extern void T411f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].force */
extern void T844f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].fill_with */
extern void T843f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].extend */
extern void T843f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].resize */
extern void T411f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].aliased_resized_area */
extern T0* T844f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].aliased_resized_area */
extern T0* T843f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].new_capacity */
extern T6 T411f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].extendible */
extern T1 T411f7(TC* ac, T0* C, T6 a1);
/* KL_DIRECTORY.read_entry */
extern void T410f35(TC* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T410f21(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T145f15(TC* ac, T0* C, T14 a1);
/* C_STRING.string_8 */
extern T0* T30f5(TC* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T30f6(TC* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T30c14(TC* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T145f19(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.file_info */
extern T0* T410f29(TC* ac, T0* C);
/* KL_DIRECTORY.last_entry_32 */
extern T0* T410f20(TC* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_32 */
extern T0* T145f16(TC* ac, T0* C, T14 a1);
/* FILE_INFO.pointer_length_in_bytes */
extern T6 T145f20(TC* ac, T0* C, T14 a1);
/* FILE_INFO.c_pointer_length_in_bytes */
extern T11 T145f21(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.readentry */
extern void T410f41(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T410f27(TC* ac, T0* C, T14 a1);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T91f761(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T410f14(TC* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T410f30(TC* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T410f34(TC* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T410f40(TC* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T410f24(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T410f26(TC* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T410f18(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T410f31(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T410f17(TC* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T410f28(TC* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T410f33(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T410c33(TC* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T410f39(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T410f43(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T410f44(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T410f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T411c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].set_internal_cursor */
extern void T411f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [STRING_8]].new_cursor */
extern T0* T411f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T845c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].make */
extern T0* T844f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [STRING_8]].make_empty */
extern T0* T843c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [STRING_8]].default_create */
extern T0* T844c3(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T84f231(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T84f70(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T84f67(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T84f76(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T84f56(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T220f49(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T91f152(TC* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T158c2(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T220f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T220c48(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T220f58(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T220f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T220f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T220f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T220f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T220f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T220f80(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.found_item */
extern T0* T387f22(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.found */
extern T1 T387f49(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.search */
extern void T387f58(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.force */
extern void T387f56(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.key_storage_put */
extern void T387f68(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_STRING_HASH_TABLE.slots_put */
extern void T387f67(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.clashes_put */
extern void T387f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_STRING_HASH_TABLE.resize */
extern void T387f65(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.clashes_resize */
extern void T387f73(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.special_integer_ */
extern T0* T387f48(TC* ac, T0* C);
/* DS_STRING_HASH_TABLE.key_storage_resize */
extern void T387f72(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_resize */
extern void T387f71(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.slots_resize */
extern void T387f70(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.new_capacity */
extern T6 T387f35(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.item_storage_put */
extern void T387f64(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.starts_with */
extern T1 T748f28(TC* ac, T0* C, T0* a1);
/* UC_STRING.starts_with */
extern T1 T329f13(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T89f2(TC* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.expanded_string */
extern T0* T89f5(TC* ac, T0* C, T0* a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T84f186(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T84f343(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T84f347(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T84f322(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T84f336(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T84f149(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T84f236(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T84f303(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T84f302(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T84f57(TC* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T523f1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T84f187(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T84f301(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T10 T322f8(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T84f300(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T322f5(TC* ac, T0* C, T6 a1, T10 a2);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].item */
extern T0* T738f9(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T84f299(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T84f305(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T84f150(TC* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T323c16(TC* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T323f17(TC* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T323f14(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force */
extern void T741f60(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_put */
extern void T741f78(TC* ac, T0* C, T10 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_32].force */
extern void T739f6(TC* ac, T0* C, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].fill_with */
extern void T737f9(TC* ac, T0* C, T10 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].extend */
extern void T737f11(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_put */
extern void T741f77(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_put */
extern void T741f76(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_item */
extern T6 T741f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_item */
extern T6 T741f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].hash_position */
extern T6 T741f28(TC* ac, T0* C, T10 a1);
/* NATURAL_32.hash_code */
extern T6 T10f29(TC* ac, volatile T10* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].resize */
extern void T741f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_resize */
extern void T741f93(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].special_integer_ */
extern T0* T741f49(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_resize */
extern void T741f92(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area */
extern T0* T739f3(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_32].aliased_resized_area */
extern T0* T737f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_resize */
extern void T741f91(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].aliased_resized_area */
extern T0* T1512f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_64].aliased_resized_area */
extern T0* T740f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_item */
extern T10 T741f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_resize */
extern void T741f90(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_modulus */
extern T6 T741f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_capacity */
extern T6 T741f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_put */
extern void T741f65(TC* ac, T0* C, T11 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_64].force */
extern void T1512f4(TC* ac, T0* C, T0* a1, T11 a2, T6 a3);
/* SPECIAL [NATURAL_64].fill_with */
extern void T740f12(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search_position */
extern void T741f61(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].unset_found_item */
extern void T741f64(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].value */
extern T11 T741f34(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_item */
extern T11 T741f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].position_of_key */
extern T6 T741f22(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].has */
extern T1 T741f33(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_map */
extern T0* T741c50(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_with_equality_testers */
extern void T741f62(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_sparse_container */
extern void T741f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].set_internal_cursor */
extern void T741f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_cursor */
extern T0* T741f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].make */
extern T0* T742c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_slots */
extern void T741f97(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_clashes */
extern void T741f96(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_key_storage */
extern void T741f95(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make */
extern T0* T739f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern void T737f10(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].make_empty */
extern T0* T737c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].default_create */
extern T0* T739c5(TC* ac);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].make_item_storage */
extern void T741f94(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].make */
extern T0* T1512f2(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_64].default_create */
extern T0* T1512c3(TC* ac);
/* RX_CHARACTER_SET.masks */
extern T0* T323f9(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].make_filled */
extern T0* T740c9(TC* ac, T11 a1, T6 a2);
/* RX_CHARACTER_SET.make_empty */
extern void T323f11(TC* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T323c11(TC* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T84f165(TC* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T323f10(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item */
extern T11 T741f36(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T84f334(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T84f81(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T84f80(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T84f79(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T84f345(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T84f344(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T84f298(TC* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T10 T322f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T84f296(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T84f277(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T10 T322f7(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T84f232(TC* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T10 T324f4(TC* ac, T0* C, T10 a1);
/* NATURAL_32.to_integer_64 */
extern T7 T10f13(TC* ac, volatile T10* C);
/* RX_CASE_MAPPING.to_lower */
extern T10 T324f3(TC* ac, T0* C, T10 a1);
/* INTEGER_64.to_natural_32 */
extern T10 T7f6(TC* ac, volatile T7* C);
/* INTEGER_64.is_greater_equal */
extern T1 T7f5(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_subject */
extern void T84f340(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T84f346(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T84f348(TC* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T84f249(TC* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern T0* T91f168(TC* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T91f172(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T84f311(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T151f19(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T91f150(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T84f342(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T84f323(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T84f310(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T84f310p1(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T84f321(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T84f147(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T10 T84f205(TC* ac, T0* C, T10 a1, T10 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T10 T84f78(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T84f320(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T84f77(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T10 T84f75(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T10 T84f129(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T10 T84f127(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T10 T84f125(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T84f319(TC* ac, T0* C, T10 a1, T1 a2, T1 a3, T7 a4);
/* RX_BYTE_CODE.set_count */
extern void T322f15(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T84f62(TC* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T322f14(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T84f335(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T84f146(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T84f145(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T322f16(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.put_character */
extern void T322f22(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T322f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_32].aliased_resized_area_with_default */
extern T0* T739f2(TC* ac, T0* C, T0* a1, T10 a2, T6 a3);
/* SPECIAL [NATURAL_32].aliased_resized_area_with_default */
extern T0* T737f4(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.special_natural_32_ */
extern T0* T322f9(TC* ac, T0* C);
/* INTEGER_64.is_less_equal */
extern T1 T7f10(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T7 T84f139(TC* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T10 T84f223(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T84f248(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T10 T84f222(TC* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer_32 */
extern T6 T7f14(TC* ac, volatile T7* C);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T7 T84f217(TC* ac, T0* C, T10 a1);
/* INTEGER_64.is_greater */
extern T1 T7f7(TC* ac, volatile T7* C, T7 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T10 T84f132(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T84f333(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T10 T84f130(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T10 T84f128(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T10 T84f126(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T10 T84f107(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T84f339(TC* ac, T0* C, T6 a1, T6 a2, T6 a3, T7 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T322f20(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T322f19(TC* ac, T0* C, T10 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T322f18(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T84f341(TC* ac, T0* C, T10 a1, T6 a2, T6 a3, T6 a4, T10 a5, T10 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T84f338(TC* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T322f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].force_last */
extern void T738f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].force */
extern void T1504f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].fill_with */
extern void T328f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_CHARACTER_SET].extend */
extern void T328f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].resize */
extern void T738f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T1504f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [RX_CHARACTER_SET].aliased_resized_area */
extern T0* T328f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_capacity */
extern T6 T738f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].extendible */
extern T1 T738f7(TC* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.set_negated */
extern void T323f15(TC* ac, T0* C, T1 a1);
/* RX_CHARACTER_SET.add_set */
extern void T323f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].wipe_out */
extern void T741f59(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].slots_wipe_out */
extern void T741f82(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clashes_wipe_out */
extern void T741f81(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_wipe_out */
extern void T741f80(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].keep_head */
extern void T737f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].set_count */
extern void T737f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_wipe_out */
extern void T741f79(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].keep_head */
extern void T740f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].set_count */
extern void T740f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_all_cursors_after */
extern void T741f67(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_next_cursor */
extern void T742f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_after */
extern void T742f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].forth */
extern void T742f11(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_forth */
extern void T741f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].add_traversing_cursor */
extern void T741f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].set_position */
extern void T742f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_traversing_cursor */
extern void T741f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].force_new */
extern void T741f58(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace_found_item */
extern void T741f57(TC* ac, T0* C, T11 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].item */
extern T11 T742f6(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_item */
extern T11 T741f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found_item */
extern T11 T741f32(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].found */
extern T1 T741f31(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].search */
extern void T741f56(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].key */
extern T10 T742f7(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_key */
extern T10 T741f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].after */
extern T1 T742f4(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].new_iterator */
extern T0* T741f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].start */
extern void T742f12(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_start */
extern void T741f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_off */
extern T1 T741f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [NATURAL_64, NATURAL_32].off */
extern T1 T742f9(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].forth */
extern void T741f53(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove */
extern void T741f55(TC* ac, T0* C, T10 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].remove_position */
extern void T741f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_storage_keep_head */
extern void T741f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_storage_keep_head */
extern void T741f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].move_cursors_forth */
extern void T741f87(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].internal_set_key_equality_tester */
extern void T741f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].key_for_iteration */
extern T10 T741f30(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].after */
extern T1 T741f25(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].cursor_after */
extern T1 T741f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].start */
extern void T741f51(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T741f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].copy */
extern void T741f54p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_clashes */
extern void T741f73(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T133f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T133f16(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_slots */
extern void T741f72(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_key_storage */
extern void T741f71(TC* ac, T0* C);
/* SPECIAL [NATURAL_32].resized_area */
extern T0* T737f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_32].copy_data */
extern void T737f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_32].force */
extern void T737f16(TC* ac, T0* C, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].move_data */
extern void T737f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].overlapping_move */
extern void T737f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_32].non_overlapping_move */
extern void T737f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].clone_item_storage */
extern void T741f70(TC* ac, T0* C);
/* SPECIAL [NATURAL_64].resized_area */
extern T0* T740f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_64].copy_data */
extern void T740f15(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [NATURAL_64].force */
extern void T740f18(TC* ac, T0* C, T11 a1, T6 a2);
/* SPECIAL [NATURAL_64].move_data */
extern void T740f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].overlapping_move */
extern void T740f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_64].non_overlapping_move */
extern void T740f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].valid_cursor */
extern T1 T741f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].twin */
extern T0* T741f48(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].is_empty */
extern T1 T741f41(TC* ac, T0* C);
/* RX_CHARACTER_SET.add_negated_set */
extern void T323f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].replace */
extern void T741f52(TC* ac, T0* C, T11 a1, T10 a2);
/* DS_HASH_TABLE [NATURAL_64, NATURAL_32].item_for_iteration */
extern T11 T741f27(TC* ac, T0* C);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T327f4(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T84f157(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T84f55(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T84f247(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T84f246(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T84f245(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T84f244(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T84f243(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T84f242(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T84f241(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T84f240(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T84f238(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T84f155(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T84f239(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T84f153(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T84f83(TC* ac, T0* C, T6 a1, T7 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T84f337(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T84f59(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.append_integer */
extern void T322f13(TC* ac, T0* C, T10 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T322f12(TC* ac, T0* C, T10 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T84f318(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T84f317(TC* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T322f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].wipe_out */
extern void T738f11(TC* ac, T0* C);
/* SPECIAL [RX_CHARACTER_SET].keep_head */
extern void T328f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].set_count */
extern void T328f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].move_all_cursors_after */
extern void T738f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_next_cursor */
extern void T1505f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].set_after */
extern void T1505f6(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T84f316(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T84f316p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T84c309(TC* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T269f2(TC* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T84f309p1(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T84f315(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T84f332(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T84f331(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T84f330(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T84f329(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T84f328(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T84f327(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T84f326(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T84f325(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T84f324(TC* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T84f314(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T84f313(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T84f235(TC* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T324c6(TC* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T324f8(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T324f7(TC* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T324f9(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [NATURAL_32].make_filled */
extern T0* T739f1(TC* ac, T0* C, T10 a1, T6 a2);
/* SPECIAL [NATURAL_32].make_filled */
extern T0* T737c7(TC* ac, T10 a1, T6 a2);
/* RX_CASE_MAPPING.special_natural_32_ */
extern T0* T324f5(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T84f312(TC* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T84f312p1(TC* ac, T0* C);
/* STRING_32.wipe_out */
extern void T18f26(TC* ac, T0* C);
/* STRING_32.twin */
extern T0* T18f8(TC* ac, T0* C);
/* STRING_32.copy */
extern void T18f33(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].resized_area */
extern T0* T16f6(TC* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T84f233(TC* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T322c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].make */
extern T0* T738c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].set_internal_cursor */
extern void T738f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_CHARACTER_SET].new_cursor */
extern T0* T738f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_CHARACTER_SET].make */
extern T0* T1505c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].make */
extern T0* T1504f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_CHARACTER_SET].make_empty */
extern T0* T328c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_CHARACTER_SET].default_create */
extern T0* T1504c3(TC* ac);
/* ET_C_GENERATOR.c_config */
extern T0* T91f167(TC* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T525f185(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T525f189(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T525f202(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T525f201(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T579f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T580f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T580f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T579f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T580f4(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T525f200(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T602f4(TC* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T602f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T134f4(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T525f140(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T220f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T220f87(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.process_include */
extern void T525f214(TC* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1435c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1433f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1799f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1798f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1798f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T1012f9(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T525f166(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1433f5(TC* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T525f213(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T220f88(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T220f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T220f93(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T220f92(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T220f91(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T220f90(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T525f137(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T525f199(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T525f198(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T525f196(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T525f212(TC* ac, T0* C, T0* a1);
extern T1 T525f212ot1(TC* ac, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T1434c8(TC* ac, T0* a1, T6 a2);
/* KL_STDIN_FILE.name */
extern T0* T1006f6(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T969f26(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1552f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.name */
extern T0* T42f4(TC* ac, T0* C);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T525f211(TC* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T525f195(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T525f210(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T525f219(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1522f9(TC* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T1005f22(TC* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T1007f16(TC* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T525f165(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T525f159(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1522f3(TC* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T525f158(TC* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T525f154(TC* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T525f153(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T525f217(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T525f209(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T525f218(TC* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T525f132(TC* ac, T0* C);
extern T1 T525f132ot1(TC* ac, T0* a1);
/* KL_STDIN_FILE.close */
extern void T1006f13(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T969f38(TC* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T1006f5(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T969f27(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T42f39(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1433f10(TC* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1798f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1798f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T1012f11(TC* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T133f14(TC* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T133f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T1012f5(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1433f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1433f6(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T525f208(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T525f205(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1522f6(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.as_unicode_special */
extern T0* T1522f5(TC* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T1005f21(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1522f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T1006f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f83(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* CONSOLE.read_stream */
extern void T993f32(TC* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T993f34(TC* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T30f15(TC* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T993f18(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T993f17(TC* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T1006f10(TC* ac, T0* C);
/* CONSOLE.end_of_file */
extern T1 T993f12(TC* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T993f14(TC* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T1006f7(TC* ac, T0* C);
/* STD_FILES.input */
extern T0* T470f4(TC* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T993c30(TC* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T993f33(TC* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T1006f9(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T969f28(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T969f28p1(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1552f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1552f10(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T42f38(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T42f48(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1522c11(TC* ac, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T42f37(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T42f45(TC* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f8(TC* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T42f46(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.put */
extern void T1522f12(TC* ac, T0* C, T2 a1, T6 a2);
/* KL_STDIN_FILE.last_character */
extern T2 T1006f2(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T969f19(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1699f4(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.last_character */
extern T2 T42f6(TC* ac, T0* C);
/* KL_STDIN_FILE.end_of_file */
extern T1 T1006f1(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T969f18(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T42f34(TC* ac, T0* C);
/* KL_STDIN_FILE.read_character */
extern void T1006f14(TC* ac, T0* C);
/* CONSOLE.read_character */
extern void T993f31(TC* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T993f15(TC* ac, T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T969f32(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1699f6(TC* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1699f8(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T969f34(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T969f36(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T969f37(TC* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1699f7(TC* ac, T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T1979f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T1979c3(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T330f58(TC* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.append_natural_32_code_to_utf8 */
extern void T330f57(TC* ac, T0* C, T0* a1, T10 a2);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T969f22(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T969f17(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T969f25(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1700f7(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1700f6(TC* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1700f5(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1700f4(TC* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1700f3(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T969f20(TC* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1700c16(TC* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T969f24(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T969f23(TC* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T969f35(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T969f33(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T330f42(TC* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T330f44(TC* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1700f2(TC* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1700f1(TC* ac, T0* C, T6 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T1005f24(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1522f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T1005f26(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1522f14(TC* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T1005f13(TC* ac, T0* C);
/* YY_BUFFER.fill */
extern void T1007f14(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T1005f19(TC* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T1007f13(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T525f131(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T525f130(TC* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T525f207(TC* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T83c8(TC* ac, T0* a1);
/* UT_CONFIG_PARSER.report_invalid_unicode_character_error */
extern void T525f206(TC* ac, T0* C, T10 a1);
/* NATURAL_32.to_hex_string */
extern T0* T10f28(TC* ac, volatile T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f30(TC* ac, volatile T10* C);
/* KL_CHARACTER_BUFFER.item_code */
extern T10 T1522f4(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_at_beginning_of_line */
extern T6 T525f99(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T269f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T269f4(TC* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T525f105(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T525f194(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T525f203(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T525f215(TC* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T525f220(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T525f221(TC* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T134f11(TC* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T134f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T580f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T580f9(TC* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T525f197(TC* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T525f188(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T525f193(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T1005f20(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T1007f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T525f104(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T1005c18(TC* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T1005f17(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T1005c17(TC* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T1005f23(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T1005f25(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T1005f27(TC* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T1005f15(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T91f570(TC* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T525f184(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T525c183(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T1012c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T269f3(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1433c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1799f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1798c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1799c2(TC* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T525f97(TC* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T525f187(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T525f192(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T525f82(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T525f178(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T269f5(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T525f139(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T525f138(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T525f136(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T525f133(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T525f127(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T525f126(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T525f123(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T525f119(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T525f116(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T525f223(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T525f225(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T970f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T376f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T525f182(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T970c2(TC* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T525f222(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T525f191(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T602f1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T602c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T579f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T580c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T579c3(TC* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T525f186(TC* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T525f190(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T525f204(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T525f204p1(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T525f216(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T525f173(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T525f181(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T525f172(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T525f171(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T525f224(TC* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T525f226(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T525f170(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T525f169(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T525f168(TC* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T525f167(TC* ac, T0* C);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T525f83(TC* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T1007c12(TC* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T1007f17(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1522f15(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_substring */
extern void T1522f17(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T1007f11(TC* ac, T0* C, T6 a1);
/* DS_STRING_HASH_TABLE.put_new */
extern void T387f60(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_STRING_HASH_TABLE.set_key_equality_tester */
extern void T387f59(TC* ac, T0* C, T0* a1);
/* DS_STRING_HASH_TABLE.make_map */
extern T0* T387c57(TC* ac, T6 a1);
/* KL_STRING_ROUTINES.right_adjust */
extern void T85f26(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T85f25(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T748f86(TC* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T748f105(TC* ac, T0* C, T6 a1);
/* UC_STRING.remove_head */
extern void T329f108(TC* ac, T0* C, T6 a1);
/* UC_STRING.keep_tail */
extern void T329f111(TC* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T131f3(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T130f3(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T91f639(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T91f576(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T242c49(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T242f49ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1590f46(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T643f7(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T259f74(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1589f46(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1587f31(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1586f57(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T531f34(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T453f33(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T451f32(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T442f32(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T443f31(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T524f37(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T521f30(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T68f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T68f113(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T502f82(TC* ac, T0* C, T0* a1);
extern T1 T502f82ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T502f38(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T259f34(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T259f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T77c1563(TC* ac);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T502f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_function */
extern void T502f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T502f33(TC* ac, T0* C);
/* ET_CLASS.is_basic */
extern T1 T78f187(TC* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T320f34(TC* ac, T0* C, T8 a1);
/* ET_CLASS.class_codes */
extern T0* T78f126(TC* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T320c35(TC* ac);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_is_equal */
extern T1 T273f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_is_equal */
extern T1 T242f26(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_object */
extern T1 T273f24(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_object */
extern T1 T1590f55(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_object */
extern T1 T521f46(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T1589f34(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1931f3(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1931f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1931f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.value */
extern T0* T1560f1(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value */
extern T0* T1559f1(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value */
extern T0* T1558f1(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1931f9(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T1293f7(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1560f16(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1559f16(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T1558f16(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T1293f8(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T1589f33(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1931c13(TC* ac);
/* ET_DO_PROCEDURE.is_once_per_object */
extern T1 T524f50(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T259f71(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T1587f33(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T1586f58(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T1586f39(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_object */
extern T1 T531f52(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T453f50(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T451f48(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T442f47(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_object */
extern T1 T443f48(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_object */
extern T1 T242f45(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T230f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].force */
extern void T645f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].fill_with */
extern void T644f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].extend */
extern void T644f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T230f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T645c3(TC* ac);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T230f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T645f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T644f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T230f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T230f6(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T502f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T236f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T74f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T59f202(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T59f212(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T59f215(TC* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T851c13(TC* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T41f202(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T41f212(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T41f215(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T74f85(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T74f115(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T74f125(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_dynamic_types */
extern void T74f126(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1541f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T348f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T520f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2098f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T2097f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T303f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T304f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1541f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T348f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T520f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1432f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T502f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T501f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T310f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T396f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.propagate_can_be_void */
extern void T229f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.propagate_can_be_void */
extern void T400f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2098f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T2098f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T236f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T74f576(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T74f141(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_primary_type */
extern T1 T502f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T354f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T354f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T354f20(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T502f24(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T501f23(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T310f20(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T396f20(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T229f18(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T354f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T354f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T354f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_equality_tester */
extern T0* T354f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T354f22(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_none */
extern T1 T78f183(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T870f41(TC* ac, T0* C);
/* ET_NONE_GROUP.is_none */
extern T1 T498f5(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T316f11(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_primary_type */
extern T1 T501f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_primary_type */
extern T1 T310f38(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_primary_type */
extern T1 T396f31(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T229f38(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T273f56(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T242f52(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T274f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T236f13(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T68f77(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T236f28(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T502f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.seeded_query */
extern T0* T78f186(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T263f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T501f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_function */
extern void T501f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T501f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.register_feature_seeds */
extern void T501f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_IDS.item */
extern T6 T643f6(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.other_seeds */
extern T0* T1590f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_seeds */
extern T0* T259f7(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_seeds */
extern T0* T1589f8(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_seeds */
extern T0* T1587f7(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_seeds */
extern T0* T1586f8(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_seeds */
extern T0* T531f10(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_seeds */
extern T0* T453f8(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_seeds */
extern T0* T451f7(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_seeds */
extern T0* T442f6(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_seeds */
extern T0* T443f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_seeds */
extern T0* T524f10(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_seeds */
extern T0* T521f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].force_last */
extern void T641f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_put */
extern void T641f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_put */
extern void T641f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_put */
extern void T641f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_item */
extern T6 T641f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].hash_position */
extern T6 T641f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].resize */
extern void T641f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_resize */
extern void T641f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].special_integer_ */
extern T0* T641f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_resize */
extern void T641f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_resize */
extern void T641f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].key_storage_item */
extern T6 T641f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].clashes_item */
extern T6 T641f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].slots_resize */
extern void T641f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_modulus */
extern T6 T641f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_capacity */
extern T6 T641f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_put */
extern void T641f38(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].search_position */
extern void T641f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].unset_found_item */
extern void T641f36(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.first_seed */
extern T6 T1590f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_seed */
extern T6 T1589f1(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_seed */
extern T6 T524f8(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_seed */
extern T6 T521f5(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T501f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T310f41(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_function */
extern void T310f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T310f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.register_feature_seeds */
extern void T310f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T310f65(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T236f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_reference_item */
extern void T74f129(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_basic */
extern T1 T400f12(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.base_class */
extern T0* T400f13(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T271f4(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T189f51(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.string_ */
extern T0* T189f55(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T77f95(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T310f30(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T242f25(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T259f55(TC* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T189f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1587f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1586f43(TC* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T531f40(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T453f59(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T451f57(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T442f56(TC* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T443f58(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T310f65p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T396f40(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_function */
extern void T396f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T396f78(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.register_feature_seeds */
extern void T396f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T396f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T242f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_builtin_special_item */
extern T1 T242f22(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T396f27p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T229f48(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_function */
extern void T229f77(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_attribute */
extern void T229f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.register_feature_seeds */
extern void T229f74(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_query */
extern T0* T229f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T501f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T310f28(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T396f29(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T229f49(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T2097f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T2097f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T303f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T303f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T236f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T74f567(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f567ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T74f572(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T271f3(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_SYMBOL.seed */
extern T6 T2082f1(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.seed */
extern T6 T1618f3(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.seed */
extern T6 T1617f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.seed */
extern T6 T1050f6(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.seed */
extern T6 T1058f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.seed */
extern T6 T1071f4(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.seed */
extern T6 T662f4(TC* ac, T0* C);
/* ET_IDENTIFIER.seed */
extern T6 T189f1(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T2130f1(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.name */
extern T0* T959f2(TC* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T1118f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.name */
extern T0* T1621f2(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.name */
extern T0* T1616f3(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.name */
extern T0* T1115f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T363f8(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T303f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T303f21p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T303f21p1ot1(TC* ac, T0* a1);
extern T1 T303f21p1ot2(TC* ac, T0* a1);
extern T1 T303f21p1ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1541f20(TC* ac, T0* C, T0* a1);
extern T1 T1541f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.force_last */
extern void T347f21(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T458f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T457f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T457f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.fixed_array */
extern T0* T347f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T458c3(TC* ac);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.hash_position */
extern T6 T347f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.modulus */
extern T6 T347f14(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.resize */
extern void T347f18(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.special_integer_ */
extern T0* T347f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T458f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T457f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_modulus */
extern T6 T347f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.new_capacity */
extern T6 T347f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.capacity */
extern T6 T347f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.put_last */
extern void T347f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.append_last */
extern void T347f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1541f12(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.make_with_capacity */
extern T0* T347c17(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T458f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T457c5(TC* ac, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1541f9(TC* ac, T0* C, T0* a1);
extern T1 T1541f9ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1541f9p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1541f11(TC* ac, T0* C, T0* a1);
extern T1 T1541f11ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1541f11p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.index_of */
extern T6 T400f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T502f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T501f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T310f61(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T396f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.index_of */
extern T6 T229f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.index_of */
extern T6 T347f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.has_type */
extern T1 T347f13(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.has_type */
extern T1 T400f22(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T502f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T501f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T310f40(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T396f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.has_type */
extern T1 T229f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.dynamic_type */
extern T0* T347f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_type */
extern T0* T400f18(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T502f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T501f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T310f36(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T396f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_type */
extern T0* T229f64(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.count */
extern T6 T347f1(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.count */
extern T6 T400f17(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T502f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T501f35(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T310f35(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T396f38(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.count */
extern T6 T229f63(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T502f54(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T260f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T492f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T1082f38(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T1082f14(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T1082f16(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T1082f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_detachable_mark */
extern T1 T1071f76(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_question_mark */
extern T1 T1071f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T1071f22(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_detachable */
extern T1 T1071f18(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T662f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T662f24(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T662f8(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T662f23(TC* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T661f59(TC* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T661f72(TC* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T661f56(TC* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T661f71(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T319f9(TC* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T319f18(TC* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T319f17(TC* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T319f22(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable_mark */
extern T1 T386f5(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T492f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T1082f25(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T1082f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T1082f11(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached_mark */
extern T1 T1071f26(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bang */
extern T1 T1071f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attached */
extern T1 T1071f16(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T662f10(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T662f22(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T662f21(TC* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T661f58(TC* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T661f70(TC* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T661f69(TC* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T319f21(TC* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T319f12(TC* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T319f11(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached_mark */
extern T1 T386f3(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T260f23(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T492f6(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_attachment_mark */
extern T1 T1071f13(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T662f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T1082f20(TC* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T661f57(TC* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T319f7(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T386f8(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T76f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T76f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference_mark */
extern T1 T1071f8(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_reference */
extern T1 T1071f24(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T662f15(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T662f27(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T1082f7(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T1082f18(TC* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T661f64(TC* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T661f76(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T492f7(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_reference */
extern T1 T492f13(TC* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T319f8(TC* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T319f16(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference_mark */
extern T1 T386f4(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded_mark */
extern T1 T1071f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expanded */
extern T1 T1071f23(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T662f14(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T662f26(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T1082f6(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T1082f17(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T661f63(TC* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T661f75(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T492f3(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expanded */
extern T1 T492f10(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T319f4(TC* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T319f13(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded_mark */
extern T1 T386f1(TC* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T78f172(TC* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T78f92(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_attached */
extern T1 T76f16(TC* ac, T0* C);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T78f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_attached */
extern T1 T78f93(TC* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T78f100(TC* ac, T0* C);
/* ET_ECF_LIBRARY.current_system */
extern T0* T192f11(TC* ac, T0* C);
/* ET_SYSTEM.current_system */
extern T0* T46f6(TC* ac, T0* C);
/* ET_ECF_SYSTEM.current_system */
extern T0* T63f13(TC* ac, T0* C);
/* ET_ECF_LIBRARY.implicit_attachment_type_mark */
extern T0* T192f16(TC* ac, T0* C);
/* ET_SYSTEM.implicit_attachment_type_mark */
extern T0* T46f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.implicit_attachment_type_mark */
extern T0* T63f18(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_mark */
extern T0* T502f51(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T502f60(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_mark */
extern T0* T501f51(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T501f60(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.type_mark */
extern T0* T400f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_mark */
extern T0* T396f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T396f32(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.type_mark */
extern T0* T310f52(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T229f53(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.tokens */
extern T0* T229f36(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T501f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T396f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T310f42(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.conforms_to_type */
extern T1 T400f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.conforms_to_type */
extern T1 T229f39(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T273f30(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T353f4(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.index */
extern T6 T2100f3(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.index */
extern T6 T2057f1(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.index */
extern T6 T2130f3(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.index */
extern T6 T2129f3(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.index */
extern T6 T2128f1(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.index */
extern T6 T1633f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.index */
extern T6 T1082f3(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.index */
extern T6 T454f6(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.index */
extern T6 T1564f1(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.index */
extern T6 T1563f1(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.index */
extern T6 T1562f1(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.index */
extern T6 T1561f1(TC* ac, T0* C);
/* ET_VERBATIM_STRING.index */
extern T6 T1560f2(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.index */
extern T6 T1559f2(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.index */
extern T6 T1557f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.index */
extern T6 T405f1(TC* ac, T0* C);
/* ET_OBJECT_TEST.index */
extern T6 T394f1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.index */
extern T6 T1631f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.index */
extern T6 T1630f1(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.index */
extern T6 T1629f1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.index */
extern T6 T1628f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.index */
extern T6 T1627f1(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.index */
extern T6 T1626f1(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.index */
extern T6 T1625f1(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.index */
extern T6 T1624f1(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.index */
extern T6 T1623f1(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.index */
extern T6 T1622f1(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.index */
extern T6 T1621f1(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.index */
extern T6 T1620f1(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.index */
extern T6 T1619f1(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.index */
extern T6 T1616f1(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.index */
extern T6 T1615f1(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.index */
extern T6 T1614f1(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.index */
extern T6 T1613f1(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.index */
extern T6 T1612f1(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.index */
extern T6 T1611f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.index */
extern T6 T1571f1(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.index */
extern T6 T1570f1(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.index */
extern T6 T1569f1(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.index */
extern T6 T1568f1(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.index */
extern T6 T1566f2(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.index */
extern T6 T1565f2(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.index */
extern T6 T1558f2(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.index */
extern T6 T1353f1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.index */
extern T6 T1350f1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.index */
extern T6 T1337f1(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.index */
extern T6 T1315f1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.index */
extern T6 T1287f1(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.index */
extern T6 T1260f1(TC* ac, T0* C);
/* ET_IF_EXPRESSION.index */
extern T6 T1244f1(TC* ac, T0* C);
/* ET_CALL_AGENT.index */
extern T6 T1118f1(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.index */
extern T6 T1115f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.index */
extern T6 T1085f1(TC* ac, T0* C);
/* ET_VOID.index */
extern T6 T1074f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.index */
extern T6 T774f1(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.index */
extern T6 T764f1(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.index */
extern T6 T702f1(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.index */
extern T6 T423f2(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.index */
extern T6 T370f5(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.index */
extern T6 T363f2(TC* ac, T0* C);
/* ET_CURRENT.index */
extern T6 T359f1(TC* ac, T0* C);
/* ET_RESULT.index */
extern T6 T334f4(TC* ac, T0* C);
/* ET_IDENTIFIER.index */
extern T6 T189f2(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T242f27(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T370f6(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T2057f13(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T2130f15(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T2129f14(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T2128f10(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1564f9(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1563f9(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1562f9(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1561f9(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T454f17(TC* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1560f11(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1559f11(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1557f9(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.expression_item */
extern T0* T1625f4(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.expression_item */
extern T0* T1337f18(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T1085f22(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1624f11(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T702f7(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1623f13(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1612f4(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T774f8(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1631f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1630f18(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1629f18(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1628f37(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1627f43(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1626f40(TC* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T1118f9(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T1353f10(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T1287f10(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T1315f9(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T1115f8(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T394f14(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1622f4(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1621f20(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1620f9(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T1619f8(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T764f8(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1616f8(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1615f4(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1614f4(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1613f4(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1611f12(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1350f8(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.expression_item */
extern T0* T1260f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T1244f9(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T405f15(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1571f12(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1570f12(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1569f16(TC* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T1074f16(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1568f16(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1566f13(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1565f13(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T1558f26(TC* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T334f9(TC* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T359f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T363f12(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T370f16(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.expression_item */
extern T0* T423f8(TC* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T189f54(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.item */
extern T0* T370f12(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T2057f15(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument */
extern T0* T423f16(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T2130f18(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T2129f18(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T2128f14(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T2099f8(TC* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T1102f7(TC* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T2057f18(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.agent_actual_argument */
extern T0* T423f19(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T2130f21(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T2129f21(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T2128f17(TC* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T189f93(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1564f29(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1563f29(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1562f29(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1561f29(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T454f23(TC* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1560f32(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1559f29(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1557f28(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.agent_actual_argument */
extern T0* T1625f18(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.agent_actual_argument */
extern T0* T1337f31(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T1085f33(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1624f20(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T702f22(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1623f25(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1612f18(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T774f20(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1633f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1631f31(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1630f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1629f34(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1628f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1627f39(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1626f35(TC* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T1118f23(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1353f24(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T370f25(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T1287f25(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T1315f20(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T1115f20(TC* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T394f20(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1622f18(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1621f21(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1620f19(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T1619f18(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T764f18(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1616f21(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1615f18(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1614f18(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1613f18(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1611f22(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1350f22(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T363f22(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.agent_actual_argument */
extern T0* T1260f21(TC* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T1244f24(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T405f28(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1571f26(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1570f26(TC* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T359f28(TC* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T334f28(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1569f26(TC* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T1074f26(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1568f26(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T1082f36(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1566f28(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1565f28(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T1558f27(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T1102f8(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T189f66(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1564f11(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1563f11(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1562f11(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1561f11(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T454f19(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1560f13(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1559f13(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1557f11(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.actual_argument */
extern T0* T1625f10(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.actual_argument */
extern T0* T1337f20(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T1085f24(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1624f10(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T702f14(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1623f17(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1612f10(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T774f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1631f20(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1630f22(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1629f21(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1628f22(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1627f24(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1626f23(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T1118f14(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1353f16(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T370f9(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T1287f17(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T1315f11(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T1115f12(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T394f7(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1622f10(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1621f9(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1620f11(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T1619f10(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T764f10(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1616f10(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1615f10(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1614f10(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1613f10(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1611f14(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1350f14(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T363f14(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.actual_argument */
extern T0* T1260f12(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T1244f16(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T405f18(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1571f17(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1570f17(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T359f15(TC* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T334f15(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1569f18(TC* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T1074f18(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1568f18(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1566f19(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1565f19(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T1558f18(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T2041f7(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T2041f10(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T360f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T360f5(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_agent_type */
extern T1 T502f66(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_agent_type */
extern T1 T501f66(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T310f63(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T396f65(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T229f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T273f46(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T242f47(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T273f45(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T242f46(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.actual_argument_count */
extern T6 T2057f14(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.actual_argument_count */
extern T6 T423f15(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument_count */
extern T6 T2130f17(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument_count */
extern T6 T2129f17(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument_count */
extern T6 T2128f13(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.count */
extern T6 T2099f1(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.count */
extern T6 T1102f3(TC* ac, T0* C);
/* ET_IDENTIFIER.actual_argument_count */
extern T6 T189f65(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1564f10(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1563f10(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1562f10(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument_count */
extern T6 T1561f10(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument_count */
extern T6 T454f18(TC* ac, T0* C);
/* ET_VERBATIM_STRING.actual_argument_count */
extern T6 T1560f12(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument_count */
extern T6 T1559f12(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T1557f10(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.actual_argument_count */
extern T6 T1625f9(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.actual_argument_count */
extern T6 T1337f19(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.actual_argument_count */
extern T6 T1085f23(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.actual_argument_count */
extern T6 T1624f9(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.actual_argument_count */
extern T6 T702f13(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.actual_argument_count */
extern T6 T1623f16(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.actual_argument_count */
extern T6 T1612f9(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T774f10(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T1631f19(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T1630f21(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument_count */
extern T6 T1629f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T1628f21(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T1627f23(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument_count */
extern T6 T1626f22(TC* ac, T0* C);
/* ET_CALL_AGENT.actual_argument_count */
extern T6 T1118f13(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.actual_argument_count */
extern T6 T1353f15(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.actual_argument_count */
extern T6 T370f7(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.actual_argument_count */
extern T6 T1287f16(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument_count */
extern T6 T1315f10(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.actual_argument_count */
extern T6 T1115f11(TC* ac, T0* C);
/* ET_OBJECT_TEST.actual_argument_count */
extern T6 T394f6(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.actual_argument_count */
extern T6 T1622f9(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.actual_argument_count */
extern T6 T1621f8(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.actual_argument_count */
extern T6 T1620f10(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T1619f9(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.actual_argument_count */
extern T6 T764f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.actual_argument_count */
extern T6 T1616f9(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.actual_argument_count */
extern T6 T1615f9(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.actual_argument_count */
extern T6 T1614f9(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.actual_argument_count */
extern T6 T1613f9(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.actual_argument_count */
extern T6 T1611f13(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.actual_argument_count */
extern T6 T1350f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument_count */
extern T6 T363f13(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.actual_argument_count */
extern T6 T1260f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.actual_argument_count */
extern T6 T1244f15(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.actual_argument_count */
extern T6 T405f17(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T1571f16(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.actual_argument_count */
extern T6 T1570f16(TC* ac, T0* C);
/* ET_CURRENT.actual_argument_count */
extern T6 T359f14(TC* ac, T0* C);
/* ET_RESULT.actual_argument_count */
extern T6 T334f14(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.actual_argument_count */
extern T6 T1569f17(TC* ac, T0* C);
/* ET_VOID.actual_argument_count */
extern T6 T1074f17(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.actual_argument_count */
extern T6 T1568f17(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument_count */
extern T6 T1566f18(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.actual_argument_count */
extern T6 T1565f18(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.actual_argument_count */
extern T6 T1558f17(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.count */
extern T6 T2041f1(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.count */
extern T6 T360f1(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T2130f22(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments */
extern T0* T959f3(TC* ac, T0* C);
/* ET_CALL_AGENT.arguments */
extern T0* T1118f5(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1621f10(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.right */
extern T0* T1616f4(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments */
extern T0* T1115f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T363f3(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.dynamic_feature */
extern T0* T303f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T303f10(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T2130f5(TC* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T189f43(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T959f6(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T2082f43(TC* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T1118f28(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1621f11(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T1050f24(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T1058f24(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T1071f97(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1616f11(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1618f15(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1617f15(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T1115f9(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T662f97(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T363f6(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T304f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T304f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T236f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T74f568(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f568ot1(TC* ac, T0* a1);
extern T1 T74f568ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T74f573(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.name */
extern T0* T2040f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T361f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.name */
extern T0* T1601f4(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T304f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T304f17ot1(TC* ac, T0* a1);
extern T1 T304f17ot2(TC* ac, T0* a1);
extern T1 T304f17ot3(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1601f19(TC* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1601f18(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T1115f23(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T363f24(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.arguments */
extern T0* T2040f3(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T361f3(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1601f15(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.dynamic_feature */
extern T0* T304f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T502f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure */
extern void T502f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_any_copy */
extern T1 T273f31(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_any_copy */
extern T1 T242f24(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T502f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.seeded_procedure */
extern T0* T78f185(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T264f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T501f43(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure */
extern void T501f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T501f57(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T236f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T74f132(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T242f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1541c15(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_expanded */
extern T1 T400f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_expanded */
extern T1 T260f18(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.is_empty */
extern T1 T353f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T271f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T501f57p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T310f45(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure */
extern void T310f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T310f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T236f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put_reference */
extern void T74f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T77f96(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1590f33(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T521f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1589f38(TC* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T524f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T310f29p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T396f45(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure */
extern void T396f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T396f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_builtin_special_extend */
extern T1 T242f36(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_special_put */
extern T1 T242f35(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T396f30p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T229f37(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure */
extern void T229f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.new_dynamic_procedure */
extern T0* T229f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T304f8(TC* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T2040f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T361f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1601f16(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1541f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1541f17ot1(TC* ac, T0* a1);
extern T1 T1541f17ot2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T69f46(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.is_ise */
extern T1 T265f48(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1541f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1541f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T520f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_types */
extern T0* T520f4(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.dynamic_types */
extern T0* T400f21(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T502f63(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T501f63(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T310f60(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T396f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_types */
extern T0* T229f59(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T348f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T348f15(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T520f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T520f17p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T520f17p1ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T520f12(TC* ac, T0* C, T0* a1);
extern T1 T520f12ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T520f12p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T520f13(TC* ac, T0* C, T0* a1);
extern T1 T520f13ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T520f13p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T502f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T501f84(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T310f85(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T396f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.put_type_from_type_set */
extern void T229f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.put_type_from_type_set */
extern void T400f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T520f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1432f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1797f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1796f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1796f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1432f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1797c3(TC* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1432f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1797f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1796f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1432f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1432f7(TC* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1432f3(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1432f5(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1432f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1432c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1797f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1796c5(TC* ac, T6 a1);
/* ET_DYNAMIC_SECONDARY_TYPE.put_target */
extern void T400f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_never_void */
extern T1 T400f15(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T502f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T502f37(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T501f83(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T501f37(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T310f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T310f34(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T396f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T396f36(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.put_target */
extern void T229f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.is_never_void */
extern T1 T229f27(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T502f68(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T501f29(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T310f64(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T396f67(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T229f47(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.static_type */
extern T0* T1541f1(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.static_type */
extern T0* T348f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.static_type */
extern T0* T520f1(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T502f52(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T501f53(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T310f55(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T396f56(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.static_type */
extern T0* T229f54(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.static_type */
extern T0* T400f6(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T230f12(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T273f35(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T501f38(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T310f43(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T396f43(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T229f50(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1590f37(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T521f41(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1589f39(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T524f45(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T273f26(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T242f34(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.register_feature_seeds */
extern void T502f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T502f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T502f55p1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].value */
extern T0* T641f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].item_storage_item */
extern T0* T641f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].position_of_key */
extern T6 T641f24(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.first_seed */
extern T6 T259f2(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_seed */
extern T6 T1587f2(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_seed */
extern T6 T1586f2(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_seed */
extern T6 T531f2(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_seed */
extern T6 T453f3(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_seed */
extern T6 T451f1(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_seed */
extern T6 T442f1(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_seed */
extern T6 T443f1(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_map */
extern T0* T641c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T641f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_sparse_container */
extern void T641f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].set_internal_cursor */
extern void T641f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].new_cursor */
extern T0* T641f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, INTEGER_32].make */
extern T0* T1475c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_slots */
extern void T641f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_clashes */
extern void T641f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_key_storage */
extern void T641f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, INTEGER_32].make_item_storage */
extern void T641f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T645f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].make_empty */
extern T0* T644c5(TC* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T230c10(TC* ac, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T259f36(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1587f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1586f36(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T531f35(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T453f53(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T451f49(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_attribute */
extern T1 T442f48(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_attribute */
extern T1 T443f50(TC* ac, T0* C);
/* ET_QUERY_LIST.item */
extern T0* T263f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T501f82(TC* ac, T0* C, T0* a1);
extern T1 T501f82ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T501f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T310f83(TC* ac, T0* C, T0* a1);
extern T1 T310f83ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T310f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T396f85(TC* ac, T0* C, T0* a1);
extern T1 T396f85ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T396f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T229f82(TC* ac, T0* C, T0* a1);
extern T1 T229f82ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T229f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T236f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T74f128(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T74f131(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T230f3(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attribute_count */
extern T6 T502f5(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attribute_count */
extern T6 T501f5(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attribute_count */
extern T6 T310f5(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attribute_count */
extern T6 T396f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T229f2(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T68f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T68f110(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_type */
extern T0* T502f10(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_type */
extern T0* T501f10(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_type */
extern T0* T310f9(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_type */
extern T0* T396f9(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T229f9(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T68f98(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T236f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T74f124(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.meta_type */
extern T0* T502f9(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.meta_type */
extern T0* T501f9(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.meta_type */
extern T0* T310f10(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.meta_type */
extern T0* T396f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T229f10(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.meta_type */
extern T0* T400f2(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T68f108(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T68f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T502f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T501f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T310f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T396f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_meta_type */
extern void T229f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.set_meta_type */
extern void T400f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_primary_type */
extern T0* T68f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T68f97(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T68f107(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T236f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T275f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T275f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T275f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T983f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T983f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T275f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T983f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T275f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T275f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T275f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T275f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T275f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T275f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T983f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T275f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T275f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T275f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T983f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T275f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T74f109(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T68f106(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T68f105(TC* ac, T0* C, T0* a1);
extern T1 T68f105ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T502f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T501f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T502f80(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T230f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T501f80(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T310f82(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T396f84(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T229f81(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_predicate_class */
extern T1 T78f80(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T68f104(TC* ac, T0* C, T0* a1);
extern T1 T68f104ot1(TC* ac, T0* a1);
/* ET_CLASS.is_function_class */
extern T1 T78f79(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T68f103(TC* ac, T0* C, T0* a1);
extern T1 T68f103ot1(TC* ac, T0* a1);
/* ET_CLASS.is_procedure_class */
extern T1 T78f78(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T68f102(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T78f77(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T68f101(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T78f76(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T68f100(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T78f75(TC* ac, T0* C);
/* ET_CLASS.canonical_to_text */
extern T0* T78f133(TC* ac, T0* C);
/* ET_TUPLE_TYPE.canonical_to_text */
extern T0* T260f16(TC* ac, T0* C);
/* ET_CLASS_TYPE.canonical_to_text */
extern T0* T76f13(TC* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T78f97(TC* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T78f94(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T68f96(TC* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T78f111(TC* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T78f109(TC* ac, T0* C);
/* ET_CLASS.process */
extern void T78f273(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1420f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1420f8(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1420f9(TC* ac, T0* C, T0* a1);
extern T1 T1420f9ot1(TC* ac, T0* a1);
extern T1 T1420f9ot2(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1576f98(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1407f22(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1391f42(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1420f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1406f23(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1390f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1693f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1692f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1691f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1690f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1413f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1412f31(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1405f33(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1404f23(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1403f20(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1402f23(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T277f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T958f95(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1420f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1407f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1406f21(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1391f34(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1390f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1693f16(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1692f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1691f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1690f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1413f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1412f30(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1405f32(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1404f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1403f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1402f22(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T277f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1600f94(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1407f21(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1391f41(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1391f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1391f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc1a_error */
extern void T59f598(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T59f213(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T59f214(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T59f193(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T59f195(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vggc1a */
extern T0* T852c1270(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T852f917(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1600f17(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1600f89(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1600f45(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1598f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1599f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1599f42(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1576f94(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1576f31(TC* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T189f44(TC* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T748f65(TC* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T748f112(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T326f29(TC* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T326f31(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T326f38(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T326f45(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T326f37(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T326f56(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T326f36(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T326f55(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T326f54(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T326f53(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T326f52(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T326f51(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T326f50(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T326f49(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T326f48(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T326f47(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T326f46(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T326f44(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T326f43(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T326f42(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T326f41(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T326f40(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T326f39(TC* ac, T0* C);
/* UC_STRING.as_upper */
extern T0* T329f66(TC* ac, T0* C);
/* UC_STRING.to_upper */
extern void T329f110(TC* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f41(TC* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f81(TC* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f82(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CHARACTER_8.upper */
extern T2 T2f24(TC* ac, volatile T2* C);
/* CHARACTER_8.upper_value */
extern T0* T2f30(TC* ac, volatile T2* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T958f91(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T958f32(TC* ac, T0* C);
/* ET_CLASS.append_to_string */
extern void T78f276(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T642f32(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1576f75(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T958f77(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T642f22(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1576f42(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1576f30(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1576f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T958f43(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T958f28(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T958f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T642f5(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T642f11(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_to_string */
extern void T260f129(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T2026f25(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1846f5(TC* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T189f62(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1600f38(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1599f35(TC* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1598f35(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1596f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T248f31(TC* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T499f26(TC* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T260f56(TC* ac, T0* C);
/* ET_CLASS.label */
extern T0* T78f150(TC* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T76f52(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T2026f18(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T500f16(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T2025f18(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T246f5(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1598f37(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1600f41(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1599f37(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1846f7(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1596f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T248f11(TC* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T499f16(TC* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T260f48(TC* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T78f136(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T76f47(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T246f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T246f30(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T2026f4(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T246f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T248f84(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T248f38(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_to_string */
extern void T76f137(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T500f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T2025f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T500f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T2025f17(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T499f86(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.append_to_string_with_space */
extern void T386f34(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.expandedness_text */
extern T0* T386f12(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T386f15(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_expandedness_mark */
extern T1 T386f17(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_reference */
extern T1 T386f24(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expanded */
extern T1 T386f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.separateness_text */
extern T0* T386f11(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_separateness_mark */
extern T1 T386f16(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate */
extern T1 T386f22(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.attachment_text */
extern T0* T386f10(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T386f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_question_mark */
extern T1 T386f21(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_bang */
extern T1 T386f20(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_detachable */
extern T1 T386f19(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attached */
extern T1 T386f18(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.append_to_string_with_space */
extern void T492f25(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.expandedness_text */
extern T0* T492f16(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.tokens */
extern T0* T492f18(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_expandedness_mark */
extern T1 T492f20(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.separateness_text */
extern T0* T492f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_separateness_mark */
extern T1 T492f19(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_separateness_mark */
extern T1 T319f29(TC* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T319f15(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separate_mark */
extern T1 T492f5(TC* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T319f6(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.attachment_text */
extern T0* T492f14(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_explicit_attachment_mark */
extern T1 T492f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_attachment_mark */
extern T1 T1071f96(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_attachment_mark */
extern T1 T662f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_attachment_mark */
extern T1 T1082f4(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_attachment_mark */
extern T1 T661f60(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_attachment_mark */
extern T1 T319f28(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string_with_space */
extern void T1071f151(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.expandedness_text */
extern T0* T1071f83(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_expandedness_mark */
extern T1 T1071f102(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.separateness_text */
extern T0* T1071f82(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_explicit_separateness_mark */
extern T1 T1071f101(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate */
extern T1 T1071f25(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separate_mark */
extern T1 T1071f9(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.attachment_text */
extern T0* T1071f81(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string_with_space */
extern void T662f132(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.expandedness_text */
extern T0* T662f83(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T662f102(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.separateness_text */
extern T0* T662f82(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_explicit_separateness_mark */
extern T1 T662f101(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T662f28(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T662f16(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.attachment_text */
extern T0* T662f81(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string_with_space */
extern void T1082f48(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.expandedness_text */
extern T0* T1082f28(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_expandedness_mark */
extern T1 T1082f32(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.separateness_text */
extern T0* T1082f27(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_explicit_separateness_mark */
extern T1 T1082f31(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T1082f19(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T1082f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.attachment_text */
extern T0* T1082f26(TC* ac, T0* C);
/* ET_SYMBOL.append_to_string_with_space */
extern void T661f107(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.expandedness_text */
extern T0* T661f84(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_expandedness_mark */
extern T1 T661f89(TC* ac, T0* C);
/* ET_SYMBOL.separateness_text */
extern T0* T661f83(TC* ac, T0* C);
/* ET_SYMBOL.is_explicit_separateness_mark */
extern T1 T661f88(TC* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T661f77(TC* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T661f65(TC* ac, T0* C);
/* ET_SYMBOL.attachment_text */
extern T0* T661f82(TC* ac, T0* C);
/* ET_KEYWORD.append_to_string_with_space */
extern void T319f49(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.expandedness_text */
extern T0* T319f26(TC* ac, T0* C);
/* ET_KEYWORD.is_explicit_expandedness_mark */
extern T1 T319f30(TC* ac, T0* C);
/* ET_KEYWORD.separateness_text */
extern T0* T319f25(TC* ac, T0* C);
/* ET_KEYWORD.attachment_text */
extern T0* T319f24(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1599f46(TC* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1598f47(TC* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T499f43(TC* ac, T0* C);
/* ET_CLASS.upper_name */
extern T0* T78f178(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T2082f41(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T1068f18(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T454f40(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1564f17(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1563f17(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1562f17(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1561f17(TC* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1560f18(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1559f18(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1557f16(TC* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T1050f27(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T1032f12(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T1029f11(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T1058f12(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1571f7(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1570f7(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1569f6(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1568f6(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1566f8(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1565f8(TC* ac, T0* C);
/* ET_RESULT.column */
extern T6 T334f11(TC* ac, T0* C);
/* ET_VOID.column */
extern T6 T1074f6(TC* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T359f10(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T1558f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T1082f35(TC* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T319f20(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T1071f12(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T662f18(TC* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T661f66(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T198f7(TC* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T189f49(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T2082f40(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T1068f16(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T454f39(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1564f16(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1563f16(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1562f16(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1561f16(TC* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1560f17(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1559f17(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1557f15(TC* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T1050f26(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T1032f11(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T1029f10(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T1058f11(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1571f6(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1570f6(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1569f5(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1568f5(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1566f7(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1565f7(TC* ac, T0* C);
/* ET_RESULT.line */
extern T6 T334f10(TC* ac, T0* C);
/* ET_VOID.line */
extern T6 T1074f5(TC* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T359f5(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T1558f7(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T1082f34(TC* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T319f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T1071f11(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T662f7(TC* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T661f6(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T198f6(TC* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T189f48(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.filename */
extern T0* T852f21(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_cluster */
extern T1 T870f45(TC* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T498f9(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T316f10(TC* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T852f19(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T852f12(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T198c12(TC* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T852f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1600f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1564f18(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1563f18(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1562f18(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1561f18(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T454f41(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1560f19(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1559f19(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1557f17(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1571f8(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1570f8(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1569f7(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1568f7(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1566f9(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1565f9(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T1558f9(TC* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T359f12(TC* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T189f56(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1600f40(TC* ac, T0* C);
/* ET_LIKE_FEATURE.like_keyword */
extern T0* T1598f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.like_keyword */
extern T0* T1599f3(TC* ac, T0* C);
/* ET_LIKE_CURRENT.like_keyword */
extern T0* T499f2(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T198f8(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T1082f33(TC* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T319f37(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T1071f20(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T662f96(TC* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T661f73(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T386f26(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T77f844(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.position */
extern T0* T492f23(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T1071f5(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T662f5(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T1082f30(TC* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T661f61(TC* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T319f31(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_implicit_mark */
extern T1 T386f25(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T492f22(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_implicit_mark */
extern T1 T1071f84(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T662f84(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T1082f29(TC* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T661f85(TC* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T319f35(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1599f41(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1576f67(TC* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T189f32(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T958f69(TC* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T260f74(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T248f42(TC* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1598f44(TC* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T499f40(TC* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T359f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T59f186(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc1a_error */
extern void T41f598(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T41f213(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T41f214(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_info */
extern void T41f193(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T41f195(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vggc1_error */
extern T1 T41f186(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1391f12(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1391f24(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1420f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1406f20(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1390f19(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1390f22(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1390f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T59f597(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T852c1269(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T59f185(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T41f597(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T41f185(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1390f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1390f12(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1693f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1693f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1690f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1690f15(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T277f29(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T277f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].wipe_out */
extern void T676f14(TC* ac, T0* C);
/* SPECIAL [ET_ADAPTED_CLASS].keep_head */
extern void T1493f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].set_count */
extern void T1493f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_all_cursors_after */
extern void T676f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_next_cursor */
extern void T1494f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_after */
extern void T1494f6(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T247f58(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T247f60(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T665f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T251f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T251f10(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T247f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T665c3(TC* ac);
/* ET_TYPE_CHECKER.tokens */
extern T0* T277f19(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.keep_first */
extern void T247f66(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T247f68(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T247f11(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T247f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0e_error */
extern void T59f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0e */
extern T0* T852c1069(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T259f64(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1587f52(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1586f54(TC* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T531f55(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T453f30(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T451f29(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T442f66(TC* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T443f28(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T260f29(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T76f29(TC* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T78f72(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_constraint_type */
extern T0* T260f114(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type */
extern T0* T1924f1(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_type */
extern T0* T76f106(TC* ac, T0* C);
/* ET_CLASS.type_constraint_type */
extern T0* T78f226(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T2082f33(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T2082f38(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T2082f39(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1618f16(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1618f18(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1618f14(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1617f16(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1617f18(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1617f14(TC* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T1050f25(TC* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T1050f29(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T1058f25(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T1058f27(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T1058f7(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T1071f98(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T1071f103(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_not_symbol_name */
extern T0* T77f894(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_xor_symbol_name */
extern T0* T77f892(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_else_symbol_name */
extern T0* T77f888(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_or_symbol_name */
extern T0* T77f887(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_implies_symbol_name */
extern T0* T77f882(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_then_symbol_name */
extern T0* T77f877(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_and_symbol_name */
extern T0* T77f876(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T662f98(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T662f103(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T2082f35(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1618f41(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1617f41(TC* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T1050f12(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T1058f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T59f97(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgmc0e_error */
extern void T41f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vgmc_error */
extern T1 T41f97(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T247f38(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T247f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T247f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T247f15ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T247f57(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T665f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T251f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T251f9(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1576f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f15ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.root_context */
extern T0* T260f15(TC* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T76f20(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.root_context */
extern T0* T247f1(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1576f32(TC* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T260f35(TC* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T260f36(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T247c56(TC* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T247f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T665f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T251c5(TC* ac, T6 a1);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T76f37(TC* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T76f38(TC* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T78f85(TC* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T78f86(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T247f7(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1576f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f14ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T958f21(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f21ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T958f45(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1576f33(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T958f34(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1600f32(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f32ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1600f46(TC* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T386f13(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T77f29(TC* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5, T1 a6);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T77f68(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T386c27(TC* ac);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T77f67(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T386f33(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T77f66(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T386f32(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_type_mark */
extern T0* T77f65(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_non_separate_mark */
extern void T386f29(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_reference_type_mark */
extern T0* T77f64(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_non_separate_expanded_type_mark */
extern T0* T77f63(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T77f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T386f30(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T77f62(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T77f61(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T77f59(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T386f28(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T77f58(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_reference_type_mark */
extern T0* T77f57(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_expanded_type_mark */
extern T0* T77f56(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T77f55(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T77f54(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T77f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T77f25(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T386f31(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T77f52(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T77f51(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_type_mark */
extern T0* T77f50(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_reference_type_mark */
extern T0* T77f49(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_non_separate_expanded_type_mark */
extern T0* T77f48(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T77f24(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T77f47(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T77f46(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separate_mark */
extern T1 T386f2(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T492f4(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_non_separate_mark */
extern T1 T492f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T1082f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_non_separate_mark */
extern T1 T1082f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_separateness_mark */
extern T1 T1071f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_non_separate_mark */
extern T1 T1071f21(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T662f20(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_non_separate_mark */
extern T1 T662f25(TC* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T661f68(TC* ac, T0* C);
/* ET_SYMBOL.is_non_separate_mark */
extern T1 T661f74(TC* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T319f5(TC* ac, T0* C);
/* ET_KEYWORD.is_non_separate_mark */
extern T1 T319f14(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T386f9(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T492f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T1082f9(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_expandedness_mark */
extern T1 T1071f14(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T662f19(TC* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T661f67(TC* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T319f23(TC* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T386f7(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T492f21(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.overridden_type_mark */
extern T0* T1071f6(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T662f13(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T1082f5(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T661f62(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T319f27(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.adapted_base_class_with_seeded_feature */
extern T0* T1598f46(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS.adapted_base_class_with_seeded_feature */
extern T0* T78f219(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T260f76(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T248f44(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T248f44ot1(TC* ac, T0* a1);
extern T1 T248f44ot2(TC* ac, T0* a1);
extern T1 T248f44ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T248f8(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T1576f38(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1576f38ot1(TC* ac, T0* a1);
extern T1 T1576f38ot2(TC* ac, T0* a1);
extern T1 T1576f38ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_seeded_feature */
extern T0* T958f39(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T958f39ot1(TC* ac, T0* a1);
extern T1 T958f39ot2(TC* ac, T0* a1);
extern T1 T958f39ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T76f78(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T261f6(TC* ac, T0* C, T6 a1);
/* ET_CLASS.seeded_feature */
extern T0* T78f203(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.index */
extern T6 T1598f41(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1598f40(TC* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T189f18(TC* ac, T0* C);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1598f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T1600f7(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1600f7ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1600f43(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T1599f45(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1599f45ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T1576f37(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f37ot1(TC* ac, T0* a1);
extern T1 T1576f37ot2(TC* ac, T0* a1);
extern T1 T1576f37ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.named_feature */
extern T0* T260f122(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_procedure */
extern T0* T260f125(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T78f103(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T264f5(TC* ac, T0* C, T0* a1);
extern T1 T264f5ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME_LIST.has_call_name */
extern T1 T979f4(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1592f17(TC* ac, T0* C, T0* a1);
extern T1 T1592f17ot1(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1592f7(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T1592f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T1050f53(TC* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T1050f9(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1592f51(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1592f9(TC* ac, T0* C);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T1107f15(TC* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not_symbol */
extern T1 T1618f40(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not_symbol */
extern T1 T1617f40(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not_symbol */
extern T1 T1050f34(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not_symbol */
extern T1 T1058f36(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not_symbol */
extern T1 T1071f109(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not_symbol */
extern T1 T662f126(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not_symbol */
extern T1 T2082f32(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not_symbol */
extern T1 T1592f48(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not_symbol */
extern T1 T1107f78(TC* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T1107f79(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not_symbol */
extern T1 T189f89(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1618f39(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1617f39(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T1050f33(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T1058f35(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T1071f108(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T662f125(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T2082f31(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1592f47(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T1107f77(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T189f88(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1618f38(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1617f38(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T1050f52(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T1058f54(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T1071f128(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T662f124(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T2082f30(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1592f46(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T1107f76(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T189f87(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1618f37(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1617f37(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T1050f51(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T1058f53(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T1071f127(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T662f123(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T2082f29(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1592f45(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T1107f75(TC* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T189f86(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1618f36(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1617f36(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T1050f50(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T1058f52(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T1071f126(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T662f122(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T2082f28(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1592f44(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T1107f74(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T189f85(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor_symbol */
extern T1 T1618f35(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor_symbol */
extern T1 T1617f35(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor_symbol */
extern T1 T1050f49(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor_symbol */
extern T1 T1058f51(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor_symbol */
extern T1 T1071f125(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor_symbol */
extern T1 T662f121(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor_symbol */
extern T1 T2082f27(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor_symbol */
extern T1 T1592f43(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor_symbol */
extern T1 T1107f73(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor_symbol */
extern T1 T189f84(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1618f34(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1617f34(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T1050f48(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T1058f50(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T1071f124(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T662f120(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T2082f26(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1592f42(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T1107f72(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T189f83(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1618f33(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1617f33(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T1050f47(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T1058f49(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T1071f123(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T662f119(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T2082f25(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1592f41(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T1107f71(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T189f82(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1618f32(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1617f32(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T1050f46(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T1058f48(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T1071f122(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T662f118(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T2082f24(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1592f40(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T1107f70(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T189f81(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1618f31(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1617f31(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T1050f45(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T1058f47(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T1071f121(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T662f117(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T2082f23(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1592f39(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T1107f69(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T189f80(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else_symbol */
extern T1 T1618f10(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else_symbol */
extern T1 T1617f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else_symbol */
extern T1 T1050f19(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else_symbol */
extern T1 T1058f19(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else_symbol */
extern T1 T1071f92(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else_symbol */
extern T1 T662f92(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else_symbol */
extern T1 T2082f22(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else_symbol */
extern T1 T1592f38(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else_symbol */
extern T1 T1107f68(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else_symbol */
extern T1 T189f39(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_else */
extern T1 T1618f5(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1617f5(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T1050f14(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T1058f14(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T1071f87(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T662f87(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T2082f21(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1592f37(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T1107f67(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T189f34(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or_symbol */
extern T1 T1618f13(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_symbol */
extern T1 T1617f13(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_symbol */
extern T1 T1050f22(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_symbol */
extern T1 T1058f22(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_symbol */
extern T1 T1071f95(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_symbol */
extern T1 T662f95(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_symbol */
extern T1 T2082f20(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_symbol */
extern T1 T1592f36(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_symbol */
extern T1 T1107f66(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_symbol */
extern T1 T189f42(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1618f8(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1617f8(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T1050f17(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T1058f17(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T1071f90(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T662f90(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T2082f19(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1592f35(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T1107f65(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T189f37(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1618f30(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1617f30(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T1050f44(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T1058f46(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T1071f120(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T662f116(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T2082f18(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1592f34(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T1107f64(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T189f79(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1618f29(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1617f29(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T1050f43(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T1058f45(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T1071f119(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T662f115(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T2082f17(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1592f33(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T1107f63(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T189f78(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1618f28(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1617f28(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T1050f42(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T1058f44(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T1071f118(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T662f114(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T2082f16(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1592f32(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T1107f62(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T189f77(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1618f27(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1617f27(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T1050f41(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T1058f43(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T1071f117(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T662f113(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T2082f15(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1592f31(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T1107f61(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T189f76(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies_symbol */
extern T1 T1618f11(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies_symbol */
extern T1 T1617f11(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies_symbol */
extern T1 T1050f20(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies_symbol */
extern T1 T1058f20(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies_symbol */
extern T1 T1071f93(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies_symbol */
extern T1 T662f93(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies_symbol */
extern T1 T2082f14(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies_symbol */
extern T1 T1592f30(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies_symbol */
extern T1 T1107f60(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies_symbol */
extern T1 T189f40(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1618f6(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1617f6(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T1050f15(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T1058f15(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T1071f88(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T662f88(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T2082f13(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1592f29(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T1107f59(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T189f35(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1618f26(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1617f26(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T1050f40(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T1058f42(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T1071f116(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T662f112(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T2082f12(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1592f28(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T1107f58(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T189f75(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1618f25(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1617f25(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T1050f39(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T1058f41(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T1071f115(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T662f111(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T2082f11(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1592f27(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T1107f57(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T189f74(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1618f24(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1617f24(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T1050f38(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T1058f40(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T1071f114(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T662f110(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T2082f10(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1592f26(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T1107f56(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T189f73(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1618f23(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1617f23(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T1050f37(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T1058f39(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T1071f113(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T662f109(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T2082f9(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1592f25(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T1107f55(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T189f72(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then_symbol */
extern T1 T1618f9(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then_symbol */
extern T1 T1617f9(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then_symbol */
extern T1 T1050f18(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then_symbol */
extern T1 T1058f18(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then_symbol */
extern T1 T1071f91(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then_symbol */
extern T1 T662f91(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then_symbol */
extern T1 T2082f8(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then_symbol */
extern T1 T1592f24(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then_symbol */
extern T1 T1107f54(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then_symbol */
extern T1 T189f38(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1618f4(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_then */
extern T1 T1617f4(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T1050f13(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T1058f13(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T1071f86(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T662f86(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T2082f7(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1592f23(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T1107f53(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T189f33(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_symbol */
extern T1 T1618f12(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and_symbol */
extern T1 T1617f12(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_symbol */
extern T1 T1050f21(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_symbol */
extern T1 T1058f21(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_symbol */
extern T1 T1071f94(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_symbol */
extern T1 T662f94(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_symbol */
extern T1 T2082f6(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_symbol */
extern T1 T1592f22(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_symbol */
extern T1 T1107f52(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_symbol */
extern T1 T189f41(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1618f7(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1617f7(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T1050f16(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T1058f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T1071f89(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T662f89(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T2082f5(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1592f21(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T1107f51(TC* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T189f36(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1618f22(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1617f22(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T1050f36(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T1058f38(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T1071f112(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T662f108(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_parenthesis */
extern T1 T2082f4(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1592f13(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T1107f11(TC* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T189f71(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1618f21(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1617f21(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T1050f35(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T1058f37(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T1071f111(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bracket */
extern T1 T662f107(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T2082f45(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1592f12(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T1107f10(TC* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T189f70(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_names */
extern T0* T1590f54(TC* ac, T0* C);
/* ET_IDENTIFIER.alias_names */
extern T0* T189f57(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_names */
extern T0* T521f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_names */
extern T0* T1589f47(TC* ac, T0* C);
/* ET_DO_PROCEDURE.alias_names */
extern T0* T524f38(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.hash_code */
extern T6 T1590f11(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.hash_code */
extern T6 T521f10(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.hash_code */
extern T6 T1589f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE.hash_code */
extern T6 T524f12(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_feature */
extern T0* T1924f11(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_procedure */
extern T0* T1924f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_old_name */
extern T6 T1161f9(TC* ac, T0* C, T0* a1);
/* ET_RENAME.rename_pair */
extern T0* T1419f5(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.rename_pair */
extern T0* T1161f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.item */
extern T0* T1161f10(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.index_of_new_name */
extern T6 T1161f8(TC* ac, T0* C, T0* a1);
extern T1 T1161f8ot1(TC* ac, T0* a1);
/* ET_CLASS.named_feature */
extern T0* T78f181(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_feature */
extern T0* T76f116(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_procedure */
extern T0* T76f122(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.adapted_base_class_with_named_feature */
extern T0* T958f38(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f38ot1(TC* ac, T0* a1);
extern T1 T958f38ot2(TC* ac, T0* a1);
extern T1 T958f38ot3(TC* ac, T0* a1);
/* ET_CLASS.adapted_base_class_with_named_feature */
extern T0* T78f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.adapted_base_class_with_named_feature */
extern T0* T260f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.adapted_base_class_with_named_feature */
extern T0* T248f43(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f43ot1(TC* ac, T0* a1);
extern T1 T248f43ot2(TC* ac, T0* a1);
extern T1 T248f43ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.adapted_base_class_with_named_feature */
extern T0* T76f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1599f40(TC* ac, T0* C);
/* ET_LIKE_CURRENT.adapted_base_class_with_seeded_feature */
extern T0* T499f42(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T247f42(TC* ac, T0* C, T6 a1);
extern T1 T247f42ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_seeded_feature */
extern T0* T1548f29(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T247f36(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T260f95(TC* ac, T0* C, T6 a1);
/* ET_CLASS.context_adapted_base_class_with_seeded_feature */
extern T0* T78f229(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T76f97(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.adapted_base_class_with_named_feature */
extern T0* T1598f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.adapted_base_class_with_named_feature */
extern T0* T1600f6(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f6ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.adapted_base_class_with_named_feature */
extern T0* T1599f44(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f44ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.adapted_base_class_with_named_feature */
extern T0* T499f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T247f41(TC* ac, T0* C, T0* a1);
extern T1 T247f41ot1(TC* ac, T0* a1);
/* ET_LIKE_N.adapted_base_class_with_named_feature */
extern T0* T1548f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T260f94(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_adapted_base_class_with_named_feature */
extern T0* T78f228(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T76f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1599f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f27ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1599f43(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1598f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1598f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T499f10(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T247f30(TC* ac, T0* C, T0* a1);
extern T1 T247f30ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1548f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.tokens */
extern T0* T1548f14(TC* ac, T0* C);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1548f13(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T260f42(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T78f119(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T76f42(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T499f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T78f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T260f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T76f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T958f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T248f34(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f34ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T248f7(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1576f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f23ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T958f25(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f25ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T260f101(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_attached */
extern T1 T78f260(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_attached */
extern T1 T1924f7(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_attached_type */
extern T1 T1743f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T76f105(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.is_type_expanded */
extern T1 T1924f6(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_expanded_type */
extern T1 T1743f9(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1600f31(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f31ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1599f26(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f26ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1598f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T499f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T260f70(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T76f71(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T78f198(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T247f34(TC* ac, T0* C, T0* a1);
extern T1 T247f34ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1548f24(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T248f33(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f33ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1576f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f27ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T247f5(TC* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T260f33(TC* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T76f34(TC* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T78f83(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T958f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f12ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1600f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1600f15ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T247f8(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1599f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1599f14ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1598f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T248f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f18ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T499f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T247f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T247f26ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1548f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T260f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T76f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T78f168(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T78f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T260f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T76f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T260f14(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T76f19(TC* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T78f130(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T247f19(TC* ac, T0* C);
extern T1 T247f19ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T260f51(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T260f57(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T260f57ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1576f60(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1576f16(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f16ot1(TC* ac, T0* a1);
extern T1 T1576f16ot2(TC* ac, T0* a1);
extern T1 T1576f16ot3(TC* ac, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T78f68(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make */
extern T0* T76c135(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make_generic */
extern T0* T76c134(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.overridden_type_mark */
extern T0* T78f91(TC* ac, T0* C, T0* a1);
/* ET_CLASS.tokens */
extern T0* T78f179(TC* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T78f95(TC* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T78f108(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T260f27(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T260f127(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T260c126(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T77f94(TC* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T260f24(TC* ac, T0* C);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T260f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T260f22(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T76f27(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T76f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.tokens */
extern T0* T76f17(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T76f15(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T248f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T248c83(TC* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T958f46(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1576f45(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T248f4(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.implementation_class */
extern T0* T958f3(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.implementation_class */
extern T0* T1576f5(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1600f9(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f9ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1599f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f22ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1598f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T248f6(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f6ot1(TC* ac, T0* a1);
extern T1 T248f6ot2(TC* ac, T0* a1);
extern T1 T248f6ot3(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T499f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T247f16(TC* ac, T0* C, T0* a1);
extern T1 T247f16ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1548f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T78f167(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T76f63(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T260f65(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T78f153(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T260f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T76f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T958f14(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f14ot1(TC* ac, T0* a1);
extern T1 T958f14ot2(TC* ac, T0* a1);
extern T1 T958f14ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T958f60(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1600f30(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1599f20(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1598f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T248f29(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T499f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T78f148(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T260f54(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T76f50(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T76f55(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T76f65(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T76f65ot1(TC* ac, T0* a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T78f157(TC* ac, T0* C, T6 a1);
/* ET_CLASS.base_type_actual */
extern T0* T78f182(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T247f22(TC* ac, T0* C, T6 a1);
extern T1 T247f22ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1576f18(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1576f18ot1(TC* ac, T0* a1);
extern T1 T1576f18ot2(TC* ac, T0* a1);
extern T1 T1576f18ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T958f16(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T958f16ot1(TC* ac, T0* a1);
extern T1 T958f16ot2(TC* ac, T0* a1);
extern T1 T958f16ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1598f23(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1600f11(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1600f11ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1599f23(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T1599f23ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T499f33(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T1548f6(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T248f14(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T248f14ot1(TC* ac, T0* a1);
extern T1 T248f14ot2(TC* ac, T0* a1);
extern T1 T248f14ot3(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T260f50(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T260f45(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T260f53(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T76f54(TC* ac, T0* C);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T76f45(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T76f49(TC* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T78f156(TC* ac, T0* C);
/* ET_CLASS.base_type_actual_count */
extern T6 T78f145(TC* ac, T0* C, T0* a1);
/* ET_CLASS.formal_parameter_count */
extern T6 T78f152(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T247f21(TC* ac, T0* C);
extern T1 T247f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1576f17(TC* ac, T0* C, T0* a1);
extern T1 T1576f17ot1(TC* ac, T0* a1);
extern T1 T1576f17ot2(TC* ac, T0* a1);
extern T1 T1576f17ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T958f15(TC* ac, T0* C, T0* a1);
extern T1 T958f15ot1(TC* ac, T0* a1);
extern T1 T958f15ot2(TC* ac, T0* a1);
extern T1 T958f15ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1598f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1600f10(TC* ac, T0* C, T0* a1);
extern T1 T1600f10ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1599f11(TC* ac, T0* C, T0* a1);
extern T1 T1599f11ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T499f17(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1548f5(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T248f13(TC* ac, T0* C, T0* a1);
extern T1 T248f13ot1(TC* ac, T0* a1);
extern T1 T248f13ot2(TC* ac, T0* a1);
extern T1 T248f13ot3(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1576f44(TC* ac, T0* C, T0* a1);
/* ET_CLASS.ancestor */
extern T0* T78f155(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T318f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_unknown */
extern T1 T78f99(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T870f42(TC* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T498f10(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_unknown */
extern T1 T316f4(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T247f20(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T247f27(TC* ac, T0* C);
extern T1 T247f27ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1576f20(TC* ac, T0* C, T0* a1);
extern T1 T1576f20ot1(TC* ac, T0* a1);
extern T1 T1576f20ot2(TC* ac, T0* a1);
extern T1 T1576f20ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T958f18(TC* ac, T0* C, T0* a1);
extern T1 T958f18ot1(TC* ac, T0* a1);
extern T1 T958f18ot2(TC* ac, T0* a1);
extern T1 T958f18ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1598f25(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1600f16(TC* ac, T0* C, T0* a1);
extern T1 T1600f16ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1599f25(TC* ac, T0* C, T0* a1);
extern T1 T1599f25ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T499f6(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_base_class */
extern T0* T1548f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T78f151(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T248f19(TC* ac, T0* C, T0* a1);
extern T1 T248f19ot1(TC* ac, T0* a1);
extern T1 T248f19ot2(TC* ac, T0* a1);
extern T1 T248f19ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T76f8(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T260f5(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class */
extern T0* T260f3(TC* ac, T0* C);
/* ET_CLASS_TYPE.named_base_class */
extern T0* T76f4(TC* ac, T0* C);
/* ET_CLASS.named_base_class */
extern T0* T78f23(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T958f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f13ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1598f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1600f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1600f8ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1599f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1599f21ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T499f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T260f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T76f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T78f164(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1548f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T248f5(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f5ot1(TC* ac, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T247f65(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T247f9(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T247f10(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T247f62(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T77f243(TC* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T1548c43(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T77f260(TC* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T319c57(TC* ac);
/* ET_KEYWORD.make_token */
extern void T319f50(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T319f51(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T247f17(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T260f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1576f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f13ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T958f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f11ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1600f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1600f13ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1599f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1599f13ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1598f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T248f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f16ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T499f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T247f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T247f24ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1548f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T260f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T78f161(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T76f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T78f146(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T260f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T2026f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1576f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T958f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1600f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1599f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1598f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T248f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T499f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T78f190(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T260f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T246f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T260f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T247f6(TC* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T260f34(TC* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T78f84(TC* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T76f35(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T76f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T260f25(TC* ac, T0* C);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T78f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1576f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f12ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T958f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f10ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1600f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1600f12ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1599f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1599f12ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1598f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T248f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f15ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T499f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T247f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T247f23ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1548f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T260f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T78f160(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T76f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T78f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T642f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T76f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T78f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T76f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T78f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T260f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T76f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T500f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T2025f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.is_generic */
extern T1 T76f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T77f138(TC* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T499c85(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T77f75(TC* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T359c35(TC* ac);
/* ET_CURRENT.make_token */
extern void T359f38(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T359f39(TC* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T359f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.tokens */
extern T0* T499f13(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T247f18(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T247f61(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T247f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T665f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T251f4(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T247f12(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T301f11(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T77f148(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T77f135(TC* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T319c48(TC* ac);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T247f40(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T77f802(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T77f328(TC* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T319c68(TC* ac);
/* ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T301f7(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T247f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].item */
extern T0* T676f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].is_empty */
extern T1 T676f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T59f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T852c1068(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T59f96(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T41f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T41f96(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T59f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T852c1065(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.name */
extern T0* T1598f2(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T59f88(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T41f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T41f88(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1598f61(TC* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T78f247(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T642f23(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1576f73(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T958f75(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T260f90(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T2026f13(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T246f21(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T248f58(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T76f92(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T500f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T2025f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1600f60(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1599f63(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T499f57(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1600f97(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T189f124(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1599f100(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.named_query */
extern T0* T260f123(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.named_query */
extern T0* T1924f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_query */
extern T0* T76f117(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_query */
extern T0* T78f102(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T263f6(TC* ac, T0* C, T0* a1);
extern T1 T263f6ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.alias_names */
extern T0* T259f56(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_names */
extern T0* T1587f42(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_names */
extern T0* T1586f44(TC* ac, T0* C);
/* ET_DO_FUNCTION.alias_names */
extern T0* T531f42(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_names */
extern T0* T453f66(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_names */
extern T0* T451f62(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_names */
extern T0* T442f59(TC* ac, T0* C);
/* ET_ATTRIBUTE.alias_names */
extern T0* T443f61(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.hash_code */
extern T6 T259f11(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.hash_code */
extern T6 T1587f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.hash_code */
extern T6 T1586f12(TC* ac, T0* C);
/* ET_DO_FUNCTION.hash_code */
extern T6 T531f14(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.hash_code */
extern T6 T453f11(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.hash_code */
extern T6 T451f10(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.hash_code */
extern T6 T442f10(TC* ac, T0* C);
/* ET_ATTRIBUTE.hash_code */
extern T6 T443f9(TC* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T277f15(TC* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T277f26(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].first */
extern T0* T676f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.check_adapted_base_classes_validity */
extern void T277f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.check_adapted_base_classes_validity */
extern void T301f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T301f13ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0a_error */
extern void T59f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgmc0a */
extern T0* T852c1264(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgmc0a_error */
extern void T41f591(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgmc0d_error */
extern void T59f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0d */
extern T0* T852c1263(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0d_error */
extern void T41f590(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T6 a6, T0* a7);
/* ET_TUPLE_TYPE.adapted_class_base_type_index_of_label */
extern T6 T260f124(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T260f119(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T2026f22(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T189f68(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T246f26(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_type_index_of_label */
extern T6 T1924f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T78f261(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T642f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T76f132(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T500f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T2025f19(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.adapted_class_base_type_index_of_label */
extern T6 T76f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.adapted_class_base_type_index_of_label */
extern T6 T78f257(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T247f55(TC* ac, T0* C, T0* a1);
extern T1 T247f55ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1576f82(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f82ot1(TC* ac, T0* a1);
extern T1 T1576f82ot2(TC* ac, T0* a1);
extern T1 T1576f82ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T958f84(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f84ot1(TC* ac, T0* a1);
extern T1 T958f84ot2(TC* ac, T0* a1);
extern T1 T958f84ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1598f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1600f86(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f86ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1599f89(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f89ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T499f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1548f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T78f262(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T248f81(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f81ot1(TC* ac, T0* a1);
extern T1 T248f81ot2(TC* ac, T0* a1);
extern T1 T248f81ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T76f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T260f120(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgmc0c_error */
extern void T59f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0c */
extern T0* T852c1262(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1590f41(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T521f31(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1589f43(TC* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T524f33(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgmc0c_error */
extern void T41f589(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vgmc0b_error */
extern void T59f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0b */
extern T0* T852c1261(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0b_error */
extern void T41f588(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ADAPTED_BASE_CLASS_CHECKER.error_handler */
extern T0* T301f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].put_last */
extern void T676f17(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].force */
extern void T1491f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].fill_with */
extern void T1493f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_CLASS].extend */
extern void T1493f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove */
extern void T676f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_left */
extern void T676f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_cursors_left */
extern void T676f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].set_position */
extern void T1494f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].remove_last */
extern void T676f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].move_last_cursors_after */
extern void T676f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].keep_first */
extern void T676f15(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_fatal_error */
extern void T301f14(TC* ac, T0* C);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_class_interface_error_only */
extern void T301f12(TC* ac, T0* C, T1 a1);
/* ET_NESTED_TYPE_CONTEXT.add_adapted_base_classes_to_list */
extern void T247f67(TC* ac, T0* C, T0* a1);
extern T1 T247f67ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T1576f93(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f93ot1(TC* ac, T0* a1);
extern T1 T1576f93ot2(TC* ac, T0* a1);
extern T1 T1576f93ot3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].force_last */
extern void T676f23(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].resize */
extern void T676f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1491f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_CLASS].aliased_resized_area */
extern T0* T1493f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_capacity */
extern T6 T676f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].extendible */
extern T1 T676f10(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.add_adapted_base_classes_to_list */
extern void T958f90(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f90ot1(TC* ac, T0* a1);
extern T1 T958f90ot2(TC* ac, T0* a1);
extern T1 T958f90ot3(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.add_adapted_base_classes_to_list */
extern void T1598f103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.add_adapted_base_classes_to_list */
extern void T1600f98(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f98ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.add_adapted_base_classes_to_list */
extern void T1599f101(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f101ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.add_adapted_base_classes_to_list */
extern void T499f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.add_adapted_base_classes_to_list */
extern void T1548f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_adapted_base_classes_to_list */
extern void T78f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.add_adapted_base_classes_to_list */
extern void T248f92(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f92ot1(TC* ac, T0* a1);
extern T1 T248f92ot2(TC* ac, T0* a1);
extern T1 T248f92ot3(TC* ac, T0* a1);
/* ET_CLASS_TYPE.add_adapted_base_classes_to_list */
extern void T76f145(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.add_adapted_base_classes_to_list */
extern void T260f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_add_adapted_base_classes_to_list */
extern void T260f136(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_add_adapted_base_classes_to_list */
extern void T76f147(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_add_adapted_base_classes_to_list */
extern void T78f338(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T247f64(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T277f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1423f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1423f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T1025f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T1025f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T1025f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T1025f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T1025f31(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T491f32(TC* ac, T0* C);
/* ET_CLASS.hash_code */
extern T6 T78f189(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T1025f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T1025f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T1025f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T1025f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T1025f70(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1736f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1734f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T1025f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T1025f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T1025f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T1025f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T1025f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T1025f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T1025f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1736f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1734f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1734f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T1025f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T1025f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T1025f46(TC* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T78f132(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1600f42(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1599f39(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1692f10(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1692f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1692f12(TC* ac, T0* C);
/* ET_CLASS.has_flattening_error */
extern T1 T78f129(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T491f34(TC* ac, T0* C);
/* ET_CLASS.features_flattened */
extern T1 T78f128(TC* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T491f33(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1691f6(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1691f7(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1412f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1412f25(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1412f11(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1412f12(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1412f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1411f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1411f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1411f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1411f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1411f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1411f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1411f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1411f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1411f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1411f53(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].aliased_resized_area */
extern T0* T1429f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].aliased_resized_area */
extern T0* T1428f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1411f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1411f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1411f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1411f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1411f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1411f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1411f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS].force */
extern void T1429f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS].fill_with */
extern void T1428f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].extend */
extern void T1428f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1411f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1411f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1411f38(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.add_adapted_base_classes_to_list */
extern void T1412f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T1412f28ot1(TC* ac, T0* a1);
extern T1 T1412f28ot2(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.implementation_class */
extern T0* T1590f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_class */
extern T0* T521f3(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_class */
extern T0* T1589f3(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_class */
extern T0* T524f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_class */
extern T0* T259f4(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_class */
extern T0* T1587f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_class */
extern T0* T1586f4(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_class */
extern T0* T531f4(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_class */
extern T0* T453f5(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_class */
extern T0* T451f3(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_class */
extern T0* T442f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_class */
extern T0* T443f3(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.copy_to_type_context */
extern void T247f69(TC* ac, T0* C, T0* a1);
/* ET_CLASS.copy_to_type_context */
extern void T78f336(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1404f13(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1404f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1413f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1413f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1403f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1403f15(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1405f20(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1405f26(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1405f25(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1402f11(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1402f17(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1402f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1599f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1407f20(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1391f40(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1420f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1406f19(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1390f18(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1693f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1690f12(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T277f28(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1692f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1691f5(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1412f18(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1404f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1413f9(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1403f9(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1405f19(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1402f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1598f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1407f19(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1391f39(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1420f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1406f18(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1390f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1693f11(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1690f11(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T277f27(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T277f33(TC* ac, T0* C, T0* a1);
extern T1 T277f33ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T59f392(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T852c1067(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T41f392(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T59f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T852c1066(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T41f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1598f102(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T453f46(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T451f45(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T443f44(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T442f45(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T259f47(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1590f68(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1589f63(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1587f64(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1586f68(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T531f66(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T524f61(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T521f59(TC* ac, T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T189f131(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T261f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T262f6(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1844f6(TC* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1598f101(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1692f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1691f4(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1412f17(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1412f24(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1404f11(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1404f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1775f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1775f17(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T838f14(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T838f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T338f20(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T338f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1775f14(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1775f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1775f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T838f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1517f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1516f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1516f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T338f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T2007f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T2007f51(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T2009f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T2008f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T2008f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T2007f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T2007f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T2007f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T2007f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T2007f32(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1598f88(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T2007f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T2007f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1776f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T838f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1517f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1516f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T338f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T2007f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T2007f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T2007f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T2007f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T2009f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T2008f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T2007f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T2007f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T2007f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T2007f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1776f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1775f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1775f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1775f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T2007f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T2007f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T2007f27(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T2007f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T2007f59(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1413f8(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1403f8(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1405f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1402f9(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1402f16(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1402f6(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1402f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T248f89(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1407f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1391f38(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1391f45(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.type_constraint_type */
extern T0* T499f78(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_type */
extern T0* T248f77(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_type */
extern T0* T1600f80(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_type */
extern T0* T1599f83(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_constraint_type */
extern T0* T1598f82(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.type */
extern T0* T1577f1(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1420f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1406f17(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1390f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1693f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1690f10(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T277f31(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1692f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1691f9(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1412f21(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1404f15(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1413f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1403f12(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1405f22(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1402f13(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T499f92(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1407f17(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1391f37(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1420f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1406f16(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1390f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1693f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1690f9(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T277f41(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T277f42(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1692f16(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1691f11(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1412f23(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1404f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1413f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1403f14(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1405f24(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1402f15(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T260f132(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1407f16(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1407f23(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1391f36(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1391f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_base_type_dependency */
extern void T1391f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_items_to_list */
extern void T1391f29(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T338f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T338f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T338f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].force_last */
extern void T1741f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].force */
extern void T1982f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].fill_with */
extern void T1981f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].extend */
extern void T1981f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].resize */
extern void T1741f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1982f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1981f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_capacity */
extern T6 T1741f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].extendible */
extern T1 T1741f8(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1924c15(TC* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.renames */
extern T0* T499f83(TC* ac, T0* C);
/* ET_TUPLE_TYPE.renames */
extern T0* T260f121(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.renames */
extern T0* T248f82(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.renames */
extern T0* T1600f85(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.renames */
extern T0* T1599f88(TC* ac, T0* C);
/* ET_LIKE_FEATURE.renames */
extern T0* T1598f87(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T1577f2(TC* ac, T0* C);
/* ET_CLASS_TYPE.renames */
extern T0* T76f107(TC* ac, T0* C);
/* ET_CLASS.renames */
extern T0* T78f245(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T260f103(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1576f71(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T958f73(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1600f74(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1599f77(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1598f76(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T248f69(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T499f72(TC* ac, T0* C);
/* ET_CLASS.is_named_type */
extern T1 T78f241(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T76f110(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1420f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_tuple_type_validity */
extern void T1420f19(TC* ac, T0* C, T0* a1);
extern T1 T1420f19ot1(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1406f14(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1406f22(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1390f13(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1390f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T59f596(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T852c1268(TC* ac, T0* a1, T0* a2);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T198f9(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T198f14(TC* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T198f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position_to_text */
extern T0* T1082f43(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_position_to_string */
extern void T1082f53(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T1082f44(TC* ac, T0* C);
/* ET_KEYWORD.position_to_text */
extern T0* T319f42(TC* ac, T0* C);
/* ET_KEYWORD.append_position_to_string */
extern void T319f102(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T319f43(TC* ac, T0* C);
/* ET_IDENTIFIER.position_to_text */
extern T0* T189f111(TC* ac, T0* C);
/* ET_IDENTIFIER.append_position_to_string */
extern void T189f143(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T189f118(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position_to_text */
extern T0* T1071f129(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_position_to_string */
extern void T1071f159(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T1071f130(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.position_to_text */
extern T0* T662f127(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_position_to_string */
extern void T662f135(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T662f128(TC* ac, T0* C);
/* ET_SYMBOL.position_to_text */
extern T0* T661f91(TC* ac, T0* C);
/* ET_SYMBOL.append_position_to_string */
extern void T661f122(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T661f92(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T59f184(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T41f596(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T41f184(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1693f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1693f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1693f6(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1690f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1690f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_syntax_error */
extern T1 T78f122(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T491f44(TC* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T78f121(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T491f43(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1690f6(TC* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T78f101(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T491f37(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T277f32(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T277f36(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T277f40(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1692f15(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1692f18(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1691f10(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1691f14(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1691f15(TC* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T78f127(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T491f46(TC* ac, T0* C);
/* ET_CLASS.ancestors_built */
extern T1 T78f120(TC* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T491f45(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1412f22(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1412f26(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1412f16(TC* ac, T0* C, T1 a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1404f16(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1404f20(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1413f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1413f17(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1403f13(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1403f17(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1405f23(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1405f30(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1405f29(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1402f14(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1402f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1402f21(TC* ac, T0* C, T1 a1);
/* ET_CLASS_TYPE.process */
extern void T76f140(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1407f12(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1407f13(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T59f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T852c1074(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.types_to_text */
extern T0* T260f117(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_types_to_string */
extern void T260f138(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.types_to_text */
extern T0* T248f80(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_types_to_string */
extern void T248f94(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.types_to_text */
extern T0* T499f81(TC* ac, T0* C);
/* ET_LIKE_CURRENT.append_types_to_string */
extern void T499f99(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.types_to_text */
extern T0* T1600f83(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_types_to_string */
extern void T1600f100(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.types_to_text */
extern T0* T1599f86(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_types_to_string */
extern void T1599f105(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.types_to_text */
extern T0* T1598f85(TC* ac, T0* C);
/* ET_LIKE_FEATURE.append_types_to_string */
extern void T1598f107(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1364f9(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1364f16(TC* ac, T0* C, T0* a1);
/* ET_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1577f5(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1577f12(TC* ac, T0* C, T0* a1);
/* ET_CLASS.types_to_text */
extern T0* T78f258(TC* ac, T0* C);
/* ET_CLASS.append_types_to_string */
extern void T78f342(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.types_to_text */
extern T0* T76f104(TC* ac, T0* C);
/* ET_CLASS_TYPE.append_types_to_string */
extern void T76f146(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1576f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T958f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T248f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T59f101(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T41f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T41f101(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1407f7(TC* ac, T0* C);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T76f144(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T2025c20(TC* ac, T0* a1, T0* a2, T6 a3);
/* ET_IDENTIFIER.set_position */
extern void T189f125(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_LIBRARY.tuple_type */
extern T0* T192f25(TC* ac, T0* C);
/* ET_SYSTEM.tuple_type */
extern T0* T46f7(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_type */
extern T0* T63f28(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T2026c23(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T78f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint */
extern T1 T1600f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T1600f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1600f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1600f14ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1599f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1599f24ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1598f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T78f154(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1576f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1576f21ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1576f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f28ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1576f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T958f36(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1600f35(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f35ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1599f30(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f30ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1598f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T248f37(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f37ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T499f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T247f35(TC* ac, T0* C, T0* a1);
extern T1 T247f35ot1(TC* ac, T0* a1);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1548f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T260f71(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T76f72(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T78f199(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T78f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T260f68(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T260f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T76f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T958f26(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f26ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T958f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T958f19ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1600f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1600f26ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1599f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1599f16ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1598f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T248f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T248f26ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T499f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T247f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f28ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1548f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T260f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T76f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T78f162(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T260f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T76f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.is_dotnet */
extern T1 T78f107(TC* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T78f110(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T870f43(TC* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T498f22(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T316f5(TC* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T78f106(TC* ac, T0* C);
/* ET_CLASS.conforming_ancestor */
extern T0* T78f105(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T500f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T260f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T2025f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1576f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1576f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1576f19ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1576f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1576f26ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.recursive_formal_constraints */
extern T0* T958f33(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T958f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T958f24ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1600f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1600f28ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1599f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1599f18ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1598f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T248f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T248f32ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T499f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T247f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f33ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1548f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T76f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T78f197(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T78f194(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.conforms_to_type_with_type_marks */
extern T1 T1924f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_BASE_TYPE_CONSTRAINT_LIST.conforms_to_type_with_type_marks */
extern T1 T1743f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T76f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T958f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T958f17ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T958f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1600f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1599f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1598f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T248f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T499f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T78f147(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T76f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T2026f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T642f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T246f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T78f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T260f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1576f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1576f22ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T958f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T958f20ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1600f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1600f27ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1599f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1599f17ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1598f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T248f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T248f27ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T499f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T247f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f29ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1548f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T260f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T76f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T78f163(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T260f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T2026f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T246f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T76f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T78f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T248f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T248f17ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T76f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T499f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T247f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T247f25ot1(TC* ac, T0* a1);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1548f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T260f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T76f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T78f166(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint */
extern T0* T248f79(TC* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.type_constraint */
extern T0* T499f80(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint */
extern T0* T1600f82(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint */
extern T0* T1599f85(TC* ac, T0* C, T6 a1);
/* ET_LIKE_FEATURE.type_constraint */
extern T0* T1598f84(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1364f8(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.current_type_constraint */
extern T0* T76f131(TC* ac, T0* C);
/* ET_TUPLE_TYPE.current_type_constraint */
extern T0* T260f113(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.current_type_constraint */
extern T0* T248f76(TC* ac, T0* C);
/* ET_LIKE_CURRENT.current_type_constraint */
extern T0* T499f77(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.current_type_constraint */
extern T0* T1600f79(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.current_type_constraint */
extern T0* T1599f82(TC* ac, T0* C);
/* ET_LIKE_FEATURE.current_type_constraint */
extern T0* T1598f81(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.current_type_constraint */
extern T0* T1577f6(TC* ac, T0* C);
/* ET_CLASS.current_type_constraint */
extern T0* T78f259(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.item */
extern T0* T1364f7(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1577f4(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.type_constraint_count */
extern T6 T248f78(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_constraint_count */
extern T6 T499f79(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_constraint_count */
extern T6 T1600f81(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_constraint_count */
extern T6 T1599f84(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_constraint_count */
extern T6 T1598f83(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.count */
extern T6 T1364f3(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.count */
extern T6 T1577f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint */
extern T1 T1599f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T1599f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_constraint */
extern T1 T1598f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_constraint_with_type_marks */
extern T1 T1598f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint */
extern T1 T248f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T248f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_CURRENT.conforms_to_constraint */
extern T1 T499f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_constraint_with_type_marks */
extern T1 T499f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_constraint */
extern T1 T78f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_constraint_with_type_marks */
extern T1 T78f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_to_constraint */
extern T1 T260f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T260f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_constraint */
extern T1 T76f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_constraint_with_type_marks */
extern T1 T76f115(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T1576f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T1576f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER.conforms_to_constraint */
extern T1 T958f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_constraint_with_type_marks */
extern T1 T958f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_LIBRARY.detachable_separate_any_type */
extern T0* T192f21(TC* ac, T0* C);
/* ET_SYSTEM.detachable_separate_any_type */
extern T0* T46f34(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_separate_any_type */
extern T0* T63f24(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T958f29(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1407f14(TC* ac, T0* C);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T76f143(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.unfolded_empty_tuple_actual_parameters */
extern T0* T192f28(TC* ac, T0* C);
/* ET_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T46f39(TC* ac, T0* C);
/* ET_ECF_SYSTEM.unfolded_empty_tuple_actual_parameters */
extern T0* T63f31(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T2026f17(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T2026f21(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1846f11(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1596f11(TC* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T78f174(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_routine_type_mode */
extern T1 T192f99(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_routine_type_mode */
extern T1 T46f119(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_routine_type_mode */
extern T1 T63f135(TC* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T78f334(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1407f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1391f32(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1391f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T59f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T852c1073(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T59f100(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T41f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T41f100(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1600f61(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1599f64(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1598f62(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T248f59(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T499f58(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T78f223(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T260f91(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T76f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1576f68(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T958f70(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T59f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T852c1072(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T41f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T59f396(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T852c1071(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T59f99(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T41f396(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T41f99(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1391f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T59f395(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T852c1070(TC* ac, T0* a1, T0* a2);
/* ET_CLASS_TYPE.upper_name */
extern T0* T76f76(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T59f98(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T41f395(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T41f98(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T59f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T852c922(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T59f29(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T41f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T41f29(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1406f11(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1406f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1406f8(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1406f7(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1406f13(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1406f6(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1390f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1390f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1390f7(TC* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T277f30(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T277f35(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1576f39(TC* ac, T0* C, T0* a1);
extern T1 T1576f39ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T958f40(TC* ac, T0* C, T0* a1);
extern T1 T958f40ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1600f63(TC* ac, T0* C, T0* a1);
extern T1 T1600f63ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1599f66(TC* ac, T0* C, T0* a1);
extern T1 T1599f66ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1598f64(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T248f61(TC* ac, T0* C, T0* a1);
extern T1 T248f61ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T499f60(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T247f43(TC* ac, T0* C);
extern T1 T247f43ot1(TC* ac, T0* a1);
/* ET_LIKE_N.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T1548f30(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T78f231(TC* ac, T0* C);
/* ET_CLASS.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T78f225(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T642f24(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1576f76(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T958f78(TC* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built_successfully */
extern T1 T78f171(TC* ac, T0* C);
/* ET_TUPLE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T260f93(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2026f14(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1846f9(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1846f3(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1600f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1599f36(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1598f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T248f10(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T499f15(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T260f11(TC* ac, T0* C);
/* ET_CLASS.type */
extern T0* T78f135(TC* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T76f21(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1600f77(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1599f80(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1598f79(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T1596f9(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1596f3(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T248f72(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T499f74(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T260f106(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T78f248(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T76f123(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T246f22(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T76f95(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T500f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T2025f14(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T277f18(TC* ac, T0* C);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T277f20(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1693f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1693f5(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1692f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1691f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1691f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1690f4(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1690f5(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1412f20(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1404f14(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1413f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1413f16(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1413f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1403f11(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1403f16(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1576f70(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T958f72(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1600f65(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1599f68(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1598f66(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T248f63(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T499f65(TC* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T78f233(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T642f25(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T260f97(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T2026f15(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T246f23(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T76f101(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T500f15(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T2025f15(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1403f5(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1405f21(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1405f28(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1405f16(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1405f27(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1405f8(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1402f12(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T59f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T852c1064(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T59f95(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T41f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T41f95(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1590f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_deferred */
extern T1 T78f73(TC* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T78f96(TC* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T319f36(TC* ac, T0* C);
/* ET_CLASS.is_creation_exported_to */
extern T1 T78f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T1184f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T1181f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.has_feature_name */
extern T1 T1181f14(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T1142f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T78f254(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T318f3(TC* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T299f3(TC* ac, T0* C);
/* ET_CLIENTS.has_class */
extern T1 T1142f9(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T298f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.has_class */
extern T1 T298f6(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T1181f11(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T521f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1589f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T524f63(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T59f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T852c1063(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T41f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.position */
extern T0* T78f227(TC* ac, T0* C);
/* ET_NOTE_LIST.position */
extern T0* T1298f9(TC* ac, T0* C);
/* ET_NOTE.position */
extern T0* T1574f3(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.position */
extern T0* T1309f6(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.tokens */
extern T0* T1309f8(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1564f15(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1563f15(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1562f15(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1561f15(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T454f11(TC* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1560f23(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1559f23(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1557f19(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T1575f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T405f14(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1571f10(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1570f10(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1569f11(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1568f11(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1566f11(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1565f11(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T1558f11(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.first */
extern T0* T1309f7(TC* ac, T0* C);
/* ET_NOTE_TERM_LIST.is_empty */
extern T1 T1309f5(TC* ac, T0* C);
/* ET_NOTE.tag */
extern T0* T1574f4(TC* ac, T0* C);
/* ET_TAGGED_NOTE.position */
extern T0* T1573f4(TC* ac, T0* C);
/* ET_NOTE_LIST.first */
extern T0* T1298f11(TC* ac, T0* C);
/* ET_NOTE_LIST.is_empty */
extern T1 T1298f10(TC* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T76f75(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1158f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS.features_flattened_successfully */
extern T1 T78f234(TC* ac, T0* C);
/* ET_TUPLE_TYPE.base_class */
extern T0* T260f12(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.base_class */
extern T0* T1924f10(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_constraint */
extern T0* T260f116(TC* ac, T0* C, T6 a1);
/* ET_CLASS.type_constraint */
extern T0* T78f238(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.type_constraint */
extern T0* T1924f4(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.type_constraint */
extern T0* T1743f7(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.item */
extern T0* T1743f13(TC* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.type_constraint */
extern T0* T76f100(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1158f7(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T1158f10(TC* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.type_constraint_count */
extern T6 T260f115(TC* ac, T0* C);
/* ET_CLASS.type_constraint_count */
extern T6 T78f237(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.count */
extern T6 T1924f3(TC* ac, T0* C);
/* ET_BASE_TYPE_CONSTRAINT_LIST.count */
extern T6 T1743f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_constraint_count */
extern T6 T76f99(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_types */
extern T0* T958f31(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1420f5(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.index */
extern T6 T1576f7(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.index */
extern T6 T958f2(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T248f3(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1158f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T958f30(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T642f7(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T500f4(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T2025f16(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T2026f20(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T642f10(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T246f8(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T500f3(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.count */
extern T6 T2025f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T2026f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.count */
extern T6 T642f1(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.count */
extern T6 T246f1(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1420f10(TC* ac, T0* C);
/* ET_CLASS.interface_checked_successfully */
extern T1 T78f131(TC* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T78f70(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class */
extern void T1406f15(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1390f14(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1407f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1391f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1693f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1690f8(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1692f17(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1691f12(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1413f18(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1412f29(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1405f31(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1404f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1403f18(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1402f20(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T277f39(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.process_class */
extern void T508f7(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T508f9(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T508f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1694f12(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T1025f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T1025f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1694f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1694f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T1025f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1694f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T59f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T59f378(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T2018c25(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T2124f11(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T2123f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T2123f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T2124f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T2124f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T2123f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T2124f13(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T2123f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T2124f4(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T2123f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T2123f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T2124f6(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T2124f10(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T2123f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T2123f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T2124f8(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T2123f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T2124c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T2123f29(TC* ac, T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T498f12(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T498f14(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T498f16(TC* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T46f125(TC* ac, T0* C, T0* a1, T2 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T975f9(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.string_ */
extern T0* T46f132(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T975f10(TC* ac, T0* C);
/* ET_LIBRARY.shortest_path */
extern T0* T921f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T921f99ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T921f99ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T921f99ac3(TC* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1533f1(TC* ac, T0* C, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T1534f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T907f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LIBRARY.insert_in_hash_table */
extern void T921f170(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T975f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T975f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T975f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1707f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T975f17(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1706f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1705f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1705f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T975f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T975f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1706f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1705f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T975f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T975f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1531f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1531f16(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1530f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1530f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1531f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1531f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1530f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1531f19(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1530f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1531f15(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1530f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1530f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1531f10(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1530f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1531f14(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1530f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1531f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1531f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1530f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1530f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1530f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1530f24(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.hash_code */
extern T6 T46f131(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T217f92(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T634f92(TC* ac, T0* C);
/* ET_LIBRARY.hash_code */
extern T6 T921f93(TC* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T192f104(TC* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T63f146(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1530f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1530f32(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.universes_do_if */
extern void T46f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T216f12(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T632f7(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T193f11(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T616f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T217f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T633f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1474f9(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T634f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T192f192(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.universes_do_if */
extern void T921f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T63f287(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.universe_actions */
extern T0* T921f102(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1533c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1531f9(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1530f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1530f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1531f7(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1530f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1531f5(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1531f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1530f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1530f21(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1531c11(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1530f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1530f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1685f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1683f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1683f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1530f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1530f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1530f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1530f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1530f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1530f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1685f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1683f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1530f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1530f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1530f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1530f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1530f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1530f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1530c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1530f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1530f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1530f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1530f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1530f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1530f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1685f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1683c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1685c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1530f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T975c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T975f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T975f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1707c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1706f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1705c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1706c3(TC* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T634f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T634f99ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T634f99ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T634f99ac3(TC* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T634f168(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T634f102(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f98(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f98ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f98ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T217f98ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T217f166(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T217f101(TC* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T192f108(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T192f108ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T192f108ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T192f108ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T192f196(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T192f110(TC* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T63f155(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T63f155ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T63f155ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T63f155ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T63f246(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T63f143(TC* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T46f130(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T46f130ac1(TC* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T46f130ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T46f130ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T46f207(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T46f133(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T217f97(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T634f98(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T219f23(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T213f21(TC* ac, T0* C);
/* ET_LIBRARY.adapted_universe */
extern T0* T921f94(TC* ac, T0* C, T0* a1);
extern T1 T921f94ot1(TC* ac, T0* a1);
extern T1 T921f94ot2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T216f5(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T193f5(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T634f94(TC* ac, T0* C, T0* a1);
extern T1 T634f94ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1474f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T217f94(TC* ac, T0* C, T0* a1);
extern T1 T217f94ot1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T192f105(TC* ac, T0* C, T0* a1);
extern T1 T192f105ot1(TC* ac, T0* a1);
extern T1 T192f105ot2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T63f156(TC* ac, T0* C, T0* a1);
extern T1 T63f156ot1(TC* ac, T0* a1);
extern T1 T63f156ot2(TC* ac, T0* a1);
/* ET_SYSTEM.adapted_universe */
extern T0* T46f129(TC* ac, T0* C, T0* a1);
extern T1 T46f129ot1(TC* ac, T0* a1);
extern T1 T46f129ot2(TC* ac, T0* a1);
/* ET_SYSTEM.lower_name */
extern T0* T46f128(TC* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T63f157(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T63f161(TC* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T63f160(TC* ac, T0* C);
/* ET_NONE_GROUP.lower_name */
extern T0* T498f15(TC* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T498f11(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T316f13(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T316f15(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T316f17(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T316f16(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T316f23(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T77f214(TC* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T46c138(TC* ac, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T46f143(TC* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T46f185(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_marked */
extern void T491f51(TC* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T78f278(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM.master_class */
extern T0* T46f120(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T231f49(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T231f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T651f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T652f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T652f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T231f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T649f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T650f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T650f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T231f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T231f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T231f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T231f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T231f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T231f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T231f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T231f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T651f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T652f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T231f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T649f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T650f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T231f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T231f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T231f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T231f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T231f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T231f46(TC* ac, T0* C);
/* ET_MASTER_CLASS.make */
extern T0* T491c50(TC* ac, T0* a1, T0* a2);
/* ET_MASTER_CLASS.tokens */
extern T0* T491f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T231f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T231f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T231f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T231f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T231f51(TC* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T486f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T189f53(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T77f78(TC* ac, T0* C);
/* ET_SYSTEM.tokens */
extern T0* T46f122(TC* ac, T0* C);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T46f184(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T246f28(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T664f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T660f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T660f8(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T246f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T664c3(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T246c27(TC* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T246f27p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T664f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T660c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T77f213(TC* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T661c93(TC* ac);
/* ET_SYMBOL.make_leaf */
extern void T661f97(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T77f212(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T662c129(TC* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T662f130(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T246f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T77f118(TC* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T46f183(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T77f117(TC* ac, T0* C);
/* ET_SYSTEM.set_system_string_type */
extern void T46f182(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T77f147(TC* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T46f181(TC* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T489f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].force */
extern void T1000f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].fill_with */
extern void T999f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].extend */
extern void T999f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T489f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T1000c2(TC* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T489c11(TC* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T489f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T1000f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].make_empty */
extern T0* T999c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T77f259(TC* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T319c56(TC* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T489f9(TC* ac, T0* C);
/* ET_PARENT.make */
extern T0* T488c11(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T77f74(TC* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T319c45(TC* ac);
/* ET_PARENT.tokens */
extern T0* T488f9(TC* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T488f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T77f121(TC* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T46f180(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T77f146(TC* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T46f179(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T490c6(TC* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1002c8(TC* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1002f8p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T1715f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].make_empty */
extern T0* T1714c4(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1002f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T1715c2(TC* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T77f723(TC* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T661c112(TC* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T77f722(TC* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T661c111(TC* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1002f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T77f145(TC* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T46f178(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T77f144(TC* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T46f177(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T77f116(TC* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T46f176(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T77f115(TC* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T46f175(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T77f109(TC* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T46f174(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T77f108(TC* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T46f173(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T77f81(TC* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T46f172(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T77f114(TC* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T46f171(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T77f113(TC* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T46f170(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T77f110(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T46f169(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T77f107(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T46f168(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T77f106(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T46f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T77f105(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T46f166(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T77f104(TC* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T46f165(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T77f80(TC* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T46f164(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T77f123(TC* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T46f163(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T77f143(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T46f162(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T77f103(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T46f161(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T77f102(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T46f160(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T77f101(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T46f159(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T77f100(TC* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T46f158(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T77f79(TC* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T46f157(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T77f142(TC* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_8_type */
extern void T46f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_8_class_name */
extern T0* T77f141(TC* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T46f155(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T77f112(TC* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T46f154(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T77f140(TC* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T46f153(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T77f139(TC* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T46f152(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T77f82(TC* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T46f151(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T77f99(TC* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T46f150(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T77f98(TC* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T46f149(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T77f77(TC* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T46f148(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T77f97(TC* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T46f147(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T77f119(TC* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T46f146(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T500c18(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T77f111(TC* ac, T0* C);
/* ET_SYSTEM.set_none_type */
extern void T46f145(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T491f52(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T491f56(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T491f58(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T491f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T491f59ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T491f59ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T491f59ac3(TC* ac, T0* a1);
extern T1 T491f59ot1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T932f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.is_marked */
extern T1 T491f21(TC* ac, T0* C);
/* ET_MASTER_CLASS.mark_overridden */
extern void T491f57(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T491f68(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1003f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1003f22(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1003f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1003f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1003c14(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1003f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1003f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1716c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T649f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T650c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T649c3(TC* ac);
/* ET_MASTER_CLASS.is_override */
extern T1 T491f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T78f113(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1003f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1003f11(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T491f60(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T491f67(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1003f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1003f17(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T650f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T650f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1003f26(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1003f25(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1716f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1003f24(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1003f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1716f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1716f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1003f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1003f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1003f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1003f27(TC* ac, T0* C);
/* ET_CLASS.is_unknown_class */
extern T1 T78f114(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T77f69(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T513f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T513f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T513f26(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1430f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T513f25(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T513f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T513f21(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T513f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T513f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T513c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T513f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T513f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1430c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T1429f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS].make_empty */
extern T0* T1428c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T1429c3(TC* ac);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T491f55(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T78f112(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_override */
extern T1 T870f21(TC* ac, T0* C);
/* ET_NONE_GROUP.is_override */
extern T1 T498f6(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_override */
extern T1 T316f7(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T491f54(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T78f265(TC* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T498c30(TC* ac, T0* a1);
/* ET_SYSTEM.register_class */
extern void T46f186(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T78f272(TC* ac, T0* C, T6 a1);
/* ET_CLASS.make */
extern void T78f271(TC* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T78c271(TC* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T320f1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T736f28(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T736f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T736f29(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T736f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T736f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T736f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T736f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T736f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T736f26(TC* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T320f2(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T77f124(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T77f122(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T77f120(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T736f37(TC* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T736f45(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T736f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T736f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T736f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T736f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T736f31(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T736f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T736f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1502f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T539f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T736f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T736f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T736f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T736f41(TC* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1502f4(TC* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T736f40(TC* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T320f6(TC* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T736f36(TC* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T320f4(TC* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T486c2(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T736c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T736f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T736f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T736f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T736f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1503c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T736f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T736f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T736f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T651f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T652c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T651c3(TC* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T736f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1502f2(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1502c3(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T77f2(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T316c31(TC* ac);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T77f73(TC* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T319c44(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T77f72(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T264c8(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T982f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T981c5(TC* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T264f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T982c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T77f71(TC* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T263c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T980f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T978c5(TC* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T263f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T980c3(TC* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T77f70(TC* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T318c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T987f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T986c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T318f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T987c3(TC* ac);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T77f137(TC* ac, T0* C);
/* ET_SYSTEM.set_any_type */
extern void T46f144(TC* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T298f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].force */
extern void T732f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].fill_with */
extern void T731f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].extend */
extern void T731f8(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T298f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].default_create */
extern T0* T732c3(TC* ac);
/* ET_CLIENT.make */
extern T0* T299c6(TC* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T298c13(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].make */
extern T0* T732f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].make_empty */
extern T0* T731c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T77f136(TC* ac, T0* C);
/* ET_ATTACHMENT_MARK_SEPARATE_KEYWORD.make */
extern T0* T492c24(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T77f125(TC* ac, T0* C);
/* ET_KEYWORD.make_separate */
extern T0* T319c46(TC* ac);
/* ET_SYSTEM.make_adapted */
extern void T46f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T46f123(TC* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T46f141(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T77f134(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T77f133(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T246c32(TC* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T246f32p1(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T77f132(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T77f131(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T77f130(TC* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T298c15(TC* ac);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T77f129(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T77f128(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T77f127(TC* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T46f140(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.initialize */
extern void T46f139(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T216c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T632c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T632f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T632f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1473c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1472f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1471c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1472c3(TC* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T485c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T997c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T997f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T997f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1713c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1712f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1711c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1712c3(TC* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T193c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T616c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T616f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T616f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1468c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1467f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1466c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1467c3(TC* ac);
/* ET_SYSTEM.initialize */
extern void T46f139p1(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T231f39(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T46f121(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T231c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T231f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T231f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T231f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T231f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T648c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T231f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T231f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T231f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T231f42(TC* ac, T0* C, T6 a1);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T316f6(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T316f12(TC* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T870f48(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T870f50(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T870f50p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T192f109(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T192f112(TC* ac, T0* C);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T192f111(TC* ac, T0* C);
/* ET_ECF_CLUSTER.string_ */
extern T0* T870f56(TC* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T870f60(TC* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T870f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T59f103(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T41f401(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T41f378(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T41f103(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T59f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T2018c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T59f102(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T41f400(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T41f102(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1835f8(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1835f8ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1835f8ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1835f8ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1835f8ac4(TC* ac, T0* a1, T0* a2);
extern T1 T1835f8ot1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T2151f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [LX_WILDCARD]].set_rout_disp_final */
extern void T2164f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1835f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T2156f15(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T2156f16(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.set_subject */
extern void T2156f21(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T2156f17(TC* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T192f117(TC* ac, T0* C, T2 a1);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T192f118(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.name */
extern T0* T217f5(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.name */
extern T0* T634f5(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.name */
extern T0* T219f17(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.name */
extern T0* T213f15(TC* ac, T0* C);
/* ET_ECF_CLUSTER.universe */
extern T0* T870f4(TC* ac, T0* C);
/* ET_NONE_GROUP.universe */
extern T0* T498f1(TC* ac, T0* C);
/* ET_ECF_CLUSTER.parent */
extern T0* T870f31(TC* ac, T0* C);
/* ET_NONE_GROUP.parent */
extern T0* T498f19(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T316f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T151f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_name */
extern T0* T870f63(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T870f66(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T870f66p1(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T63f163(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.full_name */
extern T0* T498f18(TC* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T498f21(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T46f135(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T316f19(TC* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T316f22(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1835f7(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T2123f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T2123f25(TC* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1835f5(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1835f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T870f64(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T131f8(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T131f21(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T536f8(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable STRING_8].item */
extern T0* T1437f4(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T536f7(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T536f11(TC* ac, T0* C, T6 a1);
/* KL_PATHNAME.set_canonical */
extern void T536f21(TC* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T536f23(TC* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T536f28(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].force */
extern void T1437f11(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].move_data */
extern void T549f10(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].overlapping_move */
extern void T549f12(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable STRING_8].force */
extern void T549f13(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].non_overlapping_move */
extern void T549f11(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].capacity */
extern T6 T1437f7(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].set_area */
extern void T1437f14(TC* ac, T0* C, T0* a1);
/* ARRAY [detachable STRING_8].make_empty_area */
extern void T1437f13(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable STRING_8].additional_space */
extern T6 T1437f6(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].empty_area */
extern T1 T1437f5(TC* ac, T0* C);
/* ARRAY [detachable STRING_8].put */
extern void T1437f10(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T131f22(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T536f24(TC* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T536f22(TC* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T536c20(TC* ac);
/* ARRAY [detachable STRING_8].make_filled */
extern T0* T1437c9(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable STRING_8].make_filled_area */
extern void T1437f12(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable STRING_8].make_filled */
extern T0* T549c8(TC* ac, T0* a1, T6 a2);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T130f8(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T130f24(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T130f23(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T536f27(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T536f26(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T536f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.file_system */
extern T0* T870f51(TC* ac, T0* C);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T870f53(TC* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T870f52(TC* ac, T0* C);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T870f61(TC* ac, T0* C);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T870f38(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T131f10(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T130f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.filename */
extern T0* T192f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T190f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.filename */
extern T0* T63f2(TC* ac, T0* C);
/* ET_ECF_SETTINGS.value */
extern T0* T65f6(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T220f21(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T220f39(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T220f56(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T131f9(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T131f7(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T131f20(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T130f7(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T130f22(TC* ac, T0* C);
/* ET_ECF_VARIABLES.interpreted_string */
extern T0* T67f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.expanded_string */
extern T0* T67f9(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VARIABLES.value */
extern T0* T67f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T67f5(TC* ac, T0* C);
/* UC_UTF8_STRING.has */
extern T1 T748f71(TC* ac, T0* C, T2 a1);
/* UC_STRING.has */
extern T1 T329f71(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T870f68(TC* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T498f20(TC* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T498f25(TC* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T498f29(TC* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T498f28(TC* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T498f27(TC* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T498f24(TC* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T498f26(TC* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T498f23(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T316f21(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T316f26(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T316f30(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T316f29(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T316f28(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T316f25(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T316f27(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T316f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1694f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T1025f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1694f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1694f10(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T1025f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T1025f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1694f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T1025f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T1025f19(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1694c9(TC* ac, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T78f202(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T513f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T513f10(TC* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T78f208(TC* ac, T0* C);
/* ET_ECF_LIBRARY.master_class */
extern T0* T192f114(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T63f148(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T508f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T870f59(TC* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T870f44(TC* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T498f7(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T316f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T59f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T41f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T508f8(TC* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T508c6(TC* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T508f3(TC* ac, T0* C);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T508f4(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T510f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T510f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T510f38(TC* ac, T0* C);
extern T1 T510f38ot1(TC* ac, T0* a1);
extern T1 T510f38ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1392f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1392f62(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1392f61(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1392f60(TC* ac, T0* C);
/* SPECIAL [ET_FEATURE_NAME].keep_head */
extern void T1748f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].set_count */
extern void T1748f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1392f59(TC* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1745f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1745f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1392f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1392f57(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1744f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1744f10(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T510f49(TC* ac, T0* C);
/* ET_SYSTEM.set_special_item_seed */
extern void T46f198(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_special_item_seed */
extern void T63f275(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T46f197(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T63f274(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T77f268(TC* ac, T0* C);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T46f196(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T63f273(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T77f267(TC* ac, T0* C);
/* ET_SYSTEM.set_iteration_cursor_item_seed */
extern void T46f195(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_item_seed */
extern void T63f272(TC* ac, T0* C, T6 a1);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T78f177(TC* ac, T0* C);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T46f194(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T63f271(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T77f266(TC* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T78f176(TC* ac, T0* C);
/* ET_SYSTEM.set_dispose_seed */
extern void T46f193(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T63f270(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T77f265(TC* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T78f175(TC* ac, T0* C);
/* ET_SYSTEM.set_function_item_seed */
extern void T46f192(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T63f269(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T77f6(TC* ac, T0* C);
/* ET_SYSTEM.set_routine_call_seed */
extern void T46f191(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T63f268(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T77f264(TC* ac, T0* C);
/* ET_SYSTEM.set_is_equal_seed */
extern void T46f190(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T63f267(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T77f263(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T59f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T852c913(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T59f21(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T41f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T41f21(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_twin_seed */
extern void T46f189(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_twin_seed */
extern void T63f266(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1590f69(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T259f48(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1589f64(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T524f62(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1587f65(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1586f69(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T531f67(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T453f47(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T451f46(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T442f46(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T443f45(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T521f60(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T77f262(TC* ac, T0* C);
/* ET_SYSTEM.set_copy_seed */
extern void T46f188(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T63f265(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T77f261(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T59f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T852c911(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T59f19(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T41f205(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T41f19(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T59f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T852c915(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T59f23(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T41f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T41f23(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T46f187(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T63f264(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T510f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1392f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1392f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1392f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1392f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1392f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1392f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1393f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1392f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1392f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1392f23(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T77f3(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T510f21(TC* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T78f125(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T510f48(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1173f6(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1584f6(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1583f5(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T1173f7(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T510f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T59f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T852c1002(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T59f60(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T41f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T41f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T59f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T852c1001(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T41f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T59f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T852c1000(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T59f59(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T41f321(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T41f59(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1590f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once */
extern T1 T1589f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T524f47(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T521f43(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T59f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T852c999(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T59f34(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T41f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T41f34(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T59f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T852c998(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T41f319(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T1181f8(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T1181f13(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T1184f6(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T59f318(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T852c997(TC* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T1181f7(TC* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T1181f12(TC* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T1142f13(TC* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T299f5(TC* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T1142f16(TC* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T1142f15(TC* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T1181f10(TC* ac, T0* C);
extern T1 T1181f10ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T59f58(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T41f318(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T41f58(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T1184f5(TC* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T1184f4(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T510f46(TC* ac, T0* C);
extern T1 T510f46ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T59f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T852c996(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T59f57(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T41f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T41f57(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T59f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T852c995(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T59f56(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T41f316(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T41f56(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T259f54(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1587f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1586f40(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T531f39(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T453f57(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T451f55(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T442f52(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T443f54(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T59f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T852c994(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T59f55(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T41f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T41f55(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T59f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T852c993(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T59f54(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T41f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T41f54(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T59f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T852c992(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T41f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.assigner */
extern T0* T259f15(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.assigner */
extern T0* T1587f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.assigner */
extern T0* T1586f14(TC* ac, T0* C);
/* ET_DO_FUNCTION.assigner */
extern T0* T531f16(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.assigner */
extern T0* T453f12(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.assigner */
extern T0* T451f11(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.assigner */
extern T0* T442f12(TC* ac, T0* C);
/* ET_ATTRIBUTE.assigner */
extern T0* T443f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T59f309(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T852f988(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T852c987(TC* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T852f198(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T59f51(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T41f309(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T41f51(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T59f308(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T852c986(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T59f50(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T41f308(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T41f50(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T59f307(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T852c985(TC* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1427f22(TC* ac, T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1426f13(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1426f19(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T41f307(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1392f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1392f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1392f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1392f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1744f4(TC* ac, T0* C);
/* ET_CLASS.set_has_deferred_features */
extern void T78f302(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1395f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1395f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1395f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1395f50(TC* ac, T0* C);
/* SPECIAL [ET_ALIAS_NAME].keep_head */
extern void T1751f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].set_count */
extern void T1751f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1395f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1395f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1395f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1754f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1754f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1392f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1392f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1392f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1744f12(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T510f45(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1405f11(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1777f10(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1778f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1778f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1777f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1778f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1777f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1405f15(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1405f15ot1(TC* ac, T0* a1);
extern T1 T1405f15ot2(TC* ac, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T261f7(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1405f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T78f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1548f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1576f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f50ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T958f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f51ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1600f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1599f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1598f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T248f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f50ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T499f49(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T78f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T642f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1576f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1576f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f51ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1548f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1576f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f52ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T958f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f53ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1600f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1599f61(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1598f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T248f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f56ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T499f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T78f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T260f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T76f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T958f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f52ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T958f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T260f82(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T76f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T500f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T260f83(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T2025f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1600f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1599f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1598f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T248f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T499f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T78f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T76f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T2026f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T246f20(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1598f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1548f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1576f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f55ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T958f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f56ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1600f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1599f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1598f69(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1598f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T248f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f64ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T499f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T78f235(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T260f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T76f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T260f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1548f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1576f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f53ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T958f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f54ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1600f59(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1599f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1598f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T248f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f57ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T499f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T78f222(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T260f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T76f91(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T248f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f55ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T76f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1600f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1548f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1576f56(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f56ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T958f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f57ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1600f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1600f70(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1599f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1599f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1598f72(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T248f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f65ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T499f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T78f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T260f99(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T76f103(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1599f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T499f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1548f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1576f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f54ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T958f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f55ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1600f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1599f67(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1598f65(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T248f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f62ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T499f62(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T499f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T78f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T260f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T76f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1405f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T59f376(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T852c1055(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T59f89(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T41f376(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T41f89(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T59f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T852c1054(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T41f375(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1777f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1777f9(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1778f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1778f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1777f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1778f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1777c8(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1427f12(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1643f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1590f62(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T259f41(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T521f53(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1589f57(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T524f55(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1587f58(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1586f62(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T531f60(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T453f40(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T451f39(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T442f39(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T443f38(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_adapted */
extern T1 T1427f17(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_adapted */
extern T1 T1643f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1590f67(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T259f46(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T521f58(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1589f62(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T524f60(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1587f63(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1586f67(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T531f65(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T453f45(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T451f44(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T442f44(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T443f43(TC* ac, T0* C);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1426f14(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1405f14(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T59f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T852c1053(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T59f90(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T41f374(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T41f90(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T59f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T852c1052(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T41f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T59f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T852c1051(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T41f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1405f13(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1405f13ot1(TC* ac, T0* a1);
extern T1 T1405f13ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T59f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T852c1050(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T59f69(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T41f371(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T41f69(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T59f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T852c1049(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T41f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T59f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T852c1048(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T41f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1427f14(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1643f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1590f64(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T259f43(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T521f55(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1589f59(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T524f57(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1587f60(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1586f64(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T531f62(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T453f42(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T451f41(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T442f41(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T443f40(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1427f13(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_redeclared */
extern T1 T1643f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1590f63(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T259f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T521f54(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1589f58(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T524f56(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1587f59(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1586f63(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T531f61(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T453f41(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T451f40(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T442f40(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T443f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1395f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1395f47(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].force */
extern void T1753f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].fill_with */
extern void T1751f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].extend */
extern void T1751f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1395f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1749f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1745f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1745f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1395f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1395f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1395f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1395f28(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.hash_code */
extern T6 T1107f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1395f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1395f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1395f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1395f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1753f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1751f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1395f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1749f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1745f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1395f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1395f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1395f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1395f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1395f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T59f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T852c984(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1592f10(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1592f49(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T1107f7(TC* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T1107f19(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1592f11(TC* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T1107f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T59f39(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T41f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T41f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T59f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T852c983(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T41f305(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3b_error */
extern void T59f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3b */
extern T0* T852c982(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T59f38(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav3b_error */
extern void T41f304(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav3_error */
extern T1 T41f38(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T59f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T852c981(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T59f37(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T41f303(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T41f37(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T59f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T852c980(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T41f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T59f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T852c979(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T41f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3c_error */
extern void T59f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3c */
extern T0* T852c978(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3c_error */
extern void T41f300(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T59f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T852c977(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T41f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T59f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T852c976(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T41f298(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T59f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T852c975(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T41f297(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3d_error */
extern void T59f296(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3d */
extern T0* T852c974(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3d_error */
extern void T41f296(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T59f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T852c973(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T41f295(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1427f16(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1643f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1590f66(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T259f45(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T521f57(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1589f61(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T524f59(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1587f62(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1586f66(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T531f64(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T453f44(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T451f43(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T442f43(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T443f42(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_inherited */
extern T1 T1427f15(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1643f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1590f65(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T259f44(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T521f56(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1589f60(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T524f58(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1587f61(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1586f65(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T531f63(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T453f43(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T451f42(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T442f42(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T443f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_key */
extern T0* T1395f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1395f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1395f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1395f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1395f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1395f41(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1396f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1392f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1392f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1744f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1392f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1392f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1392f31(TC* ac, T0* C);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T78f301(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T510f44(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1404f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1775f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T838f19(TC* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1516f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1516f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T838f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1518f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1518f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T338f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T338f25(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T760f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T760f6(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T2007f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T2007f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T2007f42(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T2007f41(TC* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T2008f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T2008f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T2007f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T2007f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T2070f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T2070f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1776f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1776f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T2010f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T2010f10(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T59f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T852c1047(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T2010f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1776f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T2010f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1776f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1776f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T2010f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1776f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T2010f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T2010f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T2010f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1776f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T2010f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T2010f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1776f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1776f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T2010c9(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T41f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1404f6(TC* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1404f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1776f6(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1775f11(TC* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T839f4(TC* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T839f6(TC* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T839c5(TC* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T839f7(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1776f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1776c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1776f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T2009f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T2008c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T2009c3(TC* ac);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T838f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T838f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T838f15(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1516f4(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1516f10(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1516f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1516f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1516f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1516f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1516c6(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T838f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1518c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T838f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T838f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T338f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T338f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T338f27(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T338f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T760c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T338f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T338f14(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1590f58(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T521f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1589f52(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T524f41(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1590f57(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T521f37(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1589f51(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T524f40(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1590f56(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_deferred */
extern T1 T521f36(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1589f50(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T524f39(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.item */
extern T0* T264f7(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T59f294(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T852c972(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T59f49(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T41f294(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T41f49(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1600f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1599f32(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1576f59(TC* ac, T0* C, T0* a1);
extern T1 T1576f59ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T958f61(TC* ac, T0* C, T0* a1);
extern T1 T958f61ot1(TC* ac, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T78f213(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T642f17(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1598f32(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T260f73(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T2026f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T246f18(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T248f41(TC* ac, T0* C, T0* a1);
extern T1 T248f41ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T76f74(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T500f10(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T2025f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T499f39(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T59f293(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T852c971(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T41f293(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T1600f18(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_unqualified_anchored_type */
extern T1 T1599f31(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T1576f65(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_unqualified_anchored_type */
extern T1 T958f67(TC* ac, T0* C);
/* ET_CLASS.has_unqualified_anchored_type */
extern T1 T78f212(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T642f16(TC* ac, T0* C);
/* ET_LIKE_FEATURE.has_unqualified_anchored_type */
extern T1 T1598f31(TC* ac, T0* C);
/* ET_TUPLE_TYPE.has_unqualified_anchored_type */
extern T1 T260f72(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_unqualified_anchored_type */
extern T1 T2026f8(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_unqualified_anchored_type */
extern T1 T246f17(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_unqualified_anchored_type */
extern T1 T248f40(TC* ac, T0* C);
/* ET_CLASS_TYPE.has_unqualified_anchored_type */
extern T1 T76f73(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T500f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T2025f8(TC* ac, T0* C);
/* ET_LIKE_CURRENT.has_unqualified_anchored_type */
extern T1 T499f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T259f70(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1587f32(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once */
extern T1 T1586f51(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T531f49(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T453f49(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T451f47(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T442f34(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T443f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav5a_error */
extern void T59f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav5a */
extern T0* T852c948(TC* ac, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T1592f16(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T1592f50(TC* ac, T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T1107f14(TC* ac, T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T1107f20(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T59f40(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav5a_error */
extern void T41f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vfav5_error */
extern T1 T41f40(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1592f14(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T1107f12(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1592f15(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T1107f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1k_error */
extern void T59f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1k */
extern T0* T852c970(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1k_error */
extern void T41f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T59f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T852c969(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T41f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T59f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T852c968(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T59f36(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T41f290(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T41f36(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1592f58(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T1107f111(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1592f19(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T1107f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T259f62(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1587f50(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1586f50(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T531f48(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T453f48(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T451f34(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T442f33(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T443f46(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T59f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T852c967(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T41f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T59f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T852c966(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T41f288(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1592f57(TC* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T1107f110(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1592f18(TC* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T1107f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T259f61(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1587f47(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1586f49(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T531f45(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_prefixable */
extern T1 T453f35(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_prefixable */
extern T1 T451f27(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_prefixable */
extern T1 T442f64(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_prefixable */
extern T1 T443f33(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav3a_error */
extern void T59f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav3a */
extern T0* T852c965(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav3a_error */
extern void T41f287(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T259f60(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1587f46(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1586f48(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T531f44(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T453f28(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T451f66(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T442f63(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T443f26(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T59f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T852c964(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T41f286(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T59f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T852c963(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T41f285(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T259f59(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1587f45(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1586f45(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T531f43(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T453f67(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T451f65(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T442f60(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T443f24(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T59f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T852c962(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T41f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME_LIST.head_has_alias_name */
extern T1 T979f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1592f20(TC* ac, T0* C, T0* a1);
extern T1 T1592f20ot1(TC* ac, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T1107f18(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.item */
extern T0* T979f5(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T59f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T852c961(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T59f48(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T41f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T41f48(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T259f50(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1587f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1586f38(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T531f38(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T453f58(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T451f56(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T442f55(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T443f57(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T259f49(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_deferred */
extern T1 T1587f37(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1586f37(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T531f36(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T453f56(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T451f54(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T442f51(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T443f53(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T510f43(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1403f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T510f42(TC* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1405f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T510f41(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T59f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T852c991(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T59f53(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T41f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T41f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1392f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1392f40(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T59f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T852c990(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T59f42(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T41f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T41f42(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T681f17(TC* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T981f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T981f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T681f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1495f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1495f10(TC* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T78f300(TC* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T264f10(TC* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T264f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T982f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T981f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T981f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T681f7(TC* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1641f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1641f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T681f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T681f35(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1839f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T510f26(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1641c2(TC* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1839c2(TC* ac);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T685f17(TC* ac, T0* C);
/* SPECIAL [ET_QUERY].keep_head */
extern void T978f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T978f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T685f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1496f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1496f10(TC* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T78f299(TC* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_attribute_count */
extern void T263f14(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_attribute_count */
extern void T263f13(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T263f12(TC* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T263f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T980f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T978f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T978f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T685f7(TC* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1640f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1640f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T685f36(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T685f35(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1836f1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T510f25(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1640c2(TC* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1836c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1392f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1392f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1744f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T685f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T685f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T980f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T978f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T685f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T685f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T681f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T681f24(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T982f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T981f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T681f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T681f10(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.flattened_feature */
extern T0* T1427f3(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.flattened_feature */
extern T0* T1643f2(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1590f59(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T259f38(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T521f50(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1589f54(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T524f52(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1587f55(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1586f59(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T531f57(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T453f37(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T451f36(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T442f36(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T443f35(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T510f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T510f52(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T59f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T852c1009(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_names */
extern T0* T852f254(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T59f64(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T41f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T41f64(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T59f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T852c1008(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T59f63(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T41f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T41f63(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.same_alias_names */
extern T1 T979f8(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.has_alias_name */
extern T1 T979f10(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.first */
extern T0* T979f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T59f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T852c1007(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T41f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T59f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T852c1006(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T41f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1427f33(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1427f32(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1590f123(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T259f126(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T521f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1589f119(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T524f116(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1587f116(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1586f122(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T531f119(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T453f114(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T451f111(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T442f119(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T443f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1590f114(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T259f117(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T521f104(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1589f110(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T524f107(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1587f107(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1586f113(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T531f110(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T453f105(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T451f102(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T442f110(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T443f98(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1590f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T259f110(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T521f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1589f104(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T524f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1587f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1586f107(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T531f104(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T453f97(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T451f96(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T442f104(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T443f93(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T510f54(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1643f32(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1427f36(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1643f31(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1427f35(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T643f10(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T643f8(TC* ac, T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T643f4(TC* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T643f3(TC* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T643f12(TC* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T970f1(TC* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T376f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T376f19(TC* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T133f7(TC* ac, T0* C);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T643f5(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1643f20(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1427f21(TC* ac, T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T643c9(TC* ac, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T643f13(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize_with_default */
extern void T970f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T376f18(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.remove */
extern void T643f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.id */
extern T6 T1590f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.id */
extern T6 T259f31(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.id */
extern T6 T521f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.id */
extern T6 T1589f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.id */
extern T6 T524f28(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.id */
extern T6 T1587f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.id */
extern T6 T1586f31(TC* ac, T0* C);
/* ET_DO_FUNCTION.id */
extern T6 T531f30(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.id */
extern T6 T453f2(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.id */
extern T6 T451f23(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.id */
extern T6 T442f28(TC* ac, T0* C);
/* ET_ATTRIBUTE.id */
extern T6 T443f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1590f115(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T259f118(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T521f105(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1589f111(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T524f108(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1587f108(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1586f114(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T531f111(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T453f106(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T451f103(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T442f111(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T443f99(TC* ac, T0* C, T6 a1);
/* ET_CLASS.register_feature */
extern void T78f303(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1590f90(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T259f92(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T521f84(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1589f84(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T524f85(TC* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1587f83(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1586f86(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T531f84(TC* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T453f84(TC* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T451f83(TC* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T442f85(TC* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T443f80(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1590f77(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1590f113(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_PROCEDURE.set_inline_separate_arguments */
extern void T1590f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_iteration_components */
extern void T1590f99(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1590f98(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_note */
extern void T1590f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1590f111(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1590f110(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1590f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1590f109(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1590f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1590f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1590f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1590f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1590f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1590c89(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1590f48(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T259f76(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T259f116(TC* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_inline_separate_arguments */
extern void T259f102(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_iteration_components */
extern void T259f101(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T259f100(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_note */
extern void T259f111(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T259f114(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T259f113(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T259f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T259f112(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T259f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T259f109(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T259f108(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T259f107(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T259f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T259f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T259c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T521f66(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_inline_separate_arguments */
extern void T521f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_iteration_components */
extern void T521f90(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T521f89(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_note */
extern void T521f98(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T521f102(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T521f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T521f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T521f100(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T521f99(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T521f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T521f96(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T521f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T521f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T521c80(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T521f80p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T77f269(TC* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T319c58(TC* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T521f42(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1589f70(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_inline_separate_arguments */
extern void T1589f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_iteration_components */
extern void T1589f93(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1589f92(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_note */
extern void T1589f105(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1589f108(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1589f107(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1589f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1589f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1589f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1589f103(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1589f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1589f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1589f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1589f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1589f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1589c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1589f35(TC* ac, T0* C);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T524f68(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_inline_separate_arguments */
extern void T524f92(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_iteration_components */
extern void T524f91(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T524f90(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_note */
extern void T524f102(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T524f105(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T524f104(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T524f93(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T524f103(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T524f94(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T524f100(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T524f99(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T524f98(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T524f97(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T524f96(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T524f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1587f67(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_inline_separate_arguments */
extern void T1587f93(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_iteration_components */
extern void T1587f92(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1587f91(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_note */
extern void T1587f101(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1587f105(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1587f104(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1587f94(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1587f103(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1587f102(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1587f95(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1587f99(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1587f98(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1587f97(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1587f96(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1587c82(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1587f82p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1587f49(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1586f71(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_inline_separate_arguments */
extern void T1586f96(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_iteration_components */
extern void T1586f95(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1586f94(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_note */
extern void T1586f108(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1586f111(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1586f110(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1586f97(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1586f109(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1586f98(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1586f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1586f105(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1586f104(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1586f102(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1586f101(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1586f100(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1586f99(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1586c85(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1586f41(TC* ac, T0* C);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T531f69(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_inline_separate_arguments */
extern void T531f94(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_iteration_components */
extern void T531f93(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T531f92(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_note */
extern void T531f105(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T531f108(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T531f107(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T531f95(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T531f106(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T531f96(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T531f103(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T531f102(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T531f101(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T531f100(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T531f99(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T531f98(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T531f97(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T531c83(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T531f51(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T453f69(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T453f103(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_inline_separate_arguments */
extern void T453f94(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_iteration_components */
extern void T453f93(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T453f92(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_note */
extern void T453f102(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T453f101(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T453f100(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T453f95(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T453f99(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T453f98(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T453f96(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T453c83(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T454c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T454f67(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T77f1558(TC* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T319c66(TC* ac);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T77f734(TC* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T319c70(TC* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T453f63(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T451f68(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_inline_separate_arguments */
extern void T451f93(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_iteration_components */
extern void T451f92(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T451f91(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_note */
extern void T451f100(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T451f99(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T451f98(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T451f94(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T451f97(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T451f95(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T451c82(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T451f61(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T442f69(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_inline_separate_arguments */
extern void T442f95(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_iteration_components */
extern void T442f94(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T442f93(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_note */
extern void T442f105(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T442f108(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T442f107(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T442f96(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T442f106(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T442f103(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T442f102(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T442f101(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T442f100(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T442f99(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T442f98(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T442f97(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T442c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T442f84p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T442f62(TC* ac, T0* C);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T443f63(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_inline_separate_arguments */
extern void T443f90(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_iteration_components */
extern void T443f89(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T443f88(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_note */
extern void T443f96(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T443f95(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T443f94(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T443f91(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_assigner */
extern void T443f92(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T443c79(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T443f56(TC* ac, T0* C);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1426f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.extended_name */
extern T0* T1590f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.extended_name */
extern T0* T259f17(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.extended_name */
extern T0* T521f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.extended_name */
extern T0* T1589f16(TC* ac, T0* C);
/* ET_DO_PROCEDURE.extended_name */
extern T0* T524f11(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.extended_name */
extern T0* T1587f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.extended_name */
extern T0* T1586f16(TC* ac, T0* C);
/* ET_DO_FUNCTION.extended_name */
extern T0* T531f18(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.extended_name */
extern T0* T453f15(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.extended_name */
extern T0* T451f14(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.extended_name */
extern T0* T442f18(TC* ac, T0* C);
/* ET_ATTRIBUTE.extended_name */
extern T0* T443f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1590f122(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T259f125(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T521f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1589f118(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T524f115(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1587f115(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1586f121(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T531f118(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T453f113(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T451f110(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T442f118(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T443f106(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1590f121(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T259f124(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T521f111(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1589f117(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T524f114(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1587f114(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1586f120(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T531f117(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T453f112(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T451f109(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T442f117(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T443f105(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1590f120(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T259f123(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T521f110(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1589f116(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T524f113(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1587f113(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1586f119(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T531f116(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T453f111(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T451f108(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T442f116(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T443f104(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1590f119(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T259f122(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T521f109(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1589f115(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T524f112(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1587f112(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1586f118(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T531f115(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T453f110(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T451f107(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T442f115(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T443f103(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1590f118(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T259f121(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T521f108(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1589f114(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T524f111(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1587f111(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1586f117(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T531f114(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T453f109(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T451f106(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T442f114(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T443f102(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1590f117(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T259f120(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T521f107(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1589f113(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T524f110(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1587f110(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1586f116(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T531f113(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T453f108(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T451f105(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T442f113(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T443f101(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1590f76(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T259f75(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T521f65(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1589f69(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T524f67(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1587f66(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1586f70(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T531f68(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T453f68(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T453f34(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T453f27(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T453f79(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T451f67(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T451f33(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T451f26(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T451f78(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T442f68(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T443f62(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.postconditions */
extern T0* T443f32(TC* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T443f25(TC* ac, T0* C);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T443f75(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1591c6(TC* ac, T0* a1, T0* a2);
/* ET_ALIAS_NAME_LIST.is_empty */
extern T1 T979f7(TC* ac, T0* C);
/* ET_PARENT_FEATURE.alias_names */
extern T0* T1426f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1410f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1410f60(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1410f59(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1410f58(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1410f57(TC* ac, T0* C);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T726f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T726f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1410f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1410f56(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1780f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1780f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1410f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1410f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1410f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1780f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1410f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1410f23(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T313f6(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T725f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T726f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T726f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T313f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T725c3(TC* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1410f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1410f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1410f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1410f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1410f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1780f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1410f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1410f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1410f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1780f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1410f33(TC* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T313c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T725f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T726c5(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1410f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1410f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1410f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1410f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1410f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1410f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1410f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1410f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1410f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1410f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1410f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1410f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1410f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1410f47(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T1142f14(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T298f12(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1426f18(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.clients */
extern T0* T1590f20(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.clients */
extern T0* T259f22(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.clients */
extern T0* T521f12(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.clients */
extern T0* T1589f21(TC* ac, T0* C);
/* ET_DO_PROCEDURE.clients */
extern T0* T524f14(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.clients */
extern T0* T1587f18(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.clients */
extern T0* T1586f23(TC* ac, T0* C);
/* ET_DO_FUNCTION.clients */
extern T0* T531f21(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.clients */
extern T0* T453f16(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.clients */
extern T0* T451f15(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.clients */
extern T0* T442f20(TC* ac, T0* C);
/* ET_ATTRIBUTE.clients */
extern T0* T443f14(TC* ac, T0* C);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1426f12(TC* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1426f11(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1426f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T59f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T852c1005(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T59f62(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T41f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T41f62(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1426f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1410f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1410f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1410f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1410f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1410f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1410f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T725f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T726f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1410f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1410f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1410f22(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.version */
extern T6 T1590f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.version */
extern T6 T259f32(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.version */
extern T6 T521f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.version */
extern T6 T1589f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE.version */
extern T6 T524f29(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.version */
extern T6 T1587f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.version */
extern T6 T1586f32(TC* ac, T0* C);
/* ET_DO_FUNCTION.version */
extern T6 T531f31(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.version */
extern T6 T453f25(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.version */
extern T6 T451f24(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.version */
extern T6 T442f29(TC* ac, T0* C);
/* ET_ATTRIBUTE.version */
extern T6 T443f22(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T510f57(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T59f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T852c1021(TC* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T852f208(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T59f67(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T41f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T41f67(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1426f15(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T510f60(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T59f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T852c1030(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T59f72(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T41f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T41f72(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T59f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T852c1029(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T41f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T510f59(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T59f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T852c1028(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T59f71(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T41f348(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T41f71(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T59f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T852c1027(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T41f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T59f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T852c1026(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T59f70(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T41f346(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T41f70(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T510f58(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1p_error */
extern void T59f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1p */
extern T0* T852c947(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.upper_name */
extern T0* T260f118(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1p_error */
extern void T41f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1n_error */
extern void T59f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1n */
extern T0* T852c945(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1n_error */
extern void T41f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4h_error */
extern void T59f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4h */
extern T0* T852c1025(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4h_error */
extern void T41f345(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1590f75(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T521f64(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1589f68(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T524f66(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1m_error */
extern void T59f242(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav1m */
extern T0* T852c942(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav1m_error */
extern void T41f242(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4g_error */
extern void T59f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4g */
extern T0* T852c1024(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4g_error */
extern void T41f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1590f74(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T521f63(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1589f67(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T524f65(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav3e_error */
extern void T59f239(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav3e */
extern T0* T852c939(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav3e_error */
extern void T41f239(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav4f_error */
extern void T59f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4f */
extern T0* T852c1023(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4f_error */
extern void T41f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav2e_error */
extern void T59f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav2e */
extern T0* T852c936(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav2e_error */
extern void T41f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1590f73(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T521f62(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1589f66(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T524f64(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T59f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T852c1022(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T41f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1427f20(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T510f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1398f14(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1756f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1756f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1398f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1757f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1757f6(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T510f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.aggregated_clients */
extern T0* T510f31ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T939f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1399f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1399f66(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1399f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1399f64(TC* ac, T0* C);
/* SPECIAL [ET_CLASS].keep_head */
extern void T1428f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS].set_count */
extern void T1428f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1399f63(TC* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1761f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1761f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1399f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1399f62(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1759f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1759f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1399f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1399f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1399f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1759f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1399f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1759f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1399f31(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T1142f18(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T1142f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1399f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1399f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1399f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1399f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1399f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1759f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1399f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1399f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1399f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1759f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1399f36(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1927f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T2067f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1927f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1759f17(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1399f75(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T2067f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1927f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1759f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1399f74(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T2067f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1927f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1759f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1399f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1399f35(TC* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T2067f3(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1759f8(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T2067f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1927f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1759f15(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1399f73(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1927f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T2067c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1399f33(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1759c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1399f39(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1927c8(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1927f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1927f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T2067c9(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1399f50(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1399f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1399f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1399f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1399f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1399f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1399f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1399f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1399f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1399f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1399f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1760f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1761f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1399f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1399f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1399f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1399f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1760f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1761f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1761f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1399f54(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T1142f8(TC* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T299f4(TC* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T1142f12(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T298f5(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T298f9(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.is_none */
extern T1 T1142f7(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T298f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1398f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1398f7(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.add_inherited_clients_to_list */
extern void T510f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_EXPORT.clients */
extern T0* T1222f8(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1581f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1222f7(TC* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1581f6(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T1222f6(TC* ac, T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T494f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1398f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1755f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1756f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1756f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1398f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1755f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1756f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1398f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1398f9(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T510f51(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T510f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1409f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1590f91(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1409f23(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1408f56(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1408f22(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1408f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T59f593(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T852c1265(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T59f182(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T41f593(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T41f182(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1408f9(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1408f49(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1408f8(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_64_type */
extern T0* T192f74(TC* ac, T0* C);
/* ET_SYSTEM.real_64_type */
extern T0* T46f80(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_type */
extern T0* T63f77(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T77f955(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1408f48(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1408f51(TC* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1408f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T59f594(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T852c1266(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.to_text */
extern T0* T1548f12(TC* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1548f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T59f183(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T41f594(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T41f183(TC* ac, T0* C, T0* a1);
/* ARRAY [ET_TYPE].item */
extern T0* T250f4(TC* ac, T0* C, T6 a1);
/* ARRAY [ET_TYPE].count */
extern T6 T250f5(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found_item */
extern T0* T2014f28(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_item */
extern T0* T2014f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found */
extern T1 T2014f29(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search */
extern void T2014f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search_position */
extern void T2014f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].hash_position */
extern T6 T2014f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_item */
extern T0* T2014f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_item */
extern T6 T2014f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_item */
extern T6 T2014f26(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T77f1539(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T77f1537(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T77f1535(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T77f1482(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T77f1478(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T77f1476(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T77f1474(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T77f1054(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_type */
extern T0* T192f80(TC* ac, T0* C);
/* ET_SYSTEM.string_type */
extern T0* T46f86(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_type */
extern T0* T63f83(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T77f1052(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T77f1471(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T77f1469(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T77f1525(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T77f1523(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T77f1521(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T77f1467(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_minimum_number_feature_name */
extern T0* T77f1518(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_maximum_number_feature_name */
extern T0* T77f1516(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_less_equal_feature_name */
extern T0* T77f1514(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_less_feature_name */
extern T0* T77f1512(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_equal_feature_name */
extern T0* T77f1510(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_greater_feature_name */
extern T0* T77f1508(TC* ac, T0* C);
/* ET_ECF_LIBRARY.boolean_type */
extern T0* T192f33(TC* ac, T0* C);
/* ET_SYSTEM.boolean_type */
extern T0* T46f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.boolean_type */
extern T0* T63f36(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ieee_is_equal_feature_name */
extern T0* T77f1506(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T77f1461(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T77f1503(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T77f1501(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T77f1499(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1408f50(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].force_last */
extern void T2014f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_put */
extern void T2014f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].force */
extern void T1750f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].fill_with */
extern void T1748f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].extend */
extern void T1748f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_put */
extern void T2014f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_put */
extern void T2014f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].resize */
extern void T2014f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_resize */
extern void T2014f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].special_integer_ */
extern T0* T2014f31(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_resize */
extern void T2014f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1750f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1748f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_resize */
extern void T2014f48(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2074f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T2071f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_resize */
extern void T2014f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_modulus */
extern T6 T2014f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_capacity */
extern T6 T2014f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_put */
extern void T2014f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].force */
extern void T2074f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].fill_with */
extern void T2071f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].extend */
extern void T2071f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].unset_found_item */
extern void T2014f39(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T77f1497(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].force_last */
extern void T1779f43(TC* ac, T0* C, T0* a1, T8 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_put */
extern void T1779f49(TC* ac, T0* C, T8 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_put */
extern void T1779f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_put */
extern void T1779f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_item */
extern T6 T1779f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].hash_position */
extern T6 T1779f23(TC* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f29(TC* ac, volatile T8* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].resize */
extern void T1779f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_resize */
extern void T1779f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].special_integer_ */
extern T0* T1779f31(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_resize */
extern void T1779f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_resize */
extern void T1779f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T2013f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T2015f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_item */
extern T8 T1779f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_item */
extern T6 T1779f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_resize */
extern void T1779f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_modulus */
extern T6 T1779f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_capacity */
extern T6 T1779f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_put */
extern void T1779f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].force */
extern void T2013f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].fill_with */
extern void T2015f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].extend */
extern void T2015f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search_position */
extern void T1779f44(TC* ac, T0* C, T8 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].unset_found_item */
extern void T1779f40(TC* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_key_equality_tester */
extern void T2014f35(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1408f10(TC* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1393c2(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_map */
extern T0* T2014c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_with_equality_testers */
extern void T2014f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_sparse_container */
extern void T2014f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_internal_cursor */
extern void T2014f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_cursor */
extern T0* T2014f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make */
extern T0* T2075c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_slots */
extern void T2014f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_clashes */
extern void T2014f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_key_storage */
extern void T2014f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T1750f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make_empty */
extern T0* T1748c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T1750c3(TC* ac);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_item_storage */
extern void T2014f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make */
extern T0* T2074f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make_empty */
extern T0* T2071c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].default_create */
extern T0* T2074c3(TC* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found_item */
extern T0* T1779f20(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_item */
extern T0* T1779f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found */
extern T1 T1779f32(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search */
extern void T1779f42(TC* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1408f47(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T77f1020(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T77f1494(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T77f1492(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T77f1490(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_type */
extern T0* T192f72(TC* ac, T0* C);
/* ET_SYSTEM.real_32_type */
extern T0* T46f78(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_type */
extern T0* T63f75(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T77f952(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_type */
extern T0* T192f64(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_type */
extern T0* T46f71(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_type */
extern T0* T63f67(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T77f949(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_type */
extern T0* T192f62(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_type */
extern T0* T46f69(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_type */
extern T0* T63f65(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T77f946(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_type */
extern T0* T192f60(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_type */
extern T0* T46f67(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_type */
extern T0* T63f63(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T77f943(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_type */
extern T0* T192f58(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_type */
extern T0* T46f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_type */
extern T0* T63f61(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T77f940(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_type */
extern T0* T192f53(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_type */
extern T0* T46f60(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_type */
extern T0* T63f56(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T77f937(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_type */
extern T0* T192f51(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_type */
extern T0* T46f58(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_type */
extern T0* T63f54(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T77f934(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_type */
extern T0* T192f49(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_type */
extern T0* T46f56(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_type */
extern T0* T63f52(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T77f931(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1408f46(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T77f1488(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T77f1486(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T77f1484(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T77f1028(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T77f1026(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T77f1465(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T77f1463(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T77f1459(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T77f1457(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_type */
extern T0* T192f46(TC* ac, T0* C);
/* ET_SYSTEM.integer_type */
extern T0* T46f1(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_type */
extern T0* T63f49(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T77f1455(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T77f1453(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T77f1451(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T77f1449(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T77f1447(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T77f1445(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T77f1443(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T77f1441(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T77f1439(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T77f1437(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T77f1435(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T77f1433(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1408f45(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_ECF_LIBRARY.integer_8_type */
extern T0* T192f47(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_type */
extern T0* T46f54(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_type */
extern T0* T63f50(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T77f928(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1408f44(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T77f1430(TC* ac, T0* C);
/* ET_ECF_LIBRARY.double_type */
extern T0* T192f39(TC* ac, T0* C);
/* ET_SYSTEM.double_type */
extern T0* T46f47(TC* ac, T0* C);
/* ET_ECF_SYSTEM.double_type */
extern T0* T63f42(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T77f1427(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_type */
extern T0* T192f71(TC* ac, T0* C);
/* ET_SYSTEM.real_type */
extern T0* T46f77(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_type */
extern T0* T63f74(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T77f1425(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T77f1423(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T77f1421(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T77f1419(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T77f1417(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T77f1415(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T77f1413(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T77f1411(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T77f1409(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T77f1407(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T77f1405(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T77f1403(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T77f1401(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T77f1398(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T77f1396(TC* ac, T0* C);
/* ET_ECF_LIBRARY.pointer_type */
extern T0* T192f68(TC* ac, T0* C);
/* ET_SYSTEM.pointer_type */
extern T0* T46f8(TC* ac, T0* C);
/* ET_ECF_SYSTEM.pointer_type */
extern T0* T63f71(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T77f10(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T77f1394(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T77f1392(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T77f1390(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T77f1388(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T77f1386(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T77f1384(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T77f1382(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T77f1380(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T77f1378(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T77f1376(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T77f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T77f1373(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T77f1371(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T77f1369(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1408f43(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1408f11(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.name */
extern T0* T1576f8(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.name */
extern T0* T958f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T248f2(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T77f1367(TC* ac, T0* C);
/* ET_CLASS.formal_parameter_type */
extern T0* T78f104(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T957f11(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T957f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T957f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1696f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1695f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1695f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T957f9(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1696f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1695f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T957c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T957f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T957f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1697c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1696f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1695c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1696c3(TC* ac);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1408f42(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T77f1365(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1408f41(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T77f1363(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T77f1361(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T77f1359(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T77f1357(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T77f1355(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T77f1353(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T77f1351(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T77f1349(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T77f1347(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T77f1345(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T77f1343(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T77f1341(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T77f1339(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T77f1337(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T77f1335(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T77f1333(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T77f927(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1408f40(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T77f1330(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T77f1328(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T77f1327(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T77f1326(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T77f1324(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T77f1322(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T77f1320(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T77f1318(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T77f1316(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T77f1314(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T77f1312(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T77f1310(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T77f1308(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T77f1306(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T77f1304(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T77f1302(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T77f1300(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T77f1298(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T77f1296(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T77f1294(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T77f1292(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T77f1290(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T77f1288(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T77f1286(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T77f1284(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T77f1282(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T77f1280(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T77f1278(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T77f1276(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T77f1274(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T77f1272(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T77f1270(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T77f1268(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T77f1266(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T77f1264(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T77f1262(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T77f1260(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_string_8_type */
extern T0* T192f83(TC* ac, T0* C);
/* ET_SYSTEM.detachable_string_8_type */
extern T0* T46f89(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_string_8_type */
extern T0* T63f86(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T77f1258(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T77f1257(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T77f1256(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_any_type */
extern T0* T192f20(TC* ac, T0* C);
/* ET_SYSTEM.detachable_any_type */
extern T0* T46f33(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_any_type */
extern T0* T63f23(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T77f1255(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T77f1253(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T77f1251(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T77f1249(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T77f1247(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T77f1245(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T77f1243(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T77f1241(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T77f1239(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T77f1237(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T77f1235(TC* ac, T0* C);
/* ET_ECF_LIBRARY.special_any_type */
extern T0* T192f77(TC* ac, T0* C);
/* ET_SYSTEM.special_any_type */
extern T0* T46f83(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_any_type */
extern T0* T63f80(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T77f1233(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T77f1231(TC* ac, T0* C);
/* ET_ECF_LIBRARY.type_detachable_any_type */
extern T0* T192f90(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_any_type */
extern T0* T46f94(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_any_type */
extern T0* T63f93(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T77f1230(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T77f1229(TC* ac, T0* C);
/* ET_ECF_LIBRARY.special_detachable_any_type */
extern T0* T192f78(TC* ac, T0* C);
/* ET_SYSTEM.special_detachable_any_type */
extern T0* T46f84(TC* ac, T0* C);
/* ET_ECF_SYSTEM.special_detachable_any_type */
extern T0* T63f81(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T77f1228(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T77f1227(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T77f1225(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T77f1223(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T77f1221(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T77f1219(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T77f1217(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T77f1215(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T77f1213(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T77f1211(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T77f1209(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T77f1207(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T77f1205(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T77f1203(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T77f1201(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T77f1199(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T77f1197(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T77f1195(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T77f1193(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T77f1191(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T77f1189(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T77f996(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T77f1186(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T77f1184(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T77f1182(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T77f1180(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T77f1178(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T77f1176(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T77f1174(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T77f1172(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T77f1170(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T77f1168(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T77f1166(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T77f988(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_8_of_type_feature_name */
extern T0* T77f1163(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T77f1161(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_8_type */
extern T0* T192f82(TC* ac, T0* C);
/* ET_SYSTEM.string_8_type */
extern T0* T46f88(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_type */
extern T0* T63f85(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_8_of_type_feature_name */
extern T0* T77f1159(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T77f1157(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T77f1155(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T77f1153(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T77f1151(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T77f1149(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T77f1147(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T77f1145(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T77f1143(TC* ac, T0* C);
/* ET_ECF_LIBRARY.any_type */
extern T0* T192f19(TC* ac, T0* C);
/* ET_SYSTEM.any_type */
extern T0* T46f12(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_type */
extern T0* T63f22(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T77f1141(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T77f1139(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T77f1137(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T77f1135(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T77f1133(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T77f1131(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T77f1129(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T77f1127(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T77f1125(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T77f1123(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T77f1121(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T77f926(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1408f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T77f1119(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T77f1118(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_is_object_id_of_current_feature_name */
extern T0* T77f1116(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T77f1115(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_current_object_id_feature_name */
extern T0* T77f1113(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T77f925(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1408f38(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T77f1111(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1408f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.exception_manager_type */
extern T0* T192f42(TC* ac, T0* C);
/* ET_SYSTEM.exception_manager_type */
extern T0* T46f50(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_manager_type */
extern T0* T63f45(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T77f1108(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T77f924(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1408f36(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T77f1105(TC* ac, T0* C);
/* ET_ECF_LIBRARY.exception_type */
extern T0* T192f40(TC* ac, T0* C);
/* ET_SYSTEM.exception_type */
extern T0* T46f48(TC* ac, T0* C);
/* ET_ECF_SYSTEM.exception_type */
extern T0* T63f43(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T77f1103(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T77f1101(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T77f1099(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_type_exception_type */
extern T0* T192f91(TC* ac, T0* C);
/* ET_SYSTEM.detachable_type_exception_type */
extern T0* T46f95(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_type_exception_type */
extern T0* T63f94(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T77f1097(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T77f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T77f1094(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T77f1092(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T77f1090(TC* ac, T0* C);
/* ET_ECF_LIBRARY.type_detachable_exception_type */
extern T0* T192f92(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_exception_type */
extern T0* T46f96(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_exception_type */
extern T0* T63f95(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T77f1088(TC* ac, T0* C);
/* ET_ECF_LIBRARY.detachable_exception_type */
extern T0* T192f41(TC* ac, T0* C);
/* ET_SYSTEM.detachable_exception_type */
extern T0* T46f49(TC* ac, T0* C);
/* ET_ECF_SYSTEM.detachable_exception_type */
extern T0* T63f44(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T77f1086(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1408f35(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T77f1083(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T77f1081(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T77f923(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1408f34(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T77f1078(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T77f1076(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T77f1074(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T77f1072(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T77f1070(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T77f1068(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T77f1066(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T77f922(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1408f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.immutable_string_32_type */
extern T0* T192f45(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_32_type */
extern T0* T46f53(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_32_type */
extern T0* T63f48(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T77f1063(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T77f1061(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T77f1059(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T77f921(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1408f32(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T77f1056(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T77f1050(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T77f1048(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1408f31(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T77f920(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1408f30(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T77f1044(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T77f1042(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T77f1040(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T77f1038(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T77f1036(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T77f1034(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T77f1032(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1408f29(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T77f919(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T77f916(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1408f28(TC* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T77f1024(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T77f1022(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1408f27(TC* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_ECF_LIBRARY.character_8_type */
extern T0* T192f35(TC* ac, T0* C);
/* ET_SYSTEM.character_8_type */
extern T0* T46f44(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_type */
extern T0* T63f38(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1408f7(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T77f913(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1408f26(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T77f1018(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T77f1016(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T77f1014(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T77f1012(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T77f1009(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T77f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T77f1005(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T77f962(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T77f1003(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1408f25(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T77f1000(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T77f998(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T77f994(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T77f992(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T77f990(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T77f986(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T77f984(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1408f24(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T77f981(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T77f977(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T77f975(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T77f973(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T77f971(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T77f968(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T77f966(TC* ac, T0* C);
/* ET_ECF_LIBRARY.type_detachable_like_current_type */
extern T0* T192f93(TC* ac, T0* C);
/* ET_SYSTEM.type_detachable_like_current_type */
extern T0* T46f97(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_detachable_like_current_type */
extern T0* T63f96(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T77f964(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T77f961(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T77f959(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1408f5(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1408f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T270f98(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T270f106(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_components_validity */
extern void T270f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.unfolded_cursor_name */
extern T0* T1337f3(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unfolded_cursor_name */
extern T0* T1085f4(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.unfolded_cursor_name */
extern T0* T1347f2(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.unfolded_cursor_name */
extern T0* T1088f3(TC* ac, T0* C);
/* ET_IDENTIFIER.set_iteration_item */
extern void T189f139(TC* ac, T0* C, T1 a1);
/* ET_QUANTIFIER_EXPRESSION.item_name */
extern T0* T1337f2(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.item_name */
extern T0* T1085f2(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.item_name */
extern T0* T1347f1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.item_name */
extern T0* T1088f1(TC* ac, T0* C);
/* ET_ITERATION_COMPONENT_LIST.iteration_component */
extern T0* T447f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T270f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T59f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T852c955(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T59f41(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T41f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T41f41(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T270f56(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T270f78(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T69f41(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T52f14(TC* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T52f9(TC* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T52f8(TC* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T52f7(TC* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T52f6(TC* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T52f5(TC* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T52f13(TC* ac, T0* C);
/* UT_VERSION.major */
extern T6 T52f12(TC* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T52f11(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.older_ise_version */
extern T1 T265f43(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T270f53(TC* ac, T0* C);
/* UT_VERSION.make */
extern T0* T52c19(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_IDENTIFIER.set_object_test_local */
extern void T189f141(TC* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T530f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T270f108(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T270f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1423f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T270f119(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T270f118(TC* ac, T0* C, T0* a1);
extern T1 T270f118ot1(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T277f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T277f25ot1(TC* ac, T0* a1);
extern T1 T277f25ot2(TC* ac, T0* a1);
extern T1 T277f25ot3(TC* ac, T0* a1);
extern T1 T277f25ot4(TC* ac, T0* a1);
extern T1 T277f25ot5(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T277f17(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1576f40(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T958f41(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1600f48(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1599f51(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1598f49(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T248f46(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_like_current */
extern T1 T499f45(TC* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T78f206(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T260f78(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T76f85(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1576f36(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1576f43(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f43ot1(TC* ac, T0* a1);
extern T1 T1576f43ot2(TC* ac, T0* a1);
extern T1 T1576f43ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1600f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f54ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1599f57(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f57ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1598f55(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T248f52(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f52ot1(TC* ac, T0* a1);
extern T1 T248f52ot2(TC* ac, T0* a1);
extern T1 T248f52ot3(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T499f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T78f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T78f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T260f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T260f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T76f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T76f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T958f63(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f63ot1(TC* ac, T0* a1);
extern T1 T958f63ot2(TC* ac, T0* a1);
extern T1 T958f63ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T958f37(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameters */
extern T0* T260f1(TC* ac, T0* C);
/* ET_CLASS.formal_parameters */
extern T0* T78f29(TC* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T76f3(TC* ac, T0* C);
/* ET_CLASS.shallow_named_type */
extern T0* T78f205(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1600f47(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1599f50(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1598f48(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T260f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T248f45(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T76f79(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T499f44(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T270f77(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T270f49(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T285f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T697f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T696f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T696f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T285f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T697f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T696f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T285f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T285f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T277f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T270f54(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T285f14(TC* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T696f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T696f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T285f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T698f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T698f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T285f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T285f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T74f156(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T74f161(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T74f166(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T74f173(TC* ac, T0* C, T0* a1);
extern T1 T74f173ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1541f7(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T520f8(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T348f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T74f172(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T74f171(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T74f77(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T74f170(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T74f169(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T74f168(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1590f70(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1590f47(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T74f161p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_components_validity */
extern void T74f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T74f138(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T74f70(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T74f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T74f147(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T74f146(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_attached_index */
extern void T1844f12(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_attached_index */
extern void T262f11(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T74f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T271f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T2057f21(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_index */
extern void T423f27(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T2100f7(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T2130f27(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T2129f29(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T2128f25(TC* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1633f15(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_CURSOR.set_index */
extern void T1625f28(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1624f31(TC* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1622f28(TC* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T1082f50(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T959f12(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1631f53(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1630f62(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1629f57(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1628f54(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1627f63(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1626f58(TC* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1632f14(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T1315f29(TC* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1882f11(TC* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T1118f38(TC* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T405f36(TC* ac, T0* C, T6 a1);
/* ET_QUANTIFIER_EXPRESSION.set_index */
extern void T1337f44(TC* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T1085f52(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T1287f37(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1566f49(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1565f49(TC* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T702f33(TC* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1623f36(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T1353f36(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T370f34(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T394f31(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1620f28(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T1619f29(TC* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T764f27(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1612f28(TC* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1615f28(TC* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1614f28(TC* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1613f28(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.set_index */
extern void T1260f31(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T1244f34(TC* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T1074f36(TC* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1569f45(TC* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1568f45(TC* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T359f40(TC* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1350f36(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1611f33(TC* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1560f56(TC* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1559f52(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T1558f52(TC* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1564f69(TC* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1563f69(TC* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1562f69(TC* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1561f69(TC* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T454f71(TC* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1557f53(TC* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1571f54(TC* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1570f53(TC* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T774f34(TC* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1621f32(TC* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1616f32(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T1115f31(TC* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T363f30(TC* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T334f39(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T271f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T670f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T669f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T669f9(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T271f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T670c3(TC* ac);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T271f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T670f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T669f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T271f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T271f6(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.index */
extern T6 T959f4(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.index */
extern T6 T1632f4(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.index */
extern T6 T1882f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T74f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T74f145(TC* ac, T0* C, T0* a1);
extern T1 T74f145ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T74f112(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T74f71(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T74f84(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T91f1301(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T91f1346(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T91f1232(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dedent */
extern void T91f730(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation */
extern void T91f718(TC* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T91f717(TC* ac, T0* C);
/* ET_C_GENERATOR.print_argument_name */
extern void T91f791(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T385f37(TC* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T385f46(TC* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T335f9(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T335f11(TC* ac, T0* C, T7 a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T91f577(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T353f3(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_current_name */
extern void T91f793(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T91f1256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T91f742(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.id */
extern T6 T502f1(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.id */
extern T6 T501f1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.id */
extern T6 T310f1(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.id */
extern T6 T396f1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T229f4(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T335f7(TC* ac, T0* C, T2 a1);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T335f8(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T335f3(TC* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T91f716(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T91f685(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T91f1233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_external_routine */
extern void T91f1381(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T91f1397(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T385f36(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T385f45(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T385f45p1(TC* ac, T0* C);
/* ET_C_GENERATOR.print_temporary_variable_declarations */
extern void T91f731(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T91f788(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].wipe_out */
extern void T339f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [BOOLEAN].move_all_cursors_after */
extern void T339f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_next_cursor */
extern void T762f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].set_after */
extern void T762f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T337f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T757f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T757f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T337f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T759f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T759f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T91f757(TC* ac, T0* C);
/* ET_C_GENERATOR.print_temp_name */
extern void T91f721(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [BOOLEAN].item */
extern T1 T339f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T336f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T337f9(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T59f387(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T41f387(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T91f1396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T551f12(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T157f24(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T157f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T551f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T157f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T551f9(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T551f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T551f11(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T157f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T157f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T551f6(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T157f9(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T551c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_declaration_type_cast_from_c */
extern void T91f1000(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T91f797(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_boolean */
extern T1 T502f67(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_boolean */
extern T1 T501f68(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_boolean */
extern T1 T396f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_boolean */
extern T1 T310f32(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T229f52(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T335f6(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T91f1395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T91f295(TC* ac, T0* C, T0* a1);
extern T1 T91f295ot1(TC* ac, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T373f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T2130f8(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T2129f24(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T2128f11(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T2057f9(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_current */
extern T1 T959f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1564f12(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1563f12(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1562f12(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1561f12(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T454f9(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1560f21(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1559f21(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1557f14(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_current */
extern T1 T1625f5(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_current */
extern T1 T1337f15(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T1085f18(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1624f5(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T702f8(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1623f10(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1612f5(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T774f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1631f18(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1630f20(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1629f38(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1628f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1627f44(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1626f19(TC* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T1118f11(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T1353f11(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T1287f11(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T1315f5(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T1115f5(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T394f12(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1622f5(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1621f5(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1620f5(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T1619f5(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T764f5(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1616f20(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1615f5(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1614f5(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1613f5(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1611f9(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T1350f9(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_current */
extern T1 T1260f10(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T1244f10(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1571f25(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1570f25(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1569f9(TC* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T1074f9(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1568f9(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1566f27(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1565f27(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T1558f6(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T370f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T363f9(TC* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T334f5(TC* ac, T0* C);
/* ET_CURRENT.is_current */
extern T1 T359f6(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_current */
extern T1 T423f5(TC* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T189f9(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_current */
extern T1 T373f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T405f13(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T157f15(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.split */
extern T0* T2030f6(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T2030f7(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T157f18(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T552f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T552c3(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].has */
extern T1 T2126f25(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].search_position */
extern void T2126f31(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].hash_position */
extern T6 T2126f19(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].key_storage_item */
extern T10 T2126f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].item_storage_item */
extern T10 T2126f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].clashes_item */
extern T6 T2126f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].key_equality_tester */
extern T0* T2126f28(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].slots_item */
extern T6 T2126f24(TC* ac, T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T2030f5(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T157c17(TC* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T157f22(TC* ac, T0* C, T0* a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T2030c9(TC* ac, T0* a1);
/* ST_SPLITTER.set_separators */
extern void T2030f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].put */
extern void T2126f30(TC* ac, T0* C, T10 a1);
/* DS_HASH_SET [NATURAL_32].slots_put */
extern void T2126f40(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].clashes_put */
extern void T2126f39(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].item_storage_put */
extern void T2126f38(TC* ac, T0* C, T10 a1, T6 a2);
/* DS_HASH_SET [NATURAL_32].unset_found_item */
extern void T2126f36(TC* ac, T0* C);
/* DS_HASH_SET [NATURAL_32].make */
extern T0* T2126c29(TC* ac, T6 a1);
/* DS_HASH_SET [NATURAL_32].set_internal_cursor */
extern void T2126f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [NATURAL_32].new_cursor */
extern T0* T2126f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [NATURAL_32].make */
extern T0* T2173c4(TC* ac, T0* a1);
/* DS_HASH_SET [NATURAL_32].make_slots */
extern void T2126f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].new_modulus */
extern T6 T2126f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_clashes */
extern void T2126f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_key_storage */
extern void T2126f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [NATURAL_32].make_item_storage */
extern void T2126f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T91f1394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T91f1393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T91f1392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T91f1391(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T91f1402(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T91f1440(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T351f13(TC* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T789f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T789f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T351f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T791f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T791f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T91f995(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T91f836(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T91f754(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.is_attached */
extern T1 T400f20(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_attached */
extern T1 T502f34(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_attached */
extern T1 T501f34(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_attached */
extern T1 T310f37(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_attached */
extern T1 T396f37(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_attached */
extern T1 T229f32(TC* ac, T0* C);
/* ET_C_GENERATOR.print_expression */
extern void T91f784(TC* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T2057f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1409f118(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T270f461(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T270f464(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T270f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T270f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1423f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T294f61(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T288f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T74f570(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T74f575(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T74f227(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T74f347(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T91f1602(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T91f1604(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T2130f28(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T294f65(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T288f71(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1409f124(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T270f467(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T270f470(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T270f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T270f224ot1(TC* ac, T0* a1);
extern T1 T270f224ot2(TC* ac, T0* a1);
extern T1 T270f224ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_adapted_base_classes */
extern void T270f285(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force_last */
extern void T300f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].force */
extern void T733f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].fill_with */
extern void T734f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extend */
extern void T734f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].resize */
extern void T300f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T733f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].aliased_resized_area */
extern T0* T734f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_capacity */
extern T6 T300f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].extendible */
extern T1 T300f6(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgmc0f_error */
extern void T59f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgmc0f */
extern T0* T852c1140(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgmc0f_error */
extern void T41f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T59f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T852c1077(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T59f105(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T41f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T41f105(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T270f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T270f401(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T59f499(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T852c1172(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T59f148(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T41f499(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T41f148(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T2130f25(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T959f10(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1621f25(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.arguments_count */
extern T6 T1616f25(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuta4gb_error */
extern void T59f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta4gb */
extern T0* T852c1171(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T59f147(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta4gb_error */
extern void T41f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta4g_error */
extern T1 T41f147(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_controlled */
extern T1 T247f50(TC* ac, T0* C);
extern T1 T247f50ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_controlled */
extern T1 T1576f41(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_controlled */
extern T1 T958f42(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_controlled */
extern T1 T1598f80(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_controlled */
extern T1 T1600f78(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_controlled */
extern T1 T1599f81(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_controlled */
extern T1 T499f4(TC* ac, T0* C);
/* ET_LIKE_N.is_controlled */
extern T1 T1548f32(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_controlled */
extern T1 T248f73(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_controlled */
extern T1 T260f107(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_controlled */
extern T1 T76f124(TC* ac, T0* C);
/* ET_CLASS.is_controlled */
extern T1 T78f249(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate */
extern T1 T247f45(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T247f32(TC* ac, T0* C, T0* a1);
extern T1 T247f32ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T1576f25(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f25ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_separate */
extern T1 T1576f34(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_separate */
extern T1 T958f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_type_separate_with_type_mark */
extern T1 T958f23(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f23ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate_with_type_mark */
extern T1 T1598f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate_with_type_mark */
extern T1 T1600f34(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f34ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate_with_type_mark */
extern T1 T1599f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f29ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate_with_type_mark */
extern T1 T499f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_separate_with_type_mark */
extern T1 T260f41(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_separate_with_type_mark */
extern T1 T78f118(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_separate_with_type_mark */
extern T1 T76f41(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_separate_with_type_mark */
extern T1 T1548f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T248f36(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f36ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T59f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T852c1170(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T59f146(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T41f497(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T41f146(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T247f14(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_tuple_label_parenthesis_call_validity */
extern void T270f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T270f284ot1(TC* ac, T0* a1);
extern T1 T270f284ot2(TC* ac, T0* a1);
extern T1 T270f284ot3(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T270f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T270f373ot1(TC* ac, T0* a1);
extern T1 T270f373ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T270f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T270f372ot1(TC* ac, T0* a1);
extern T1 T270f372ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T59f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T852c1075(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T1032f22(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T1032f7(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T1032f9(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T59f104(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T41f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T41f104(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T270f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T270f318(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T270f370(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T270f400(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T270f404(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T270f404ot1(TC* ac, T0* a1);
extern T1 T270f404ot2(TC* ac, T0* a1);
extern T1 T270f404ot3(TC* ac, T0* a1);
extern T1 T270f404ot4(TC* ac, T0* a1);
extern T1 T270f404ot5(TC* ac, T0* a1);
extern T1 T270f404ot6(TC* ac, T0* a1);
extern T1 T270f404ot7(TC* ac, T0* a1);
extern T1 T270f404ot8(TC* ac, T0* a1);
extern T1 T270f404ot9(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar4ga_error */
extern void T59f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar4ga */
extern T0* T852c1109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4g_error */
extern T1 T59f124(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4ga_error */
extern void T41f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vuar4g_error */
extern T1 T41f124(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_nested_non_separate_reference_attributes */
extern T1 T1576f58(TC* ac, T0* C, T0* a1);
extern T1 T1576f58ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.has_nested_non_separate_reference_attributes */
extern T1 T1924f9(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.has_nested_non_separate_reference_attributes */
extern T1 T1743f12(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T1600f76(TC* ac, T0* C, T0* a1);
extern T1 T1600f76ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T1599f79(TC* ac, T0* C, T0* a1);
extern T1 T1599f79ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.has_nested_non_separate_reference_attributes */
extern T1 T1598f78(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_nested_non_separate_reference_attributes */
extern T1 T499f71(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_has_nested_non_separate_reference_attributes */
extern T1 T260f112(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_has_nested_non_separate_reference_attributes */
extern T1 T76f129(TC* ac, T0* C);
/* ET_CLASS.context_has_nested_non_separate_reference_attributes */
extern T1 T78f256(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.has_nested_non_separate_reference_attributes */
extern T1 T247f54(TC* ac, T0* C);
extern T1 T247f54ot1(TC* ac, T0* a1);
/* ET_LIKE_N.has_nested_non_separate_reference_attributes */
extern T1 T1548f35(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.has_nested_non_separate_reference_attributes */
extern T1 T958f59(TC* ac, T0* C, T0* a1);
extern T1 T958f59ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T248f70(TC* ac, T0* C, T0* a1);
extern T1 T248f70ot1(TC* ac, T0* a1);
/* ET_TUPLE_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T260f104(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_non_separate_reference_attributes */
extern T1 T260f110(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_separate */
extern T1 T1598f9(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_separate */
extern T1 T260f43(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_separate */
extern T1 T248f23(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_separate */
extern T1 T76f43(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_separate */
extern T1 T1600f23(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_separate */
extern T1 T1599f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_separate */
extern T1 T499f75(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_nested_non_separate_reference_attributes */
extern T1 T78f239(TC* ac, T0* C, T0* a1);
/* ET_CLASS.has_non_separate_reference_attributes */
extern T1 T78f246(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T76f111(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_non_separate_reference_attributes */
extern T1 T76f120(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T247f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar3ga_error */
extern void T59f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar3ga */
extern T0* T852c1107(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T59f123(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar3ga_error */
extern void T41f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vuar3g_error */
extern T1 T41f123(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T247f46(TC* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T247f31(TC* ac, T0* C, T0* a1);
extern T1 T247f31ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1576f24(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f24ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T958f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f22ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1598f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1600f33(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f33ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1599f28(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f28ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T499f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T260f40(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T78f117(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T76f40(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1548f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T248f35(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f35ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T59f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T852c1186(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T59f154(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T41f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T41f154(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T59f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T852c1185(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T41f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T59f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T852c1184(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T59f153(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T41f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T41f153(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_converted_target_infix_expression_validity */
extern void T270f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1616f36(TC* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T247f49(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T2057c20(TC* ac, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1616f35(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T2041f19(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T360f25(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T270f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T270f462(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T2128c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T270f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_convert_to_expression */
extern T0* T516f373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T2130c26(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T2130f7(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T2129f7(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T2128f18(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T2057f10(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.position */
extern T0* T423f6(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.position */
extern T0* T1625f8(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.position */
extern T0* T1337f16(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T1085f19(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1624f6(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T702f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T1050f28(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T1032f13(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T1029f12(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T1058f6(TC* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T1074f7(TC* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T334f12(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1623f11(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1612f8(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T774f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1631f37(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T1029f9(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1630f43(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1629f17(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1628f20(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1627f22(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1626f39(TC* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T1118f12(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1632f5(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1882f3(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1631f32(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1631f40(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1630f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1630f46(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1629f35(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1629f42(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1628f33(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1628f41(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1627f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1627f47(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1626f36(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1626f43(TC* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T1118f24(TC* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T189f105(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T1353f13(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.item */
extern T0* T1353f8(TC* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T1353f7(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T370f14(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T370f17(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1287f13(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1287f13p1(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.item */
extern T0* T1287f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T1287f7(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T1315f6(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T1115f7(TC* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T394f13(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1622f6(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1621f7(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1620f6(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T1619f7(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T764f7(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1616f7(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1615f8(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1614f8(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1613f8(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1611f11(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1350f10(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.position */
extern T0* T1260f7(TC* ac, T0* C);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T1848f3(TC* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T1244f12(TC* ac, T0* C);
/* ET_RESULT.position */
extern T0* T334f8(TC* ac, T0* C);
/* ET_VOID.position */
extern T0* T1074f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T363f10(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1584f7(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_to */
extern T1 T1583f6(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T490f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T270f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_creation_vape_validity */
extern void T270f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2a_error */
extern void T59f580(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2a */
extern T0* T852c1253(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape2_error */
extern T1 T59f177(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape2a_error */
extern void T41f580(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape2_error */
extern T1 T41f177(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.as_feature */
extern T0* T1268f17(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1590f81(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T259f82(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1589f76(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1587f74(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1586f78(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T531f76(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T453f74(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T451f73(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T442f76(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T443f70(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T524f74(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T521f72(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.add_non_descendant_caller_clients_to */
extern void T270f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.force_first */
extern void T298f17(TC* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.resize */
extern void T298f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T732f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T731f4(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.new_capacity */
extern T6 T298f11(TC* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.capacity */
extern T6 T298f10(TC* ac, T0* C);
/* ET_CLIENTS.is_none_or_unknown */
extern T1 T1142f10(TC* ac, T0* C);
/* ET_CLIENT_LIST.is_none_or_unknown */
extern T1 T298f7(TC* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T1268f20(TC* ac, T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T1268f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.add_creation_clients_to */
extern void T1590f124(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.add_creation_clients_to */
extern void T1184f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.add_creation_clients_to */
extern void T1181f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENT_LIST.append_first */
extern void T298f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.any_clients */
extern T0* T192f24(TC* ac, T0* C);
/* ET_SYSTEM.any_clients */
extern T0* T46f36(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_clients */
extern T0* T63f27(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.add_creation_clients_to */
extern void T521f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.add_creation_clients_to */
extern void T1589f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.add_creation_clients_to */
extern void T524f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENT_LIST.wipe_out */
extern void T298f16(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].keep_head */
extern void T732f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].keep_head */
extern void T731f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].set_count */
extern void T731f10(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.is_feature */
extern T1 T1268f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_feature */
extern T1 T1590f80(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_feature */
extern T1 T259f81(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_feature */
extern T1 T1589f75(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_feature */
extern T1 T1587f73(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_feature */
extern T1 T1586f77(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_feature */
extern T1 T531f75(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_feature */
extern T1 T453f73(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_feature */
extern T1 T451f72(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_feature */
extern T1 T442f75(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_feature */
extern T1 T443f69(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_feature */
extern T1 T524f73(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_feature */
extern T1 T521f71(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T59f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T852c1224(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T41f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONVERT_PROCEDURE.name */
extern T0* T1584f1(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.name */
extern T0* T1583f1(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.name */
extern T0* T490f1(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_from_expression */
extern T0* T516f372(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T2129c28(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_PROCEDURE.is_convert_from */
extern T1 T1584f8(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1583f7(TC* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T490f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2130f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2129f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2128f12(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T2057f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T423f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T189f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1564f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.real_64_convert_feature */
extern T0* T192f75(TC* ac, T0* C);
/* ET_SYSTEM.real_64_convert_feature */
extern T0* T46f81(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_64_convert_feature */
extern T0* T63f78(TC* ac, T0* C);
/* ET_ECF_LIBRARY.real_32_convert_feature */
extern T0* T192f73(TC* ac, T0* C);
/* ET_SYSTEM.real_32_convert_feature */
extern T0* T46f79(TC* ac, T0* C);
/* ET_ECF_SYSTEM.real_32_convert_feature */
extern T0* T63f76(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_64_convert_feature */
extern T0* T192f65(TC* ac, T0* C);
/* ET_SYSTEM.natural_64_convert_feature */
extern T0* T46f72(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_64_convert_feature */
extern T0* T63f68(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1564f38(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1564f44(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T1071f105(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_32_convert_feature */
extern T0* T192f63(TC* ac, T0* C);
/* ET_SYSTEM.natural_32_convert_feature */
extern T0* T46f70(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_32_convert_feature */
extern T0* T63f66(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1564f37(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_16_convert_feature */
extern T0* T192f61(TC* ac, T0* C);
/* ET_SYSTEM.natural_16_convert_feature */
extern T0* T46f68(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_16_convert_feature */
extern T0* T63f64(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1564f36(TC* ac, T0* C);
/* ET_ECF_LIBRARY.natural_8_convert_feature */
extern T0* T192f59(TC* ac, T0* C);
/* ET_SYSTEM.natural_8_convert_feature */
extern T0* T46f66(TC* ac, T0* C);
/* ET_ECF_SYSTEM.natural_8_convert_feature */
extern T0* T63f62(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1564f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_64_convert_feature */
extern T0* T192f54(TC* ac, T0* C);
/* ET_SYSTEM.integer_64_convert_feature */
extern T0* T46f61(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_64_convert_feature */
extern T0* T63f57(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1564f34(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1564f51(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_32_convert_feature */
extern T0* T192f52(TC* ac, T0* C);
/* ET_SYSTEM.integer_32_convert_feature */
extern T0* T46f59(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_32_convert_feature */
extern T0* T63f55(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1564f33(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1564f50(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_16_convert_feature */
extern T0* T192f50(TC* ac, T0* C);
/* ET_SYSTEM.integer_16_convert_feature */
extern T0* T46f57(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_16_convert_feature */
extern T0* T63f53(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1564f32(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1564f49(TC* ac, T0* C);
/* ET_ECF_LIBRARY.integer_8_convert_feature */
extern T0* T192f48(TC* ac, T0* C);
/* ET_SYSTEM.integer_8_convert_feature */
extern T0* T46f55(TC* ac, T0* C);
/* ET_ECF_SYSTEM.integer_8_convert_feature */
extern T0* T63f51(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1564f31(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1564f48(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1563f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1563f38(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1563f44(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1563f37(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1563f36(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1563f35(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1563f34(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1563f51(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1563f33(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1563f50(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1563f32(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1563f49(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1563f31(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1563f48(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1562f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1562f38(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1562f44(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1562f37(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1562f36(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1562f35(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1562f34(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1562f51(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1562f33(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1562f50(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1562f32(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1562f49(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1562f31(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1562f48(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1561f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1561f38(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1561f44(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1561f37(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1561f36(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1561f35(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1561f34(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1561f51(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1561f33(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1561f50(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1561f32(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1561f49(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1561f31(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1561f48(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T454f52(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T454f33(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T454f47(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T454f32(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T454f31(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T454f30(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T454f29(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T454f45(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T454f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T454f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T454f27(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T454f44(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T454f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T454f43(TC* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1560f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.string_32_convert_feature */
extern T0* T192f86(TC* ac, T0* C);
/* ET_SYSTEM.string_32_convert_feature */
extern T0* T46f92(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_convert_feature */
extern T0* T63f89(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_32 */
extern T1 T1560f35(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_invalid_code */
extern T1 T1560f40(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_32_type */
extern T0* T192f85(TC* ac, T0* C);
/* ET_SYSTEM.string_32_type */
extern T0* T46f91(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_32_type */
extern T0* T63f88(TC* ac, T0* C);
/* ET_ECF_LIBRARY.string_8_convert_feature */
extern T0* T192f84(TC* ac, T0* C);
/* ET_SYSTEM.string_8_convert_feature */
extern T0* T46f90(TC* ac, T0* C);
/* ET_ECF_SYSTEM.string_8_convert_feature */
extern T0* T63f87(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_string_8 */
extern T1 T1560f34(TC* ac, T0* C);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1560f48(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1559f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.is_string_32 */
extern T1 T1559f32(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_string_8 */
extern T1 T1559f31(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1559f44(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1557f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.character_32_convert_feature */
extern T0* T192f38(TC* ac, T0* C);
/* ET_SYSTEM.character_32_convert_feature */
extern T0* T46f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_convert_feature */
extern T0* T63f41(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1557f31(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_8_convert_feature */
extern T0* T192f36(TC* ac, T0* C);
/* ET_SYSTEM.character_8_convert_feature */
extern T0* T46f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_8_convert_feature */
extern T0* T63f39(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1557f30(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.manifest_constant_convert_feature */
extern T0* T1625f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1337f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1085f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1624f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T702f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1623f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1612f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T774f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1631f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1630f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1629f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1628f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1627f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1626f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T1118f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1353f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T370f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T1287f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1315f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1115f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T394f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1622f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1621f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1620f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1619f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T764f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1616f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1615f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1614f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1613f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1611f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1350f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INSPECT_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1260f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1244f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T405f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1571f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1571f29(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T1571f35(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1571f28(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1570f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1570f29(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_invalid_code */
extern T1 T1570f35(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1570f28(TC* ac, T0* C);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T359f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T334f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1569f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T1074f31(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1568f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1566f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1565f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1558f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.is_string_32 */
extern T1 T1558f30(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_invalid_code */
extern T1 T1558f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_string_8 */
extern T1 T1558f29(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T1558f43(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T363f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T270f68(TC* ac, T0* C);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T277f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T76f112(TC* ac, T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T78f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1002f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T77f1562(TC* ac, T0* C);
/* ET_CLASS.context_is_type_separate */
extern T1 T78f252(TC* ac, T0* C);
/* ET_CLASS_TYPE.context_is_type_separate */
extern T1 T76f127(TC* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T78f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T247f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T247f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_actual_argument_validity */
extern void T270f443(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T270f443ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T270f91(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T295f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T718f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T717f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T717f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T295f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T718f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T717f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T295f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T295f8(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T287f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T705f12(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T703f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T703f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T705f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1497f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1497f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T294f59(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T288f64(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else_symbol */
extern T1 T1032f21(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_or_else */
extern T1 T1032f20(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T294f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T293f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T357f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T357f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T798f14(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T357f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T357f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T798f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T798f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T357f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T798f10(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T357f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T357f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T357f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T357f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T357f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T357f82(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T357f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T357f66(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T357f65(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T357f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T357f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T357f83(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T357f78(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T357f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T357f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T357f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T357f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T357f24(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T357f55(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T798f5(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T357f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T798f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T798f13(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T357f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T357f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T798f6(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T357f33(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T357f37(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T798c9(TC* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T357f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T357f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T357f35(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T357f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T357f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T357f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T357f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T357f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T357f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T357f46(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T357f64(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T357f63(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T357f62(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T270f52(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T295f13(TC* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T717f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T717f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T295f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T719f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T719f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T295f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T293c11(TC* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T357c43(TC* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T357f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T357f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T357f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T357f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T357f51(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T295f10(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T288f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T287f3(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies_symbol */
extern T1 T1032f19(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_implies */
extern T1 T1032f18(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then_symbol */
extern T1 T1032f17(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_infix_and_then */
extern T1 T1032f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T59f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T852c1183(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T41f510(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T59f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T852c1182(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T41f509(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T59f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T852c1181(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T41f508(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T2082f37(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.precursor_keyword */
extern T0* T1618f20(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.precursor_keyword */
extern T0* T1617f20(TC* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T1050f32(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T1058f34(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T1071f107(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T662f105(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T1032f15(TC* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T189f97(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T2082f36(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_precursor */
extern T1 T1618f19(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_precursor */
extern T1 T1617f19(TC* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T1050f31(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T1058f33(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T1071f106(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T662f104(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T1032f14(TC* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T189f96(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T959f13(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T2040f9(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T1115f34(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T363f33(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T361f18(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1833f18(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T774f37(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T1611f37(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T1610f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T1608f22(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T1350f40(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T2041c17(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T370c40(TC* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T370f40p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T806f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T804c5(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T370f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T806c3(TC* ac);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T370f8(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T370f33(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T806f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T804f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T804f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T370c31(TC* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T370f31p1(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T2041f22(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T2041f16(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T2041f21(TC* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T2041f21p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T77f232(TC* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T661c95(TC* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T77f231(TC* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T661c94(TC* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T2041f15(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T270f71(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T2057f16(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_empty_actual_argument */
extern T1 T423f17(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T2130f19(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T2129f19(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T2128f15(TC* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T189f98(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1564f42(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1563f42(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1562f42(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1561f42(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T454f37(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1560f37(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1559f34(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1557f33(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_empty_actual_argument */
extern T1 T1625f20(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_empty_actual_argument */
extern T1 T1337f33(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T1085f35(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1624f22(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T702f24(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1623f27(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1612f20(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T774f22(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1631f34(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1630f41(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1629f37(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1628f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1627f42(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1626f38(TC* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T1118f26(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1353f26(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T370f27(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T1287f27(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T1315f22(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T1115f24(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T394f22(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1622f20(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1621f23(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1620f21(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T1619f20(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T764f20(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1616f23(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1615f20(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1614f20(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1613f20(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1611f24(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1350f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T363f25(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_empty_actual_argument */
extern T1 T1260f23(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T1244f26(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T405f30(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1571f31(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1570f31(TC* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T359f30(TC* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T334f30(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1569f29(TC* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T1074f28(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1568f29(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1566f31(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1565f31(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1558f32(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T2041f8(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T360f11(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T2129f15(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T405f23(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1606f13(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1605f13(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.arguments */
extern T0* T1833f1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments */
extern T0* T774f3(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.arguments */
extern T0* T1611f5(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.arguments */
extern T0* T1610f4(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.arguments */
extern T0* T1608f2(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.arguments */
extern T0* T1350f5(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T2129f1(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T405f12(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T2125f3(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T2125f2(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T405f10(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T2125f4(TC* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T359f23(TC* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T198c11(TC* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T198f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL.last_position */
extern T0* T661f5(TC* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T661f4(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.xor_symbol_name */
extern T0* T77f316(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.there_exists_symbol_name */
extern T0* T77f313(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_else_symbol_name */
extern T0* T77f304(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.or_symbol_name */
extern T0* T77f303(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol_name */
extern T0* T77f302(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.not_symbol_name */
extern T0* T77f299(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implies_symbol_name */
extern T0* T77f290(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.for_all_symbol_name */
extern T0* T77f287(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol_name */
extern T0* T77f278(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bar_symbol_name */
extern T0* T77f277(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_then_symbol_name */
extern T0* T77f271(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.and_symbol_name */
extern T0* T77f270(TC* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T189f50(TC* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T319f10(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T405f11(TC* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1598f38(TC* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T189f45(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T248f39(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1600f44(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1599f38(TC* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T499f37(TC* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T260f28(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T2026f5(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T77f1561(TC* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T2125c5(TC* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1576f81(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.last_leaf */
extern T0* T1364f10(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.last_leaf */
extern T0* T1577f7(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.last_leaf */
extern T0* T1161f11(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.renames */
extern T0* T1576f83(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1158f11(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T958f83(TC* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1846f10(TC* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1596f10(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T246f12(TC* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T76f28(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T500f6(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T2025f5(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T642f15(TC* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T78f69(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T406f3(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T360f10(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T405f8(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T406f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.name */
extern T0* T1606f17(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1606f20(TC* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T334f34(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1606f21(TC* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T334f32(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1606f15(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.name */
extern T0* T1605f16(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1605f19(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1605f20(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1605f14(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.name */
extern T0* T1833f2(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.name */
extern T0* T774f2(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.precursor_keyword */
extern T0* T1611f4(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1610f13(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.precursor_keyword */
extern T0* T1608f3(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1350f12(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T270f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape1b_error */
extern void T59f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape1b */
extern T0* T852c1187(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape1_error */
extern T1 T59f155(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape1b_error */
extern void T41f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape1_error */
extern T1 T41f155(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T59f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T852c1143(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T41f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1590f85(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T521f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1589f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T524f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T259f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1587f78(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1586f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T531f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T453f78(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T451f77(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T442f79(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T443f74(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuta4ga_error */
extern void T59f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta4ga */
extern T0* T852c1169(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta4ga_error */
extern void T41f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T59f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T852c1168(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T41f495(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T363f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T959c11(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T361f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T2040c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T363c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T363f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T270f371(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T2082f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T2082c49(TC* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T2082f52(TC* ac, T0* C);
/* ET_IDENTIFIER.set_tuple_label */
extern void T189f133(TC* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T59f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T852c1139(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T59f136(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T41f466(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T41f136(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T270f307(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T270f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T270f399ot1(TC* ac, T0* a1);
extern T1 T270f399ot2(TC* ac, T0* a1);
extern T1 T270f399ot3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.controlled_type_modifier */
extern T0* T77f1552(TC* ac, T0* C);
/* ET_LIKE_CURRENT.set_controlled */
extern void T499f97(TC* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.separate_type_modifier */
extern T0* T77f27(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_separate */
extern T1 T1576f48(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_separate */
extern T1 T958f49(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_separate */
extern T1 T78f143(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.convert_feature */
extern T0* T2130f4(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.convert_feature */
extern T0* T2129f6(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.convert_feature */
extern T0* T2128f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T774f23(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T2130f24(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T959f8(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1621f24(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.parenthesis_call */
extern T0* T1616f24(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T1115f22(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T363f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T270f283(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T270f283ot1(TC* ac, T0* a1);
extern T1 T270f283ot2(TC* ac, T0* a1);
extern T1 T270f283ot3(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T1833f3(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.parenthesis_call */
extern T0* T774f4(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.parenthesis_call */
extern T0* T361f4(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T270f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T293f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T357f28(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_stable_attribute */
extern T1 T259f80(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_stable_attribute */
extern T1 T1587f72(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_stable_attribute */
extern T1 T1586f76(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_stable_attribute */
extern T1 T531f74(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_stable_attribute */
extern T1 T453f72(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_stable_attribute */
extern T1 T451f71(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_stable_attribute */
extern T1 T442f74(TC* ac, T0* C);
/* ET_NOTE_LIST.has_tagged_note_term_value */
extern T1 T1298f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.has_note_term_value */
extern T1 T1309f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.has_note_term_value */
extern T1 T189f119(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1564f59(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T1071f131(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T1564f62(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1563f59(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T1563f62(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1562f59(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T1562f62(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_note_term_value */
extern T1 T1561f59(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T1561f62(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_note_term_value */
extern T1 T454f59(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T454f62(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_note_term_value */
extern T1 T1560f45(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T1560f49(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_note_term_value */
extern T1 T1559f41(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T1559f45(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T1557f44(TC* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f16(TC* ac, volatile T3* C);
/* ET_CUSTOM_ATTRIBUTE.has_note_term_value */
extern T1 T1575f5(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T1571f44(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.has_note_term_value */
extern T1 T1570f43(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_note_term_value */
extern T1 T1569f35(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T1569f38(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_note_term_value */
extern T1 T1568f35(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T1568f38(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_note_term_value */
extern T1 T1566f37(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T1566f40(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_note_term_value */
extern T1 T1565f37(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T1565f40(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_note_term_value */
extern T1 T1558f40(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T1558f44(TC* ac, T0* C);
/* ET_NOTE_LIST.string_ */
extern T0* T1298f8(TC* ac, T0* C);
/* ET_NOTE.note_clause */
extern T0* T1574f2(TC* ac, T0* C);
/* ET_TAGGED_NOTE.note_clause */
extern T0* T1573f3(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_stable_attribute */
extern T1 T443f68(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T270f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T270f329(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape1a_error */
extern void T59f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape1a */
extern T0* T852c1191(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape1a_error */
extern void T41f518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T59f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T852c1167(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T59f92(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vucr0d_error */
extern void T41f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T41f92(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T259f63(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T259f51(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T259f67(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1590f51(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T521f68(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1589f72(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T524f70(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1587f69(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1586f73(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T531f71(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T453f61(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T451f59(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T442f71(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T443f65(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_instance_free */
extern T1 T1327f12(TC* ac, T0* C);
/* ET_IDENTIFIER.is_instance_free */
extern T1 T189f91(TC* ac, T0* C);
/* ET_IDENTIFIER.is_feature_name */
extern T1 T189f94(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T454f21(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T1085f31(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T1284f12(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T1284f10(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.assertion */
extern T0* T189f90(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1564f13(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1563f13(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1562f13(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1561f13(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T454f20(TC* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1560f14(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1559f14(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1557f12(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.assertion */
extern T0* T1625f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.assertion */
extern T0* T1337f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T1085f30(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1624f17(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T702f19(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1623f22(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1612f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T774f17(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1636f3(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1631f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1630f32(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1629f30(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1628f28(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1627f33(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1626f31(TC* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T1118f20(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T1353f21(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T370f22(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T1287f22(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T1315f17(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T1115f17(TC* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T394f17(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1622f15(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1621f17(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1620f16(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T1619f15(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T764f15(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1616f17(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1615f15(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1614f15(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1613f15(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1611f19(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1350f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T363f19(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.assertion */
extern T0* T1260f17(TC* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T1244f21(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T405f25(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.assertion */
extern T0* T1595f3(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1571f22(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1570f22(TC* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T359f25(TC* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T334f25(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1569f23(TC* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T1074f23(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1568f23(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1566f24(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1565f24(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T1558f23(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.item */
extern T0* T1284f11(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_EXPRESSION.expression */
extern T0* T1848f1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iteration_expression */
extern T0* T1085f25(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T702f20(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T774f18(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T2041f11(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T360f18(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T2057f8(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T2130f13(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T2129f12(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T2128f8(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_instance_free */
extern T1 T423f13(TC* ac, T0* C);
/* ET_CALL_AGENT.is_instance_free */
extern T1 T1118f21(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T2099f7(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T1102f13(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T1633f13(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T1082f45(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T1632f11(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T1882f8(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T370f23(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T1115f18(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_instance_free */
extern T1 T394f18(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T764f16(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T363f20(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T405f26(TC* ac, T0* C);
/* ET_CURRENT.is_instance_free */
extern T1 T359f26(TC* ac, T0* C);
/* ET_RESULT.is_instance_free */
extern T1 T334f26(TC* ac, T0* C);
/* ET_VOID.is_instance_free */
extern T1 T1074f24(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1631f28(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1630f33(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1629f31(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1628f29(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1627f34(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1626f32(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_instance_free */
extern T1 T1625f16(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T1624f18(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T1623f23(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_instance_free */
extern T1 T1622f16(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T1621f18(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_instance_free */
extern T1 T1620f17(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T1619f16(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T1616f18(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T1615f16(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_instance_free */
extern T1 T1614f16(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T1613f16(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T1612f16(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T1611f20(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1571f23(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1570f23(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_instance_free */
extern T1 T1569f24(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_instance_free */
extern T1 T1568f24(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T1566f25(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T1565f25(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T1564f14(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1563f14(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1562f14(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T1561f14(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_instance_free */
extern T1 T1560f15(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T1559f15(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T1558f24(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1557f13(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T1353f22(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T1350f20(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_instance_free */
extern T1 T1337f30(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.variant_part */
extern T0* T1337f28(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.invariant_part */
extern T0* T1337f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.until_conditional */
extern T0* T1337f21(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T1287f24(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T1287f15(TC* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T1315f19(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_instance_free */
extern T1 T1260f20(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.is_instance_free */
extern T1 T1378f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.is_instance_free */
extern T1 T1375f9(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.item */
extern T0* T1378f3(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_EXPRESSION.expression */
extern T0* T1260f18(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_instance_free */
extern T1 T1244f23(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T1193f9(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T1190f10(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T1190f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T1193f4(TC* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T1244f14(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.expression */
extern T0* T1636f4(TC* ac, T0* C);
extern T1 T1636f4ot1(TC* ac, T0* a1);
/* ET_CLASS_ASSERTION.expression */
extern T0* T1595f4(TC* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T1327f8(TC* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T1327f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T259f66(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1590f50(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T521f67(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1589f71(TC* ac, T0* C);
/* ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T524f69(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1587f68(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1586f72(TC* ac, T0* C);
/* ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T531f70(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T453f60(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T451f58(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T442f70(TC* ac, T0* C);
/* ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T443f64(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_instance_free */
extern T1 T305f8(TC* ac, T0* C);
/* ET_PRECONDITIONS.assertion */
extern T0* T305f7(TC* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T305f11(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T259f65(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.string_ */
extern T0* T259f69(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T259f63p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T259f52(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T259f68(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1590f52(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T521f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1589f48(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T524f35(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T1587f48(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T1586f53(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T531f50(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T453f62(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T451f60(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T442f61(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T443f55(TC* ac, T0* C);
/* ET_POSTCONDITIONS.has_class_assertion */
extern T1 T1327f7(TC* ac, T0* C);
/* ET_CALL_AGENT.is_class_assertion */
extern T1 T1118f22(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T1115f19(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T1085f32(TC* ac, T0* C);
/* ET_VOID.is_class_assertion */
extern T1 T1074f25(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T774f19(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T764f17(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T702f21(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T454f22(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T405f27(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_class_assertion */
extern T1 T394f19(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T370f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T363f21(TC* ac, T0* C);
/* ET_CURRENT.is_class_assertion */
extern T1 T359f27(TC* ac, T0* C);
/* ET_RESULT.is_class_assertion */
extern T1 T334f27(TC* ac, T0* C);
/* ET_IDENTIFIER.is_class_assertion */
extern T1 T189f92(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T1636f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1631f29(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1630f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1629f32(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1628f30(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1627f37(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1626f33(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_class_assertion */
extern T1 T1625f17(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T1624f19(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T1623f24(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T1622f17(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T1621f19(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T1620f18(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T1619f17(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T1616f19(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T1615f17(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T1614f17(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T1613f17(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T1612f17(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T1611f21(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.is_class_assertion */
extern T1 T1595f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1571f24(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1570f24(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T1569f25(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T1568f25(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T1566f26(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T1565f26(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1564f19(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1563f19(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1562f19(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1561f19(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_class_assertion */
extern T1 T1560f20(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T1559f20(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T1558f25(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1557f18(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T1353f23(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T1350f21(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_class_assertion */
extern T1 T1337f29(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T1287f23(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T1315f18(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_class_assertion */
extern T1 T1260f19(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_class_assertion */
extern T1 T1244f22(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_static */
extern T1 T1587f51(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T1587f38(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_static */
extern T1 T1586f52(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_static_mark */
extern T1 T1586f42(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_static */
extern T1 T531f54(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_static_mark */
extern T1 T531f41(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T453f29(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T453f51(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T453f29p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T453f52(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T451f28(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T451f50(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T451f28p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T451f51(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T442f65(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T442f53(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_static */
extern T1 T443f27(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_static_mark */
extern T1 T443f49(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T774c31(TC* ac, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1833f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T774f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1833f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.target */
extern T0* T361f1(TC* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T2082f50(TC* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1618f45(TC* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1617f45(TC* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T1050f63(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T1058f64(TC* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T1071f158(TC* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T662f134(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T270f306(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T270f397(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T282f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T684f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T686f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T686f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T282f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T684f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T686f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T282f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T282f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T685f14(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T270f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1591f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T189f113(TC* ac, T0* C, T0* a1);
extern T1 T189f113ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T685f38(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T681f38(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T270f440(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T283f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T688f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T690f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T690f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T283f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T688f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T690f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T283f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T283f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T689f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T689f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T689f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T689f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T2144f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T689f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T689f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T2144f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T2144f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T689f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T689f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T689f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T689f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T689f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T689f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T689f9(TC* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T247f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T270f70(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T283f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T690f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T690f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T283f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T691f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T691f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T283f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T689c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T689f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T689f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T2144c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T283f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T685f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T685f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T685f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1496f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T685f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T685f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T681f37(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T681f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T681f40(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1495f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T681f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T681f42(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1590f36(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T521f40(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1589f36(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T524f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.adapted_name */
extern T0* T270f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.renames */
extern T0* T1924f2(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T685f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_queries */
extern void T260f140(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_queries */
extern void T1924f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_queries */
extern void T76f150(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_queries */
extern void T78f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T263f18(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T263f18ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_names */
extern T0* T259f89(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T259f90(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_names */
extern T0* T1587f80(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1587f81(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_names */
extern T0* T1586f83(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1586f84(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_names */
extern T0* T531f81(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T531f82(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_names */
extern T0* T453f81(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T453f82(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_names */
extern T0* T451f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T451f81(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_names */
extern T0* T442f81(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T442f82(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_names */
extern T0* T443f77(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T443f78(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T259f88(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1587f79(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1586f82(TC* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T531f80(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T453f80(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T451f79(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T442f80(TC* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T443f76(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T270f69(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T282f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T686f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T686f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T282f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T687f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T687f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T282f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T685c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T685f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T685f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1496c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T282f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1616f34(TC* ac, T0* C, T1 a1);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1621f34(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T78f192(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T270f59(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.has_validity_error */
extern T1 T1268f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_validity_error */
extern T1 T1590f28(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_validity_error */
extern T1 T259f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_validity_error */
extern T1 T1589f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_validity_error */
extern T1 T524f16(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_validity_error */
extern T1 T1587f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.has_validity_error */
extern T1 T1586f30(TC* ac, T0* C);
/* ET_DO_FUNCTION.has_validity_error */
extern T1 T531f29(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_validity_error */
extern T1 T453f24(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_validity_error */
extern T1 T451f22(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_validity_error */
extern T1 T442f27(TC* ac, T0* C);
/* ET_ATTRIBUTE.has_validity_error */
extern T1 T443f20(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_validity_error */
extern T1 T521f14(TC* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T1268f25(TC* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T1268f24(TC* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T1268f23(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_orphan_actual_arguments_validity */
extern void T270f280(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_adapted_base_classes_validity */
extern void T270f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.new_adapted_base_classes */
extern T0* T270f58(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].remove_last */
extern void T300f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].keep_head */
extern void T734f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_count */
extern void T734f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].move_last_cursors_after */
extern void T300f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_next_cursor */
extern void T735f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_after */
extern void T735f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].last */
extern T0* T300f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].make */
extern T0* T676c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].set_internal_cursor */
extern void T676f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_CLASS].new_cursor */
extern T0* T676f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_CLASS].make */
extern T0* T1494c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].make */
extern T0* T1491f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_CLASS].make_empty */
extern T0* T1493c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_CLASS].default_create */
extern T0* T1491c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].is_empty */
extern T1 T300f9(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T270f51(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression */
extern T0* T2130f2(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.target */
extern T0* T959f1(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression */
extern T0* T1621f3(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.left */
extern T0* T1616f2(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.target */
extern T0* T1115f2(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.target */
extern T0* T363f1(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T74f579(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T74f582(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T74f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f247ot1(TC* ac, T0* a1);
extern T1 T74f247ot2(TC* ac, T0* a1);
extern T1 T74f247ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_adapted_base_classes */
extern void T74f234(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T74f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T74f457(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f457ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T74f380(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T502f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_query_call */
extern void T273f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].force */
extern void T656f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_put */
extern void T656f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1483f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1479f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1479f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_put */
extern void T656f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_put */
extern void T656f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_item */
extern T6 T656f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_item */
extern T6 T656f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].hash_position */
extern T6 T656f26(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.hash_code */
extern T6 T2082f34(TC* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.hash_code */
extern T6 T1618f17(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.hash_code */
extern T6 T1617f17(TC* ac, T0* C);
/* ET_FREE_OPERATOR.hash_code */
extern T6 T1050f2(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.hash_code */
extern T6 T1058f26(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.hash_code */
extern T6 T1071f99(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.hash_code */
extern T6 T662f99(TC* ac, T0* C);
/* ET_IDENTIFIER.hash_code */
extern T6 T189f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].resize */
extern void T656f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].clashes_resize */
extern void T656f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T656f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_resize */
extern void T656f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1483f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1479f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_resize */
extern void T656f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1486f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].aliased_resized_area */
extern T0* T1484f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T656f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].slots_resize */
extern void T656f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_modulus */
extern T6 T656f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_capacity */
extern T6 T656f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_put */
extern void T656f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].force */
extern void T1486f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].fill_with */
extern void T1484f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].extend */
extern void T1484f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].search_position */
extern void T656f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].unset_found_item */
extern void T656f37(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_query_call */
extern void T242f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T303f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T501f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T310f79(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T396f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T229f78(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T303c15(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_tuple_label_parenthesis_call_validity */
extern void T74f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f233ot1(TC* ac, T0* a1);
extern T1 T74f233ot2(TC* ac, T0* a1);
extern T1 T74f233ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T74f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T74f356ot1(TC* ac, T0* a1);
extern T1 T74f356ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T74f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f355ot1(TC* ac, T0* a1);
extern T1 T74f355ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T74f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T74f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T502f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.put_procedure_call */
extern void T273f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].force */
extern void T655f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_put */
extern void T655f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_put */
extern void T655f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_put */
extern void T655f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_item */
extern T6 T655f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_item */
extern T6 T655f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].hash_position */
extern T6 T655f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].resize */
extern void T655f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].clashes_resize */
extern void T655f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].special_integer_ */
extern T0* T655f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_resize */
extern void T655f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_resize */
extern void T655f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1482f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].aliased_resized_area */
extern T0* T1477f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].key_storage_item */
extern T0* T655f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].slots_resize */
extern void T655f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_modulus */
extern T6 T655f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_capacity */
extern T6 T655f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_put */
extern void T655f45(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].force */
extern void T1482f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].fill_with */
extern void T1477f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].extend */
extern void T1477f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].search_position */
extern void T655f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].unset_found_item */
extern void T655f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.put_procedure_call */
extern void T242f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T304f16(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T501f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T310f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T396f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T229f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T304c13(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PARENTHESIS_INSTRUCTION.target */
extern T0* T2040f1(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1601f13(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T74f351(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T74f384(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T74f387(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T74f387ot1(TC* ac, T0* a1);
extern T1 T74f387ot2(TC* ac, T0* a1);
extern T1 T74f387ot3(TC* ac, T0* a1);
extern T1 T74f387ot4(TC* ac, T0* a1);
extern T1 T74f387ot5(TC* ac, T0* a1);
extern T1 T74f387ot6(TC* ac, T0* a1);
extern T1 T74f387ot7(TC* ac, T0* a1);
extern T1 T74f387ot8(TC* ac, T0* a1);
extern T1 T74f387ot9(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_converted_target_infix_expression_validity */
extern void T74f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T74f81(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T74f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T74f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f454ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.separate_type */
extern T0* T68f81(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.detachable_separate_type */
extern T0* T68f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.separate_type */
extern T0* T502f7(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.separate_type */
extern T0* T501f7(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.separate_type */
extern T0* T310f7(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.separate_type */
extern T0* T396f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T229f7(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.attached_separate_type */
extern T0* T68f62(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_separate_type_modifier */
extern T0* T77f26(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.attached_separate_type */
extern T0* T502f8(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.attached_separate_type */
extern T0* T501f8(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.attached_separate_type */
extern T0* T396f8(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.attached_separate_type */
extern T0* T310f8(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T229f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T74f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.separate_target */
extern T0* T2129f22(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.tokens */
extern T0* T2129f23(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.separate_target */
extern T0* T405f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T74f473(TC* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T273f59(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T242f55(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_separate_creation */
extern void T273f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.has_separate_argument */
extern T1 T273f34(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.set_separate_creation */
extern void T242f61(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.has_separate_argument */
extern T1 T242f32(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T502f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T501f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T310f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T396f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T229f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_vape_validity */
extern void T74f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_non_descendant_caller_clients_to */
extern void T74f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T74f91(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_argument_validity */
extern void T74f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T74f471ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T74f121(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T74f97(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T74f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T74f391(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T74f352(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T74f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T74f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f455ot1(TC* ac, T0* a1);
extern T1 T74f455ot2(TC* ac, T0* a1);
extern T1 T74f455ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T74f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T74f232ot1(TC* ac, T0* a1);
extern T1 T74f232ot2(TC* ac, T0* a1);
extern T1 T74f232ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T74f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T74f456(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f456ot1(TC* ac, T0* a1);
extern T1 T74f456ot2(TC* ac, T0* a1);
extern T1 T74f456ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T74f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T74f478(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T74f400(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T74f379(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T74f464(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T74f349(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T74f453(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T74f93(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.adapted_name */
extern T0* T74f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T74f94(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T74f80(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_orphan_actual_arguments_validity */
extern void T74f229(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_adapted_base_classes_validity */
extern void T74f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_adapted_base_classes */
extern T0* T74f79(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T74f82(TC* ac, T0* C);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T91f1607(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T91f1610(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T91f855(TC* ac, T0* C, T0* a1);
extern T1 T91f855ot1(TC* ac, T0* a1);
extern T1 T91f855ot2(TC* ac, T0* a1);
extern T1 T91f855ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_declaration */
extern void T91f822(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
extern T1 T91f822ot1(TC* ac, T0* a1);
extern T1 T91f822ot2(TC* ac, T0* a1);
extern T1 T91f822ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_declaration */
extern void T91f859(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T91f859ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_function_name */
extern void T91f887(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_object_type_name */
extern void T91f886(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_call_function_declaration */
extern void T91f858(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T91f858ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_separate_call_object_type_declaration */
extern void T91f857(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T91f857ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T91f856(TC* ac, T0* C, T0* a1);
extern T1 T91f856ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.procedure_call */
extern T0* T273f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].value */
extern T0* T655f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T655f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].position_of_key */
extern T6 T655f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.procedure_call */
extern T0* T242f28(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T91f809(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T91f840(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T91f867(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_inlined_procedure_call */
extern void T91f866(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f866ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_inlining_operands */
extern void T91f913(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f913ot1(TC* ac, T0* a1);
extern T1 T91f913ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T91f998(TC* ac, T0* C);
extern T1 T91f998ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T91f327(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_dynamic_type_set */
extern void T423f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T351f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T790f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T789f4(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_compound */
extern void T91f912(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T91f997(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1833f14(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1409f42(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1409f98(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T270f199(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T270f278(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T59f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T852c1116(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T59f128(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T41f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T41f128(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T59f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T852c1115(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T41f442(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T270f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T270f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1590f40(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T1590f34(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T1590f49(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T1590f53(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1590f40p1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T1590f35(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_static */
extern T1 T521f49(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T521f32(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_static */
extern T1 T1589f42(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T1589f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_static */
extern T1 T524f51(TC* ac, T0* C);
/* ET_DO_PROCEDURE.has_static_mark */
extern T1 T524f34(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T270f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T59f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T852c1166(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T59f145(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T41f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T41f145(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T59f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T852c1165(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T41f492(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T59f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T852c1164(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T41f491(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T59f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T852c1154(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T59f141(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T41f481(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T41f141(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T453f77(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T451f76(TC* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T443f73(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T442f78(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T259f85(TC* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T1268f22(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1590f84(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1589f78(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1587f77(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1586f80(TC* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T531f78(TC* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T524f76(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T521f75(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T453f76(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T451f75(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T443f72(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T442f77(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T259f84(TC* ac, T0* C);
/* ET_INVARIANTS.is_invariants */
extern T1 T1268f21(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1590f83(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1589f77(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1587f76(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1586f79(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T531f77(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T524f75(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T521f74(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T59f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T852c1153(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T41f480(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T59f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T852c1152(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T41f479(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T270f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T270f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T270f457ot1(TC* ac, T0* a1);
extern T1 T270f457ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T270f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T1631f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T1630f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.object_tests */
extern T0* T1629f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T1628f4(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T1627f7(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.object_tests */
extern T0* T1626f7(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.object_tests */
extern T0* T453f6(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.object_tests */
extern T0* T451f4(TC* ac, T0* C);
/* ET_ATTRIBUTE.object_tests */
extern T0* T443f4(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.object_tests */
extern T0* T442f4(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.object_tests */
extern T0* T259f5(TC* ac, T0* C);
/* ET_INVARIANTS.object_tests */
extern T0* T1268f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.object_tests */
extern T0* T1590f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.object_tests */
extern T0* T1589f4(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.object_tests */
extern T0* T1587f5(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.object_tests */
extern T0* T1586f5(TC* ac, T0* C);
/* ET_DO_FUNCTION.object_tests */
extern T0* T531f5(TC* ac, T0* C);
/* ET_DO_PROCEDURE.object_tests */
extern T0* T524f6(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.object_tests */
extern T0* T521f7(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T270f57(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T270f294(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T286f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T286f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T286f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T286f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T286f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T286f32(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T702f28(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1623f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T286f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T286f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T286f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T59f423(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T852c1096(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T59f115(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T41f423(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T41f115(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T59f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T852c1095(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T41f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T287f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T705f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T189f11(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T270f365(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuis0c_error */
extern void T59f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0c */
extern T0* T852c1163(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T59f144(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuis0c_error */
extern void T41f490(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuis_error */
extern T1 T41f144(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuis0a_error */
extern void T59f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0a */
extern T0* T852c1162(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0a_error */
extern void T41f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuis0b_error */
extern void T59f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuis0b */
extern T0* T852c1161(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuis0b_error */
extern void T41f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0c_error */
extern void T59f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0c */
extern T0* T852c1160(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T59f143(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuas0c_error */
extern void T41f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuas_error */
extern T1 T41f143(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuas0a_error */
extern void T59f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0a */
extern T0* T852c1159(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0a_error */
extern void T41f486(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuas0b_error */
extern void T59f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuas0b */
extern T0* T852c1158(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuas0b_error */
extern void T41f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_parenthesis_call_validity */
extern void T270f436(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_separate_argument_validity */
extern void T270f211(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.argument */
extern T0* T1556f5(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T1631f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T1630f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.inline_separate_arguments */
extern T0* T1629f7(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T1628f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T1627f9(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.inline_separate_arguments */
extern T0* T1626f9(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.inline_separate_arguments */
extern T0* T453f22(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.inline_separate_arguments */
extern T0* T451f20(TC* ac, T0* C);
/* ET_ATTRIBUTE.inline_separate_arguments */
extern T0* T443f18(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.inline_separate_arguments */
extern T0* T442f25(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.inline_separate_arguments */
extern T0* T259f28(TC* ac, T0* C);
/* ET_INVARIANTS.inline_separate_arguments */
extern T0* T1268f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.inline_separate_arguments */
extern T0* T1590f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.inline_separate_arguments */
extern T0* T1589f26(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.inline_separate_arguments */
extern T0* T1587f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.inline_separate_arguments */
extern T0* T1586f28(TC* ac, T0* C);
/* ET_DO_FUNCTION.inline_separate_arguments */
extern T0* T531f27(TC* ac, T0* C);
/* ET_DO_PROCEDURE.inline_separate_arguments */
extern T0* T524f21(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.inline_separate_arguments */
extern T0* T521f25(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_inline_separate_argument */
extern void T270f296(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found_item */
extern T0* T291f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_item */
extern T0* T291f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].found */
extern T1 T291f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search */
extern void T291f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].search_position */
extern void T291f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].hash_position */
extern T6 T291f23(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.hash_code */
extern T6 T364f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_item */
extern T0* T291f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_item */
extern T6 T291f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_item */
extern T6 T291f25(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen10b_error */
extern void T59f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen10b */
extern T0* T852c1100(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen10_error */
extern T1 T59f117(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen10b_error */
extern void T41f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen10_error */
extern T1 T41f117(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen10a_error */
extern void T59f426(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen10a */
extern T0* T852c1099(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen10a_error */
extern void T41f426(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.inline_separate_argument */
extern T0* T292f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].item */
extern T0* T715f7(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_instruction_validity */
extern void T270f364(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T59f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T852c1157(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T59f142(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T41f484(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T41f142(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T59f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T852c1156(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T41f483(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T59f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T852c1155(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T41f482(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_iteration_item_parenthesis_call_validity */
extern void T270f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_iteration_item_validity */
extern void T270f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T1631f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T1630f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.iteration_components */
extern T0* T1629f6(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T1628f5(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T1627f8(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.iteration_components */
extern T0* T1626f8(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.iteration_components */
extern T0* T453f4(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.iteration_components */
extern T0* T451f2(TC* ac, T0* C);
/* ET_ATTRIBUTE.iteration_components */
extern T0* T443f2(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.iteration_components */
extern T0* T442f2(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.iteration_components */
extern T0* T259f3(TC* ac, T0* C);
/* ET_INVARIANTS.iteration_components */
extern T0* T1268f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.iteration_components */
extern T0* T1590f2(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.iteration_components */
extern T0* T1589f2(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.iteration_components */
extern T0* T1587f3(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.iteration_components */
extern T0* T1586f3(TC* ac, T0* C);
/* ET_DO_FUNCTION.iteration_components */
extern T0* T531f3(TC* ac, T0* C);
/* ET_DO_PROCEDURE.iteration_components */
extern T0* T524f1(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.iteration_components */
extern T0* T521f2(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_iteration_item */
extern void T270f295(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found_item */
extern T0* T289f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_item */
extern T0* T289f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].found */
extern T1 T289f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search */
extern void T289f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].search_position */
extern void T289f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].hash_position */
extern T6 T289f35(TC* ac, T0* C, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.hash_code */
extern T6 T1337f38(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T1085f39(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.hash_code */
extern T6 T1347f26(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T1088f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_item */
extern T0* T289f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_item */
extern T6 T289f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_item */
extern T6 T289f37(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T59f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T852c1098(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T59f116(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T41f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T41f116(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T59f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T852c1097(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T41f424(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ITERATION_ITEM_SCOPE.iteration_component */
extern T0* T290f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].item */
extern T0* T710f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_iteration_item */
extern T1 T189f31(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T270f363(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T59f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T852c1151(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T59f140(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T41f478(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T41f140(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T59f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T852c1150(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T41f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T59f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T852c1149(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T59f139(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T41f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T41f139(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T59f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T852c1148(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T41f475(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T270f434(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T270f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T270f293(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T59f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T852c1094(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T59f91(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T41f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T41f91(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T293f8(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1845f6(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T1276f6(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T529f4(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T1276f7(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1845f7(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T529f7(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1631f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1630f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1629f10(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1628f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.locals */
extern T0* T1627f12(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.locals */
extern T0* T1626f12(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T453f75(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T451f74(TC* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T443f71(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.locals */
extern T0* T442f14(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T259f83(TC* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T1268f18(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1590f82(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.locals */
extern T0* T1589f19(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1587f75(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.locals */
extern T0* T1586f21(TC* ac, T0* C);
/* ET_DO_FUNCTION.locals */
extern T0* T531f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE.locals */
extern T0* T524f5(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T521f73(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T59f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T852c1093(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T59f114(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T41f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T41f114(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T59f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T852c1092(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T41f419(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.is_local */
extern T1 T189f8(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T270f362(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T59f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T852c1147(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T59f138(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T41f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T41f138(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T59f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T852c1146(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T41f473(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T59f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T852c1145(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T59f137(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T41f472(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T41f137(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T59f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T852c1144(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T41f471(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T270f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T270f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T270f292(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T293f7(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.arguments */
extern T0* T1268f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1631f11(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1630f3(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1629f3(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T1628f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T1627f3(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.formal_arguments */
extern T0* T1626f3(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T270f200(TC* ac, T0* C, T0* a1);
extern T1 T270f200ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1b_error */
extern void T59f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1b */
extern T0* T852c1076(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1b_error */
extern void T41f403(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T2040f7(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T270f281(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T270f369(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T281f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T680f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T682f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T682f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T281f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T680f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T682f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T281f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T281f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T681f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T681f13(TC* ac, T0* C);
/* ET_TUPLE_TYPE.add_overloaded_procedures */
extern void T260f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.add_overloaded_procedures */
extern void T1924f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.add_overloaded_procedures */
extern void T76f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.add_overloaded_procedures */
extern void T78f340(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T264f14(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T264f14ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_names */
extern T0* T1590f87(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1590f88(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_names */
extern T0* T521f78(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T521f79(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_names */
extern T0* T1589f81(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1589f82(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_names */
extern T0* T524f79(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T524f80(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1590f86(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T521f77(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1589f80(TC* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T524f78(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T270f66(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T281f15(TC* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T682f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T682f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T281f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T683f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T683f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T281f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T681c15(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T681f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T681f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1495c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T281f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T74f197(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T74f225(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T74f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T74f401(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f401ot1(TC* ac, T0* a1);
extern T1 T74f401ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T74f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T74f399(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T74f477(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f477ot1(TC* ac, T0* a1);
extern T1 T74f477ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T74f208(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T74f75(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T74f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_instruction_validity */
extern void T74f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_parenthesis_call_validity */
extern void T74f398(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_argument_validity */
extern void T74f210(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument */
extern void T74f245(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_instruction_validity */
extern void T74f262(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_parenthesis_call_validity */
extern void T74f397(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_item_validity */
extern void T74f209(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item */
extern void T74f244(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T74f261(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T74f396(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T74f207(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T74f242(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_cap_dynamic_types */
extern void T74f377(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1845f8(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T1276f8(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.attached_type */
extern T0* T68f63(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attached_type_modifier */
extern T0* T77f21(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T74f260(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T74f395(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T74f206(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T74f241(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T74f199(TC* ac, T0* C, T0* a1);
extern T1 T74f199ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T74f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T74f350(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T74f89(TC* ac, T0* C);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T91f1565(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T91f1592(TC* ac, T0* C, T0* a1);
extern T1 T91f1592ot1(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1833f12(TC* ac, T0* C);
/* ET_C_GENERATOR.print_instruction_static_call */
extern void T91f1597(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.register_called_static_feature */
extern void T91f1382(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T382f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T382f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T382f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T382f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_static_generated */
extern void T273f50(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static_generated */
extern void T242f60(TC* ac, T0* C, T1 a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.position */
extern T0* T1833f11(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.process */
extern void T367f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_instruction */
extern void T1409f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1409f24(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_arguments */
extern void T1409f103(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inline_separate_argument */
extern void T1409f110(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.argument */
extern T0* T332f6(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT.argument */
extern T0* T364f5(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.item */
extern T0* T332f7(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inline_separate_instruction */
extern void T270f125(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_separate_instruction_validity */
extern void T270f201(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_found_item */
extern void T291f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].unset_found_item */
extern void T291f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].remove_position */
extern void T291f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_put */
extern void T291f53(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T713f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T714f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T714f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_put */
extern void T291f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_keep_head */
extern void T291f57(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T714f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T714f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_keep_head */
extern void T291f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_put */
extern void T291f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_put */
extern void T291f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].move_cursors_forth */
extern void T291f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_position */
extern void T712f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T712f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T712f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].internal_set_key_equality_tester */
extern void T291f54(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.remove_inline_separate_arguments */
extern void T292f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].prune_last */
extern void T715f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].move_all_cursors_after */
extern void T715f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_next_cursor */
extern void T1499f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].set_after */
extern void T1499f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T270f112(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.add_inline_separate_argument */
extern void T292f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T715f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T715f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T713f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T714f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T715f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].extendible */
extern T1 T715f8(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_inline_separate_arguments_validity */
extern void T270f286(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_inline_separate_argument_declaration */
extern void T270f374(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].force_last */
extern void T291f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].resize */
extern void T291f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].clashes_resize */
extern void T291f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].special_integer_ */
extern T0* T291f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].key_storage_resize */
extern void T291f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].item_storage_resize */
extern void T291f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].slots_resize */
extern void T291f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_modulus */
extern T6 T291f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_capacity */
extern T6 T291f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gf_error */
extern void T59f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gf */
extern T0* T852c1124(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T59f131(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se2gf_error */
extern void T41f451(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se2g_error */
extern T1 T41f131(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ge_error */
extern void T59f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ge */
extern T0* T852c1123(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ge_error */
extern void T41f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se2gd_error */
extern void T59f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gd */
extern T0* T852c1122(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gd_error */
extern void T41f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T280f15(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T678f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T678f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T280f17(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T679f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T679f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_v1se2gc_error */
extern void T59f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gc */
extern T0* T852c1121(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gc_error */
extern void T41f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T529f8(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2gb_error */
extern void T59f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2gb */
extern T0* T852c1120(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2gb_error */
extern void T41f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T280f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T280f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T677f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T678f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T678f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T280f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T677f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T678f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T280f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T280f10(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_v1se2ga_error */
extern void T59f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se2ga */
extern T0* T852c1119(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_v1se2ga_error */
extern void T41f446(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_v1se1ga_error */
extern void T59f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_v1se1ga */
extern T0* T852c1118(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T59f130(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se1ga_error */
extern void T41f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_v1se1g_error */
extern T1 T41f130(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_v1se3ga_error */
extern void T59f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_v1se3ga */
extern T0* T852c1117(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T59f129(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_v1se3ga_error */
extern void T41f444(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_v1se3g_error */
extern T1 T41f129(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inline_separate_instruction */
extern void T74f176(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_instruction_validity */
extern void T74f200(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T74f143(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_separate_arguments_validity */
extern void T74f235(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_separate_argument_declaration */
extern void T74f358(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_separate_argument_dynamic_types */
extern void T74f458(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_inline_separate_instruction */
extern void T91f1536(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_instruction */
extern void T91f1375(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_separate_argument_name */
extern void T91f872(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T357f44(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.position */
extern T0* T367f5(TC* ac, T0* C);
/* ET_COMPOUND.position */
extern T0* T333f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.position */
extern T0* T1347f25(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.position */
extern T0* T1088f24(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.position */
extern T0* T1123f16(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.position */
extern T0* T1610f14(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1608f14(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.position */
extern T0* T1187f11(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.position */
extern T0* T1293f9(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.is_empty */
extern T1 T1293f10(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.position */
extern T0* T1263f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.position */
extern T0* T1247f14(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1606f19(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1605f18(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.position */
extern T0* T1603f16(TC* ac, T0* C);
/* ET_VARIANT.position */
extern T0* T1372f5(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.position */
extern T0* T1284f13(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1636f6(TC* ac, T0* C);
/* ET_CLASS_ASSERTION.position */
extern T0* T1595f6(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_empty */
extern T1 T1284f14(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.position */
extern T0* T1602f11(TC* ac, T0* C);
/* ET_ASSIGNMENT.position */
extern T0* T368f5(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T1068f15(TC* ac, T0* C);
/* ET_COMPOUND.first */
extern T0* T333f14(TC* ac, T0* C);
/* ET_COMPOUND.is_empty */
extern T1 T333f13(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T1068f17(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.position */
extern T0* T332f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.position */
extern T0* T364f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.first */
extern T0* T332f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.is_empty */
extern T1 T332f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.process */
extern void T1347f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_repeat_instruction */
extern void T1409f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_repeat_instruction */
extern void T270f143(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_repeat_instruction_validity */
extern void T270f223(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_instruction_validity */
extern void T270f297(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_found_item */
extern void T289f65(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].unset_found_item */
extern void T289f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_position */
extern void T289f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_put */
extern void T289f73(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].force */
extern void T709f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].fill_with */
extern void T707f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT].extend */
extern void T707f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_put */
extern void T289f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_keep_head */
extern void T289f77(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].keep_head */
extern void T707f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].set_count */
extern void T707f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_keep_head */
extern void T289f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_put */
extern void T289f71(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_put */
extern void T289f72(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_cursors_forth */
extern void T289f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_position */
extern void T706f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_next_cursor */
extern void T706f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_after */
extern void T706f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].internal_set_key_equality_tester */
extern void T289f74(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_ITEM_SCOPE.remove_iteration_components */
extern void T290f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].prune_last */
extern void T710f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T710f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_next_cursor */
extern void T1498f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].set_after */
extern void T1498f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T270f320(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T293f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T357f49(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T357f84(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T357f85(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T357f23(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T357f31(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T357f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].start */
extern void T357f48(TC* ac, T0* C);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T333f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.loop_compound */
extern T0* T1347f7(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.loop_compound */
extern T0* T1088f8(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.loop_compound */
extern T0* T1603f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T59f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T852c916(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T59f25(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T41f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T41f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T270f50(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.until_conditional */
extern T0* T1347f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.until_conditional */
extern T0* T1088f7(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_conditional */
extern T0* T1603f2(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T270f395(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T59f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T852c1179(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T59f151(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T41f506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T41f151(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.variant_part */
extern T0* T1347f23(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.variant_part */
extern T0* T1088f12(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.variant_part */
extern T0* T1603f6(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T270f394(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.invariant_part */
extern T0* T1347f22(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.invariant_part */
extern T0* T1088f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.invariant_part */
extern T0* T1603f5(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.from_compound */
extern T0* T1347f20(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.add_iteration_component */
extern void T290f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].force_last */
extern void T710f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].resize */
extern void T710f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T709f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT].aliased_resized_area */
extern T0* T707f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_capacity */
extern T6 T710f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].extendible */
extern T1 T710f8(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_iteration_component_header_validity */
extern void T270f392(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_iteration_item_declaration */
extern void T270f442(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.cursor_item_expression */
extern T0* T1085f15(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_item_expression */
extern T0* T1337f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_item_expression */
extern T0* T1347f10(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_item_expression */
extern T0* T1088f14(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_cursor_name */
extern T1 T1085f11(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_cursor_name */
extern T1 T1337f34(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_cursor_name */
extern T1 T1347f24(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_cursor_name */
extern T1 T1088f10(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_forth_instruction */
extern T0* T1085f17(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_forth_instruction */
extern T0* T1337f13(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_forth_instruction */
extern T0* T1347f12(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_forth_instruction */
extern T0* T1088f16(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.cursor_after_expression */
extern T0* T1085f16(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.cursor_after_expression */
extern T0* T1337f12(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.cursor_after_expression */
extern T0* T1347f11(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.cursor_after_expression */
extern T0* T1088f15(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].force_last */
extern void T289f66(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].resize */
extern void T289f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_resize */
extern void T289f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].special_integer_ */
extern T0* T289f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_resize */
extern void T289f80(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_resize */
extern void T289f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_resize */
extern void T289f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_modulus */
extern T6 T289f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_capacity */
extern T6 T289f34(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_iteration_cursor_declaration */
extern void T270f441(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.new_cursor_expression */
extern T0* T1085f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.new_cursor_expression */
extern T0* T1337f10(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.new_cursor_expression */
extern T0* T1347f9(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.new_cursor_expression */
extern T0* T1088f13(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hidden_iteration_component */
extern T0* T290f4(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T59f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T852c1178(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T59f150(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T41f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T41f150(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T287f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T59f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T852c1177(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T41f504(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T59f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T852c1176(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T41f503(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T59f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T852c1175(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T41f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T59f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T852c1174(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T41f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T59f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T852c1173(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T59f149(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T41f500(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T41f149(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.iterable_detachable_separate_any_type */
extern T0* T192f56(TC* ac, T0* C);
/* ET_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T46f63(TC* ac, T0* C);
/* ET_ECF_SYSTEM.iterable_detachable_separate_any_type */
extern T0* T63f59(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.iterable_expression */
extern T0* T1085f6(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.iterable_expression */
extern T0* T1337f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.iterable_expression */
extern T0* T1347f5(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.iterable_expression */
extern T0* T1088f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_repeat_instruction */
extern void T74f189(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_repeat_instruction_validity */
extern void T74f217(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_instruction_validity */
extern void T74f246(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T74f252(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T74f69(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T74f383(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T74f383p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T74f382(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T74f382p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_component_header_validity */
extern void T74f378(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_item_declaration */
extern void T74f463(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor_declaration */
extern void T74f462(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_repeat_instruction */
extern void T91f1550(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_repeat_instruction */
extern void T91f1578(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_instruction */
extern void T91f1594(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_name */
extern void T91f871(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_INSTRUCTION.process */
extern void T1088f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1409f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1409f99(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.process */
extern void T1636f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1409f115(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.process */
extern void T1595f10(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1409f112(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T270f133(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T270f213(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T74f184(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T74f212(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T91f1545(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T91f1573(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T1123f21(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1409f38(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T1123f14(TC* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T1123f15(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T270f134(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T270f214(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T293f19(TC* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.is_false */
extern T1 T189f95(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T454f34(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T1085f34(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T702f23(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T774f21(TC* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T1118f25(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T370f26(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T1115f21(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T394f21(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T764f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T363f23(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T405f29(TC* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T359f29(TC* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T334f29(TC* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T1074f27(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1631f33(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1630f40(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1629f36(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1628f34(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1627f41(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1626f37(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_false */
extern T1 T1625f19(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1624f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1623f26(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1622f19(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1621f22(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1620f20(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T1619f19(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1616f22(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1615f19(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1614f19(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1613f19(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1612f19(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1611f23(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1571f30(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1570f30(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1569f28(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1569f12(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1568f28(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1568f12(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1566f30(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1565f30(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1564f39(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1563f39(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1562f39(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1561f39(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1560f36(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1559f33(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T1558f31(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1557f32(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T1353f25(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1350f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_false */
extern T1 T1337f32(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T1315f21(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T1287f26(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_false */
extern T1 T1260f22(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T1244f25(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T74f185(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T74f213(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T74f213p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T91f1546(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T91f1574(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1610f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1409f37(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T270f166(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T270f247(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T270f311(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T270f311ot1(TC* ac, T0* a1);
extern T1 T270f311ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T270f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T270f406(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T270f405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T270f405ot1(TC* ac, T0* a1);
extern T1 T270f405ot2(TC* ac, T0* a1);
extern T1 T270f405ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T59f517(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T852c1190(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T59f157(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno5a_error */
extern void T41f517(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T41f157(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T59f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T852c1189(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuno5b_error */
extern void T41f516(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T59f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T852c1188(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T59f156(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T41f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T41f156(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T270f402(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1423f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1350f11(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1610f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1350f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1350c32(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1350f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T270f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T270f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T270f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T270f309(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1610f11(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T74f196(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T74f224(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T74f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f259ot1(TC* ac, T0* a1);
extern T1 T74f259ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T74f394(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T74f476(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f476ot1(TC* ac, T0* a1);
extern T1 T74f476ot2(TC* ac, T0* a1);
extern T1 T74f476ot3(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.first */
extern T0* T2041f12(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.first */
extern T0* T360f16(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T273f47(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_ise_runtime_new_tuple_instance_of */
extern T1 T242f48(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T502f92(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T501f92(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T310f88(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T396f90(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T229f86(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T74f392(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f392ot1(TC* ac, T0* a1);
extern T1 T74f392ot2(TC* ac, T0* a1);
extern T1 T74f392ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T74f390(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T74f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T74f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T74f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T74f256(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T91f1564(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T91f1591(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1608f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1409f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1409f102(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T1320f4(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T59f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T852c1274(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T852f902(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T59f127(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T41f602(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T41f127(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T59f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T852c1273(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T41f601(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1611f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1608f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T1032f27(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T59f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T852c1272(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T41f600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T59f599(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T852c1271(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T59f187(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T41f599(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T41f187(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1409f9(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1409f109(TC* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T192f115(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T46f124(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T63f147(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1409f8(TC* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T189f107(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T270f165(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T270f246(TC* ac, T0* C, T0* a1);
extern T1 T270f246ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T270f323(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T270f323ot1(TC* ac, T0* a1);
extern T1 T270f323ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T270f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T1422f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T1422f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T1422f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T1422f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T1422f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T1422f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T1422f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T1422f32(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T1422f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T1422f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T1422f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T1422f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T1422f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T1422f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T1422f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T1422f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T1422f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T1422f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T1422f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T1422f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T270f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T59f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T852c1142(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0h_error */
extern void T41f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1611f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1608f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1611f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1611c28(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T77f1545(TC* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T1032c23(TC* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T1032f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T1032f26(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1611f10(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T270f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T1421f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T1421f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T1421f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T1421f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T1421f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T1421f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T1421f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T1421f32(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T1421f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T1421f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T1421f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T1421f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T1421f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T1421f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T1421f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T1421f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T1421f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T1421f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T1421f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T1421f43(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T270f411(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T59f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T852c1114(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T41f441(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INVARIANTS.first_precursor */
extern T0* T1268f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.first_precursor */
extern T0* T1590f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.first_precursor */
extern T0* T259f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.first_precursor */
extern T0* T1589f9(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.first_precursor */
extern T0* T1587f8(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.first_precursor */
extern T0* T1586f9(TC* ac, T0* C);
/* ET_DO_FUNCTION.first_precursor */
extern T0* T531f11(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.first_precursor */
extern T0* T453f9(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.first_precursor */
extern T0* T451f8(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.first_precursor */
extern T0* T442f7(TC* ac, T0* C);
/* ET_ATTRIBUTE.first_precursor */
extern T0* T443f7(TC* ac, T0* C);
/* ET_DO_PROCEDURE.first_precursor */
extern T0* T524f18(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.first_precursor */
extern T0* T521f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T59f440(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T852c1113(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T41f440(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T59f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T852c1112(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T59f126(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T41f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T41f126(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T74f195(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T74f223(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T74f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T74f255ot1(TC* ac, T0* a1);
extern T1 T74f255ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T74f389(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T74f474(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T273f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T242f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T274f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T2037f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T2036f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T2036f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T274f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T2037c3(TC* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T274f10(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T2037f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T2036f4(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T274f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T274f5(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T274f8(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T274c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T2037f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T2036c5(TC* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T273c49(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T273f60(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T273f60ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T273f44(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T273f43(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T271c15(TC* ac);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T670f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T669c5(TC* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T74f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T74f388(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T91f1563(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T91f1590(TC* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T1187f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1409f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T270f135(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T270f215(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T74f186(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T74f214(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T74f214p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T91f1547(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T91f1575(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T1263f16(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1409f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1409f101(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1409f108(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T1384f10(TC* ac, T0* C, T6 a1);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T1263f12(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T270f137(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T270f217(TC* ac, T0* C, T0* a1);
extern T1 T270f217ot1(TC* ac, T0* a1);
extern T1 T270f217ot2(TC* ac, T0* a1);
extern T1 T270f217ot3(TC* ac, T0* a1);
extern T1 T270f217ot4(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T293f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T357f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T357f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T357f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T357f74(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T774f30(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T454f57(TC* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T189f116(TC* ac, T0* C);
/* ET_CHOICE_RANGE.upper */
extern T0* T1607f2(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1571f38(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1570f38(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1564f54(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1563f54(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1562f54(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1561f54(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1557f39(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1350f30(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T774f28(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T454f55(TC* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T189f114(TC* ac, T0* C);
/* ET_CHOICE_RANGE.is_range */
extern T1 T1607f6(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1571f36(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1570f36(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1564f52(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1563f52(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1562f52(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1561f52(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1557f37(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1350f28(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1571f50(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1570f49(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1557f54(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.cast_type */
extern T0* T1571f2(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.cast_type */
extern T0* T1570f2(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.cast_type */
extern T0* T1557f2(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T59f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T852c1104(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T59f120(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T41f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T41f120(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T454f73(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1564f71(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1563f71(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1562f71(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1561f71(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.cast_type */
extern T0* T454f7(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.cast_type */
extern T0* T1564f3(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.cast_type */
extern T0* T1563f3(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.cast_type */
extern T0* T1562f3(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.cast_type */
extern T0* T1561f3(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T59f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T852c1103(TC* ac, T0* a1, T0* a2, T0* a3);
extern T1 T852f1103ot1(TC* ac, T0* a1);
extern T1 T852f1103ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T41f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T270f62(TC* ac, T0* C, T0* a1);
extern T1 T270f62ot1(TC* ac, T0* a1);
extern T1 T270f62ot2(TC* ac, T0* a1);
extern T1 T270f62ot3(TC* ac, T0* a1);
extern T1 T270f62ot4(TC* ac, T0* a1);
extern T1 T270f62ot5(TC* ac, T0* a1);
extern T1 T270f62ot6(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T270f74(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1560f43(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1559f39(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1569f34(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1568f34(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1566f36(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1565f36(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T1558f38(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_constant */
extern T1 T454f54(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1571f41(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1570f41(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1564f57(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1563f57(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1562f57(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_constant */
extern T1 T1561f57(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1557f42(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T270f73(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1570c48(TC* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1570f54(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1560f42(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1559f38(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1569f33(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1568f33(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1566f35(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1565f35(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T1558f37(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T454f53(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_character_constant */
extern T1 T1571f40(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_character_constant */
extern T1 T1570f40(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1564f56(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1563f56(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1562f56(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1561f56(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_character_constant */
extern T1 T1557f41(TC* ac, T0* C);
/* ET_IDENTIFIER.arguments_count */
extern T6 T189f109(TC* ac, T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T189f117(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T774f26(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T774f29(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T454f56(TC* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T189f115(TC* ac, T0* C);
/* ET_CHOICE_RANGE.lower */
extern T0* T1607f1(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1571f37(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1570f37(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1564f53(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1563f53(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1562f53(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1561f53(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1557f38(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1350f29(TC* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T1135f6(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.choice */
extern T0* T189f106(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1564f46(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1563f46(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1562f46(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1561f46(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T454f51(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1557f35(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T774f25(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1350f26(TC* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T1607f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1571f33(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1570f33(TC* ac, T0* C);
/* ET_CHOICE_LIST.item */
extern T0* T1135f7(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T59f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T852c1102(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T59f119(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T41f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T41f119(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T74f188(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T74f216(TC* ac, T0* C, T0* a1);
extern T1 T74f216ot1(TC* ac, T0* a1);
extern T1 T74f216ot2(TC* ac, T0* a1);
extern T1 T74f216ot3(TC* ac, T0* a1);
extern T1 T74f216ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T74f86(TC* ac, T0* C, T0* a1);
extern T1 T74f86ot1(TC* ac, T0* a1);
extern T1 T74f86ot2(TC* ac, T0* a1);
extern T1 T74f86ot3(TC* ac, T0* a1);
extern T1 T74f86ot4(TC* ac, T0* a1);
extern T1 T74f86ot5(TC* ac, T0* a1);
extern T1 T74f86ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T74f100(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T74f99(TC* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T91f1549(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T91f1577(TC* ac, T0* C, T0* a1);
extern T1 T91f1577ot1(TC* ac, T0* a1);
extern T1 T91f1577ot2(TC* ac, T0* a1);
extern T1 T91f1577ot3(TC* ac, T0* a1);
extern T1 T91f1577ot4(TC* ac, T0* a1);
extern T1 T91f1577ot5(TC* ac, T0* a1);
extern T1 T91f1577ot6(TC* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.value */
extern T11 T1564f6(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value */
extern T11 T1563f6(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value */
extern T11 T1562f6(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value */
extern T11 T1561f6(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value */
extern T11 T454f1(TC* ac, T0* C);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T91f1379(TC* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T432f2(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T91f316(TC* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T432c1(TC* ac);
/* ET_C_GENERATOR.print_type_cast */
extern void T91f723(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T166f11(TC* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T166f12(TC* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T335f12(TC* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T335f13(TC* ac, T0* C, T11 a1);
/* ET_C3_CHARACTER_CONSTANT.value */
extern T3 T1557f5(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value */
extern T3 T1571f4(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value */
extern T3 T1570f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_integer_value */
extern void T91f1378(TC* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T91f307(TC* ac, T0* C);
/* INTEGER_32.abs */
extern T6 T6f34(TC* ac, volatile T6* C);
/* INTEGER_32.abs_ref */
extern T6 T6f35(TC* ac, volatile T6* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1564f43(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1563f43(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1562f43(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1561f43(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T454f10(TC* ac, T0* C);
/* ET_C_GENERATOR.choice_constant */
extern T0* T91f595(TC* ac, T0* C, T0* a1);
extern T1 T91f595ot1(TC* ac, T0* a1);
extern T1 T91f595ot2(TC* ac, T0* a1);
extern T1 T91f595ot3(TC* ac, T0* a1);
extern T1 T91f595ot4(TC* ac, T0* a1);
extern T1 T91f595ot5(TC* ac, T0* a1);
/* ET_WHEN_PART.position */
extern T0* T1381f9(TC* ac, T0* C);
/* ET_CHOICE_LIST.position */
extern T0* T1135f12(TC* ac, T0* C);
/* ET_CHOICE_RANGE.position */
extern T0* T1607f11(TC* ac, T0* C);
/* ET_CHOICE_LIST.first */
extern T0* T1135f14(TC* ac, T0* C);
/* ET_CHOICE_LIST.is_empty */
extern T1 T1135f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.process */
extern void T1247f18(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1409f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1409f100(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T1196f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1409f121(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.expression */
extern T0* T1196f10(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T1199f10(TC* ac, T0* C, T6 a1);
/* ET_IF_INSTRUCTION.expression */
extern T0* T1247f13(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T270f136(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T270f216(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T74f187(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T74f215(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T91f1548(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T91f1576(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.position */
extern T0* T1196f9(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.process */
extern void T1606f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1409f32(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T270f164(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T270f245(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T270f321(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T59f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T852c1141(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T41f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T270f410(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_instruction_validity */
extern void T270f409(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T270f409ot1(TC* ac, T0* a1);
extern T1 T270f409ot2(TC* ac, T0* a1);
extern T1 T270f409ot3(TC* ac, T0* a1);
extern T1 T270f409ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T270f450(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T293f17(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T293f22(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T293f21(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T293f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1600f24(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1599f10(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1598f10(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T260f44(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T248f24(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T76f44(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T499f5(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1631f30(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1630f37(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1629f33(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1628f31(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1627f38(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1626f34(TC* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T1268f14(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T293f15(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_validity */
extern void T270f449(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.is_like_current */
extern T1 T1548f31(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_formal_creation_procedure_call_validity */
extern void T270f448(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_formal_parameter_creation_vape_validity */
extern void T270f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape2b_error */
extern void T59f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape2b */
extern T0* T852c1252(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape2b_error */
extern void T41f579(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLIENT.reset */
extern void T299f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T59f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T852c1223(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T59f169(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T41f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T41f169(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_no_creation_procedure_call_validity */
extern void T270f447(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T59f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T852c1222(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T59f168(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T41f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T41f168(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T59f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T852c1221(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T59f167(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T41f548(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T41f167(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T270f446(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T270f72(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T277f45(TC* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T270f445(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1423f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T59f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T852c1180(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T59f152(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T41f507(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T41f152(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1548f27(TC* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1548f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T247f48(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T270f287(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T270f287ot1(TC* ac, T0* a1);
extern T1 T270f287ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T270f377(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T59f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T852c1132(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0c_error */
extern void T41f459(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T59f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T852c1131(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T59f132(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T41f458(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T41f132(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T59f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T852c1130(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T59f133(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T41f457(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T41f133(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T59f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T852c1129(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T41f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T59f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T852c1128(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T41f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T59f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T852c1127(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T41f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T270f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T270f375(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T59f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T852c1126(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T41f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T59f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T852c1125(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T41f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1606f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T74f194(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T74f222(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T74f253(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_instruction_validity */
extern void T74f386(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_instruction_validity */
extern void T74f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5, T0* a6);
extern T1 T74f385ot1(TC* ac, T0* a1);
extern T1 T74f385ot2(TC* ac, T0* a1);
extern T1 T74f385ot3(TC* ac, T0* a1);
extern T1 T74f385ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T74f470(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T74f526(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_validity */
extern void T74f469(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_creation_procedure_call_validity */
extern void T74f468(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_parameter_creation_vape_validity */
extern void T74f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_no_creation_procedure_call_validity */
extern void T74f467(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T74f466(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T74f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T74f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T74f236(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f236ot1(TC* ac, T0* a1);
extern T1 T74f236ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T74f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T74f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T74f359(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T74f459(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T1631f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T1630f17(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.result_index */
extern T6 T1629f16(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.result_index */
extern T6 T1628f17(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.result_index */
extern T6 T1627f19(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.result_index */
extern T6 T1626f18(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.detachable_type */
extern T0* T68f79(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T1631f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T1630f16(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.attached_result_index */
extern T6 T1629f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T1628f16(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T1627f18(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.attached_result_index */
extern T6 T1626f17(TC* ac, T0* C);
/* ET_C_GENERATOR.process_create_instruction */
extern void T91f1562(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T91f1589(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T91f1596(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T91f1252(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_value */
extern void T91f892(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_value */
extern void T91f925(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T91f388(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once_per_thread */
extern T1 T273f28(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_thread */
extern T1 T1590f43(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_thread */
extern T1 T521f45(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_thread */
extern T1 T1589f32(TC* ac, T0* C);
/* ET_NOTE_LIST.has_note_term_with_tag */
extern T1 T1298f7(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_thread_key */
extern T1 T1931f2(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_thread */
extern T1 T524f49(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_thread */
extern T1 T259f58(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_thread */
extern T1 T1587f44(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_thread */
extern T1 T1586f47(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_thread */
extern T1 T531f47(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_thread */
extern T1 T453f65(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_thread */
extern T1 T451f64(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_thread */
extern T1 T442f58(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_thread */
extern T1 T443f60(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_thread */
extern T1 T242f44(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_process_value */
extern void T91f924(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T273f25(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T1590f42(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T521f44(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T1589f49(TC* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1931f1(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T524f48(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T259f57(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T1587f43(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T1586f46(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T531f46(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T453f64(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T451f63(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T442f57(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T443f59(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T242f41(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_value */
extern void T91f923(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_value_name */
extern void T91f780(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_onces_access */
extern void T91f1002(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_onces_name */
extern void T91f776(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T91f785(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_check_void_expression */
extern void T91f825(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.check_for_void_target_mode */
extern T1 T91f361(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T2057f12(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T2130f14(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_never_void */
extern T1 T2129f13(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T2128f9(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_never_void */
extern T1 T1564f25(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_never_void */
extern T1 T1563f25(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_never_void */
extern T1 T1562f25(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_never_void */
extern T1 T1561f25(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_never_void */
extern T1 T454f16(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_never_void */
extern T1 T1560f28(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_never_void */
extern T1 T1559f10(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_never_void */
extern T1 T1557f8(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T394f5(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_never_void */
extern T1 T405f16(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T1631f36(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T1630f42(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_never_void */
extern T1 T1629f39(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T1628f19(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T1627f21(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_never_void */
extern T1 T1626f21(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_never_void */
extern T1 T1625f6(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_never_void */
extern T1 T1624f7(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1623f12(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1622f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1621f6(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_never_void */
extern T1 T1620f7(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T1619f6(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1616f6(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_never_void */
extern T1 T1615f6(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_never_void */
extern T1 T1614f6(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_never_void */
extern T1 T1613f6(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_never_void */
extern T1 T1612f6(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1611f8(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_never_void */
extern T1 T1571f9(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_never_void */
extern T1 T1570f9(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_never_void */
extern T1 T1569f8(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_never_void */
extern T1 T1568f8(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_never_void */
extern T1 T1566f10(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_never_void */
extern T1 T1565f10(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_never_void */
extern T1 T1558f10(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_never_void */
extern T1 T1353f9(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1350f7(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_never_void */
extern T1 T1337f17(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T1315f7(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_never_void */
extern T1 T1287f9(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_never_void */
extern T1 T1260f6(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T1244f11(TC* ac, T0* C);
/* ET_CALL_AGENT.is_never_void */
extern T1 T1118f8(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T1115f6(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T1085f20(TC* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T1074f8(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T774f6(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T764f6(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T702f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T363f11(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_never_void */
extern T1 T370f15(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_never_void */
extern T1 T423f7(TC* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T334f7(TC* ac, T0* C);
/* ET_CURRENT.is_never_void */
extern T1 T359f9(TC* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T189f12(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1541f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T520f11(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.can_be_void */
extern T1 T400f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T348f7(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T502f53(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T501f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T396f57(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T310f56(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.can_be_void */
extern T1 T229f26(TC* ac, T0* C);
/* ET_C_GENERATOR.once_kind */
extern T6 T91f380(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T78f67(TC* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T78f66(TC* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T78f65(TC* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T78f64(TC* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T78f63(TC* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T78f62(TC* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T78f61(TC* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T78f60(TC* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T78f59(TC* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T78f58(TC* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T78f57(TC* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T78f56(TC* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T78f193(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found_item */
extern T6 T375f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_item */
extern T6 T375f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].found */
extern T1 T375f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search */
extern void T375f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].search_position */
extern void T375f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].hash_position */
extern T6 T375f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_item */
extern T0* T375f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_item */
extern T6 T375f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_item */
extern T6 T375f27(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.is_result */
extern T1 T189f67(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T273f41(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T242f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern void T91f1600(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_creation_procedure_call */
extern T0* T91f1600ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_creation_procedure_call */
extern void T91f820(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_adapted_expression_with_agent */
extern void T91f837(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern void T91f1599(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_separate_creation_procedure_call */
extern T0* T91f1599ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_separate_creation_procedure_call */
extern void T91f819(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BANG_INSTRUCTION.process */
extern void T1605f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1409f31(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T270f163(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T270f244(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T74f193(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T74f221(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T91f1561(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T91f1588(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1603f21(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1409f30(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1603f15(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T270f162(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T270f243(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T74f192(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T74f220(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T91f1560(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T91f1587(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1602f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1409f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T270f161(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T270f242(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T270f319(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T59f438(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T852c1111(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T59f125(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T41f438(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T41f125(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T69f45(TC* ac, T0* C, T0* a1);
/* UT_VERSION.is_greater_equal */
extern T1 T52f15(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.newer_or_same_ise_version */
extern T1 T265f47(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T270f64(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T74f191(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T74f219(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T74f251(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T74f381(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T74f88(TC* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T91f1559(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T91f1586(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.wipe_out */
extern void T347f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T458f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].keep_head */
extern void T457f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRIMARY_TYPE].set_count */
extern void T457f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_standalone_type_set */
extern void T91f800(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T348f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T349f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T787f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T786f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T786f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T349f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T787f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T786f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T349f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T349f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_never_void */
extern T1 T1541f3(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_never_void */
extern T1 T520f3(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_never_void */
extern T1 T348f4(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T348f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_standalone_type_set */
extern T0* T91f304(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_last */
extern void T349f13(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T786f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T786f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].move_last_cursors_after */
extern void T349f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T788f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_after */
extern void T788f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].last */
extern T0* T349f6(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T348c17(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].is_empty */
extern T1 T349f10(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_HASH_LIST.is_empty */
extern T1 T347f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.process */
extern void T368f15(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1409f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T270f126(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T270f202(TC* ac, T0* C, T0* a1);
extern T1 T270f202ot1(TC* ac, T0* a1);
extern T1 T270f202ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T270f288(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T293f18(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T293f25(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T293f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T293f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0b_error */
extern void T59f406(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0b */
extern T0* T852c1079(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T59f106(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0b_error */
extern void T41f406(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T41f106(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T293f16(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T1600f72(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T1599f75(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T1598f74(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T248f67(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T499f69(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T59f405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T852c1078(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T41f405(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ASSIGNMENT.set_source */
extern void T368f17(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T74f177(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T74f201(TC* ac, T0* C, T0* a1);
extern T1 T74f201ot1(TC* ac, T0* a1);
extern T1 T74f201ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T74f237(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T74f362(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T91f1537(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T91f1376(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1601f22(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1409f27(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T270f160(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T270f241(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T270f317(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4gb_error */
extern void T59f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar4gb */
extern T0* T852c1110(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar4gb_error */
extern void T41f437(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vuar3gb_error */
extern void T59f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vuar3gb */
extern T0* T852c1108(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vuar3gb_error */
extern void T41f435(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T59f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T852c1106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T59f122(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T41f433(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T41f122(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1601f25(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T59f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T852c1105(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T59f121(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T41f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T41f121(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1601f24(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_call_info */
extern void T270f316(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force_last */
extern void T284f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].force */
extern void T692f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].fill_with */
extern void T694f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extend */
extern void T694f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].resize */
extern void T284f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T692f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].aliased_resized_area */
extern T0* T694f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_capacity */
extern T6 T284f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].extendible */
extern T1 T284f6(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_call_info */
extern T0* T270f63(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].remove_last */
extern void T284f15(TC* ac, T0* C);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].keep_head */
extern void T694f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_count */
extern void T694f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].move_last_cursors_after */
extern void T284f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_next_cursor */
extern void T695f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_after */
extern void T695f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].last */
extern T0* T284f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].is_empty */
extern T1 T284f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T74f190(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T74f218(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T74f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_call_info */
extern void T74f248(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_call_info */
extern T0* T74f87(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T91f1558(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T91f1585(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T1068f23(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1409f26(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T270f132(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T270f212(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T59f428(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T852c1101(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T59f118(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T41f428(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T41f118(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T74f183(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T74f211(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T91f1544(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T91f1572(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T361f20(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1409f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T270f124(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T74f175(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T91f1535(TC* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T333f12(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_inlining_operands */
extern void T91f911(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T351f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T790f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T789f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T789f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T351f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T351f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_target */
extern void T424f6(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_inlined_operand */
extern T0* T91f335(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f335ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].force_last */
extern void T380f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].force */
extern void T824f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].fill_with */
extern void T823f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].extend */
extern void T823f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].resize */
extern void T380f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T824f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].aliased_resized_area */
extern T0* T823f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_capacity */
extern T6 T380f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].extendible */
extern T1 T380f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_context */
extern void T423f23(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.set_expression */
extern void T423f22(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].remove_last */
extern void T380f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].keep_head */
extern void T823f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].set_count */
extern void T823f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_last_cursors_after */
extern void T380f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_next_cursor */
extern void T825f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].set_after */
extern void T825f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].last */
extern T0* T380f7(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.make */
extern T0* T423c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_INLINED_EXPRESSION.make_inlined_expression */
extern void T423f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].is_empty */
extern T1 T380f6(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T91f996(TC* ac, T0* C);
extern T1 T91f996ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.new_call_context */
extern T0* T91f334(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].force_last */
extern void T381f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].force */
extern void T827f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].fill_with */
extern void T826f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].extend */
extern void T826f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].resize */
extern void T381f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T827f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].aliased_resized_area */
extern T0* T826f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_capacity */
extern T6 T381f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].extendible */
extern T1 T381f9(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_CALL_CONTEXT.set_current_feature */
extern void T424f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_CALL_CONTEXT.tokens */
extern T0* T424f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].remove_last */
extern void T381f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].keep_head */
extern void T826f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].set_count */
extern void T826f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_last_cursors_after */
extern void T381f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_next_cursor */
extern void T828f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].set_after */
extern void T828f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].last */
extern T0* T381f7(TC* ac, T0* C);
/* ET_DYNAMIC_CALL_CONTEXT.make */
extern T0* T424c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T351c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T351f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T351f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T791c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T790f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T789c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T790c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].is_empty */
extern T1 T381f6(TC* ac, T0* C);
/* ET_C_GENERATOR.register_inlined_feature */
extern void T91f910(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].force */
extern void T383f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_put */
extern void T383f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_put */
extern void T383f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_item */
extern T6 T383f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_item */
extern T6 T383f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].hash_position */
extern T6 T383f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.hash_code */
extern T6 T273f48(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.hash_code */
extern T6 T242f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].resize */
extern void T383f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_resize */
extern void T383f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].special_integer_ */
extern T0* T383f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_resize */
extern void T383f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_resize */
extern void T383f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_item */
extern T0* T383f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_item */
extern T0* T383f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_resize */
extern void T383f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_modulus */
extern T6 T383f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T383f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_put */
extern void T383f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].search_position */
extern void T383f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_equality_tester */
extern T0* T383f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].unset_found_item */
extern void T383f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_inlined */
extern void T273f58(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_inlined */
extern void T242f54(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.is_inlinable_procedure */
extern T1 T91f370(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f370ot1(TC* ac, T0* a1);
/* ET_COMPOUND.has_inline_separate_instruction */
extern T1 T333f11(TC* ac, T0* C);
/* ET_IDENTIFIER.has_inline_separate_instruction */
extern T1 T189f64(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1833f6(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T367f11(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1347f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1088f23(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1123f13(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1610f10(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1608f11(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1187f10(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1263f11(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_inline_separate_instruction */
extern T1 T1384f9(TC* ac, T0* C);
/* ET_WHEN_PART.has_inline_separate_instruction */
extern T1 T1381f8(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1247f12(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_inline_separate_instruction */
extern T1 T1199f9(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_inline_separate_instruction */
extern T1 T1196f8(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1606f12(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1605f12(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1603f14(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_inline_separate_instruction */
extern T1 T1602f10(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_inline_separate_instruction */
extern T1 T368f12(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1601f12(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_inline_separate_instruction */
extern T1 T1068f14(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_inline_separate_instruction */
extern T1 T361f13(TC* ac, T0* C);
/* ET_COMPOUND.has_typed_object_test */
extern T1 T333f10(TC* ac, T0* C);
/* ET_IDENTIFIER.has_typed_object_test */
extern T1 T189f61(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T1833f5(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T2041f6(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_typed_object_test */
extern T1 T2057f7(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_typed_object_test */
extern T1 T2130f12(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_typed_object_test */
extern T1 T2129f11(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_typed_object_test */
extern T1 T2128f7(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1564f24(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1563f24(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1562f24(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T1561f24(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_typed_object_test */
extern T1 T454f15(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_typed_object_test */
extern T1 T1560f27(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_typed_object_test */
extern T1 T1559f9(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T1557f24(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_typed_object_test */
extern T1 T1625f14(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T1337f25(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_typed_object_test */
extern T1 T1337f25p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T1085f29(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_typed_object_test */
extern T1 T1085f29p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_typed_object_test */
extern T1 T1284f9(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_typed_object_test */
extern T1 T1624f15(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_typed_object_test */
extern T1 T702f18(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T702f12(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_typed_object_test */
extern T1 T1623f21(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1623f15(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_typed_object_test */
extern T1 T1612f14(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T774f15(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T1631f25(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_typed_object_test */
extern T1 T2099f5(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_typed_object_test */
extern T1 T1102f11(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_typed_object_test */
extern T1 T1633f12(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_typed_object_test */
extern T1 T1082f42(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_typed_object_test */
extern T1 T1882f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T1630f31(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_typed_object_test */
extern T1 T1629f29(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T1628f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T1627f32(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_typed_object_test */
extern T1 T1626f30(TC* ac, T0* C);
/* ET_CALL_AGENT.has_typed_object_test */
extern T1 T1118f19(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_typed_object_test */
extern T1 T1632f10(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_typed_object_test */
extern T1 T1353f20(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_typed_object_test */
extern T1 T1287f21(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_typed_object_test */
extern T1 T1315f15(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_typed_object_test */
extern T1 T1115f16(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_typed_object_test */
extern T1 T394f11(TC* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T394f15(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_typed_object_test */
extern T1 T1622f14(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_typed_object_test */
extern T1 T1621f16(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_typed_object_test */
extern T1 T1620f15(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T1619f14(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_typed_object_test */
extern T1 T764f14(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_typed_object_test */
extern T1 T1616f16(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_typed_object_test */
extern T1 T1615f14(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_typed_object_test */
extern T1 T1614f14(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_typed_object_test */
extern T1 T1613f14(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_typed_object_test */
extern T1 T1611f18(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_typed_object_test */
extern T1 T1350f18(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_typed_object_test */
extern T1 T1260f16(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_typed_object_test */
extern T1 T1378f8(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_typed_object_test */
extern T1 T1375f8(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_typed_object_test */
extern T1 T1244f20(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_typed_object_test */
extern T1 T1193f8(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_typed_object_test */
extern T1 T1190f9(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_typed_object_test */
extern T1 T405f22(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T1571f21(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_typed_object_test */
extern T1 T1570f21(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_typed_object_test */
extern T1 T1569f22(TC* ac, T0* C);
/* ET_VOID.has_typed_object_test */
extern T1 T1074f22(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_typed_object_test */
extern T1 T1568f22(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_typed_object_test */
extern T1 T1566f23(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_typed_object_test */
extern T1 T1565f23(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_typed_object_test */
extern T1 T1558f22(TC* ac, T0* C);
/* ET_RESULT.has_typed_object_test */
extern T1 T334f20(TC* ac, T0* C);
/* ET_CURRENT.has_typed_object_test */
extern T1 T359f19(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_typed_object_test */
extern T1 T363f18(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_typed_object_test */
extern T1 T370f21(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_typed_object_test */
extern T1 T423f12(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_typed_object_test */
extern T1 T360f15(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_typed_object_test */
extern T1 T367f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_typed_object_test */
extern T1 T332f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_typed_object_test */
extern T1 T364f9(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T1347f18(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_typed_object_test */
extern T1 T1347f18p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T1088f22(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_typed_object_test */
extern T1 T1088f22p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T1123f12(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_typed_object_test */
extern T1 T1123f12p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T1610f9(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_typed_object_test */
extern T1 T1608f10(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_typed_object_test */
extern T1 T1187f9(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_typed_object_test */
extern T1 T1263f10(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_typed_object_test */
extern T1 T1384f8(TC* ac, T0* C);
/* ET_WHEN_PART.has_typed_object_test */
extern T1 T1381f7(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_typed_object_test */
extern T1 T1135f11(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_typed_object_test */
extern T1 T1607f10(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_typed_object_test */
extern T1 T1247f11(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_typed_object_test */
extern T1 T1199f8(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_typed_object_test */
extern T1 T1196f7(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_typed_object_test */
extern T1 T1606f11(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_typed_object_test */
extern T1 T1605f11(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_typed_object_test */
extern T1 T1603f13(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_typed_object_test */
extern T1 T1602f9(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_typed_object_test */
extern T1 T368f11(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_typed_object_test */
extern T1 T1601f11(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_typed_object_test */
extern T1 T1068f13(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_typed_object_test */
extern T1 T361f12(TC* ac, T0* C);
/* ET_COMPOUND.has_agent */
extern T1 T333f9(TC* ac, T0* C);
/* ET_IDENTIFIER.has_agent */
extern T1 T189f60(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T1833f4(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T2041f14(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_agent */
extern T1 T2057f6(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_agent */
extern T1 T2130f11(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_agent */
extern T1 T2129f10(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_agent */
extern T1 T2128f6(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_agent */
extern T1 T1564f23(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_agent */
extern T1 T1563f23(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_agent */
extern T1 T1562f23(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_agent */
extern T1 T1561f23(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_agent */
extern T1 T454f14(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_agent */
extern T1 T1560f26(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_agent */
extern T1 T1559f8(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_agent */
extern T1 T1557f23(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_agent */
extern T1 T1625f13(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T1337f24(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_agent */
extern T1 T1337f24p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T1085f28(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_agent */
extern T1 T1085f28p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_agent */
extern T1 T1284f8(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_agent */
extern T1 T1624f14(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_agent */
extern T1 T702f17(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_agent */
extern T1 T1623f20(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_agent */
extern T1 T1612f13(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T774f14(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T1631f24(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T1630f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_agent */
extern T1 T1629f28(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T1628f26(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T1627f31(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_agent */
extern T1 T1626f29(TC* ac, T0* C);
/* ET_CALL_AGENT.has_agent */
extern T1 T1118f18(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_agent */
extern T1 T1353f19(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_agent */
extern T1 T1287f20(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_agent */
extern T1 T1315f14(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_agent */
extern T1 T1115f15(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_agent */
extern T1 T394f10(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_agent */
extern T1 T1622f13(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_agent */
extern T1 T1621f15(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_agent */
extern T1 T1620f14(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_agent */
extern T1 T1619f13(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_agent */
extern T1 T764f13(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_agent */
extern T1 T1616f15(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_agent */
extern T1 T1615f13(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_agent */
extern T1 T1614f13(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_agent */
extern T1 T1613f13(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_agent */
extern T1 T1611f17(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_agent */
extern T1 T1350f17(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_agent */
extern T1 T1260f15(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_agent */
extern T1 T1378f7(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_agent */
extern T1 T1375f7(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_agent */
extern T1 T1244f19(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_agent */
extern T1 T1193f7(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_agent */
extern T1 T1190f8(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_agent */
extern T1 T405f21(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_agent */
extern T1 T1571f20(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_agent */
extern T1 T1570f20(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_agent */
extern T1 T1569f21(TC* ac, T0* C);
/* ET_VOID.has_agent */
extern T1 T1074f21(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_agent */
extern T1 T1568f21(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_agent */
extern T1 T1566f22(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_agent */
extern T1 T1565f22(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_agent */
extern T1 T1558f21(TC* ac, T0* C);
/* ET_RESULT.has_agent */
extern T1 T334f19(TC* ac, T0* C);
/* ET_CURRENT.has_agent */
extern T1 T359f18(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_agent */
extern T1 T363f17(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_agent */
extern T1 T370f20(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_agent */
extern T1 T423f11(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_agent */
extern T1 T360f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_agent */
extern T1 T367f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_agent */
extern T1 T332f11(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_agent */
extern T1 T364f8(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T1347f17(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_agent */
extern T1 T1347f17p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T1088f21(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_agent */
extern T1 T1088f21p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T1123f11(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_agent */
extern T1 T1123f11p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_agent */
extern T1 T1610f8(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_agent */
extern T1 T1608f9(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_agent */
extern T1 T1187f8(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_agent */
extern T1 T1263f9(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_agent */
extern T1 T1384f7(TC* ac, T0* C);
/* ET_WHEN_PART.has_agent */
extern T1 T1381f6(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_agent */
extern T1 T1135f10(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_agent */
extern T1 T1607f9(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_agent */
extern T1 T1247f10(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_agent */
extern T1 T1199f7(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_agent */
extern T1 T1196f6(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_agent */
extern T1 T1606f10(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_agent */
extern T1 T1605f10(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_agent */
extern T1 T1603f12(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_agent */
extern T1 T1602f8(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_agent */
extern T1 T368f10(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_agent */
extern T1 T1601f10(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_agent */
extern T1 T1068f12(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_agent */
extern T1 T361f11(TC* ac, T0* C);
/* ET_COMPOUND.has_address_expression */
extern T1 T333f8(TC* ac, T0* C);
/* ET_IDENTIFIER.has_address_expression */
extern T1 T189f59(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T1833f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T2041f13(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_address_expression */
extern T1 T2057f5(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_address_expression */
extern T1 T2130f10(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_address_expression */
extern T1 T2129f9(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_address_expression */
extern T1 T2128f5(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_address_expression */
extern T1 T1564f22(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T1563f22(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_address_expression */
extern T1 T1562f22(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_address_expression */
extern T1 T1561f22(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_address_expression */
extern T1 T454f13(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_address_expression */
extern T1 T1560f25(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_address_expression */
extern T1 T1559f25(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_address_expression */
extern T1 T1557f22(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_address_expression */
extern T1 T1625f12(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T1337f23(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_address_expression */
extern T1 T1337f23p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T1085f27(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_address_expression */
extern T1 T1085f27p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_address_expression */
extern T1 T1284f7(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_address_expression */
extern T1 T1624f13(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_address_expression */
extern T1 T702f16(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_address_expression */
extern T1 T1623f19(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_address_expression */
extern T1 T1612f12(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T774f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T1631f23(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_address_expression */
extern T1 T2099f4(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_address_expression */
extern T1 T1102f10(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_address_expression */
extern T1 T1633f11(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_address_expression */
extern T1 T1082f41(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_address_expression */
extern T1 T1882f5(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T1630f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_address_expression */
extern T1 T1629f27(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T1628f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T1627f30(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_address_expression */
extern T1 T1626f28(TC* ac, T0* C);
/* ET_CALL_AGENT.has_address_expression */
extern T1 T1118f17(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_address_expression */
extern T1 T1632f9(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_address_expression */
extern T1 T1353f18(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_address_expression */
extern T1 T1287f19(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_address_expression */
extern T1 T1315f13(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_address_expression */
extern T1 T1115f14(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_address_expression */
extern T1 T394f9(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_address_expression */
extern T1 T1622f12(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_address_expression */
extern T1 T1621f14(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_address_expression */
extern T1 T1620f13(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T1619f12(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_address_expression */
extern T1 T764f12(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_address_expression */
extern T1 T1616f14(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_address_expression */
extern T1 T1615f12(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_address_expression */
extern T1 T1614f12(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_address_expression */
extern T1 T1613f12(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_address_expression */
extern T1 T1611f16(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_address_expression */
extern T1 T1350f16(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_address_expression */
extern T1 T1260f14(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_address_expression */
extern T1 T1378f6(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_address_expression */
extern T1 T1375f6(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_address_expression */
extern T1 T1244f18(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_address_expression */
extern T1 T1193f6(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_address_expression */
extern T1 T1190f7(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_address_expression */
extern T1 T405f20(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_address_expression */
extern T1 T1571f19(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_address_expression */
extern T1 T1570f19(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_address_expression */
extern T1 T1569f20(TC* ac, T0* C);
/* ET_VOID.has_address_expression */
extern T1 T1074f20(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_address_expression */
extern T1 T1568f20(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_address_expression */
extern T1 T1566f21(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_address_expression */
extern T1 T1565f21(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_address_expression */
extern T1 T1558f20(TC* ac, T0* C);
/* ET_RESULT.has_address_expression */
extern T1 T334f18(TC* ac, T0* C);
/* ET_CURRENT.has_address_expression */
extern T1 T359f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_address_expression */
extern T1 T363f16(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_address_expression */
extern T1 T370f19(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_address_expression */
extern T1 T423f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_address_expression */
extern T1 T360f13(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_address_expression */
extern T1 T367f8(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_address_expression */
extern T1 T332f10(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_address_expression */
extern T1 T364f7(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T1347f16(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_address_expression */
extern T1 T1347f16p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T1088f20(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_address_expression */
extern T1 T1088f20p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T1123f10(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_address_expression */
extern T1 T1123f10p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_address_expression */
extern T1 T1610f7(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_address_expression */
extern T1 T1608f8(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_address_expression */
extern T1 T1187f7(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_address_expression */
extern T1 T1263f8(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_address_expression */
extern T1 T1384f6(TC* ac, T0* C);
/* ET_WHEN_PART.has_address_expression */
extern T1 T1381f5(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_address_expression */
extern T1 T1135f9(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_address_expression */
extern T1 T1607f8(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_address_expression */
extern T1 T1247f9(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_address_expression */
extern T1 T1199f6(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_address_expression */
extern T1 T1196f5(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_address_expression */
extern T1 T1606f9(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_address_expression */
extern T1 T1605f9(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_address_expression */
extern T1 T1603f11(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_address_expression */
extern T1 T1602f7(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_address_expression */
extern T1 T368f9(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_address_expression */
extern T1 T1601f9(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_address_expression */
extern T1 T1068f11(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_address_expression */
extern T1 T361f10(TC* ac, T0* C);
/* ET_COMPOUND.has_result */
extern T1 T333f7(TC* ac, T0* C);
/* ET_IDENTIFIER.has_result */
extern T1 T189f58(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.has_result */
extern T1 T1833f8(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T2041f9(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.has_result */
extern T1 T2057f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.has_result */
extern T1 T2130f9(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.has_result */
extern T1 T2129f8(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.has_result */
extern T1 T2128f20(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_result */
extern T1 T1564f20(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_result */
extern T1 T1563f20(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_result */
extern T1 T1562f20(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_result */
extern T1 T1561f20(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_result */
extern T1 T454f12(TC* ac, T0* C);
/* ET_VERBATIM_STRING.has_result */
extern T1 T1560f24(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_result */
extern T1 T1559f24(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_result */
extern T1 T1557f21(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.has_result */
extern T1 T1625f11(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T1337f22(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.has_result */
extern T1 T1337f22p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T1085f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.has_result */
extern T1 T1085f26p1(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.has_result */
extern T1 T1284f6(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.has_result */
extern T1 T1624f12(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.has_result */
extern T1 T702f15(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.has_result */
extern T1 T1623f18(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.has_result */
extern T1 T1612f11(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T774f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T1631f22(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.has_result */
extern T1 T2099f3(TC* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.has_result */
extern T1 T1102f9(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.has_result */
extern T1 T1633f10(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.has_result */
extern T1 T1082f40(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.has_result */
extern T1 T1882f4(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T1630f28(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.has_result */
extern T1 T1629f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.has_result */
extern T1 T1628f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.has_result */
extern T1 T1627f29(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.has_result */
extern T1 T1626f27(TC* ac, T0* C);
/* ET_CALL_AGENT.has_result */
extern T1 T1118f16(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.has_result */
extern T1 T1632f8(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.has_result */
extern T1 T1353f17(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.has_result */
extern T1 T1287f18(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.has_result */
extern T1 T1315f12(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.has_result */
extern T1 T1115f13(TC* ac, T0* C);
/* ET_OBJECT_TEST.has_result */
extern T1 T394f8(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.has_result */
extern T1 T1622f11(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.has_result */
extern T1 T1621f13(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.has_result */
extern T1 T1620f12(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.has_result */
extern T1 T1619f11(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.has_result */
extern T1 T764f11(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.has_result */
extern T1 T1616f13(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.has_result */
extern T1 T1615f11(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.has_result */
extern T1 T1614f11(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.has_result */
extern T1 T1613f11(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.has_result */
extern T1 T1611f15(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.has_result */
extern T1 T1350f15(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.has_result */
extern T1 T1260f13(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.has_result */
extern T1 T1378f5(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.has_result */
extern T1 T1375f5(TC* ac, T0* C);
/* ET_IF_EXPRESSION.has_result */
extern T1 T1244f17(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.has_result */
extern T1 T1193f5(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.has_result */
extern T1 T1190f6(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.has_result */
extern T1 T405f19(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.has_result */
extern T1 T1571f18(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.has_result */
extern T1 T1570f18(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.has_result */
extern T1 T1569f19(TC* ac, T0* C);
/* ET_VOID.has_result */
extern T1 T1074f19(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.has_result */
extern T1 T1568f19(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_result */
extern T1 T1566f20(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_result */
extern T1 T1565f20(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.has_result */
extern T1 T1558f19(TC* ac, T0* C);
/* ET_RESULT.has_result */
extern T1 T334f17(TC* ac, T0* C);
/* ET_CURRENT.has_result */
extern T1 T359f16(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.has_result */
extern T1 T363f15(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.has_result */
extern T1 T370f18(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.has_result */
extern T1 T423f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.has_result */
extern T1 T360f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.has_result */
extern T1 T367f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.has_result */
extern T1 T332f9(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.has_result */
extern T1 T364f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_result */
extern T1 T1347f15(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.has_result */
extern T1 T1347f15p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_result */
extern T1 T1088f19(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.has_result */
extern T1 T1088f19p1(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_result */
extern T1 T1123f9(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.has_result */
extern T1 T1123f9p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.has_result */
extern T1 T1610f6(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.has_result */
extern T1 T1608f7(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.has_result */
extern T1 T1187f6(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.has_result */
extern T1 T1263f7(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.has_result */
extern T1 T1384f5(TC* ac, T0* C);
/* ET_WHEN_PART.has_result */
extern T1 T1381f4(TC* ac, T0* C);
/* ET_CHOICE_LIST.has_result */
extern T1 T1135f8(TC* ac, T0* C);
/* ET_CHOICE_RANGE.has_result */
extern T1 T1607f7(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.has_result */
extern T1 T1247f8(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.has_result */
extern T1 T1199f5(TC* ac, T0* C);
/* ET_ELSEIF_PART.has_result */
extern T1 T1196f4(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.has_result */
extern T1 T1606f8(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.has_result */
extern T1 T1605f8(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.has_result */
extern T1 T1603f10(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.has_result */
extern T1 T1602f6(TC* ac, T0* C);
/* ET_ASSIGNMENT.has_result */
extern T1 T368f8(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.has_result */
extern T1 T1601f8(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.has_result */
extern T1 T1068f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.has_result */
extern T1 T361f9(TC* ac, T0* C);
/* ET_COMPOUND.nested_instruction_count */
extern T6 T333f6(TC* ac, T0* C);
/* ET_IDENTIFIER.nested_instruction_count */
extern T6 T189f63(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T1833f7(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_INSTRUCTION.nested_instruction_count */
extern T6 T367f6(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.nested_instruction_count */
extern T6 T1347f14(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.nested_instruction_count */
extern T6 T1088f18(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.nested_instruction_count */
extern T6 T1123f8(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T1610f12(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.nested_instruction_count */
extern T6 T1608f13(TC* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.nested_instruction_count */
extern T6 T1187f5(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.nested_instruction_count */
extern T6 T1263f6(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.nested_instruction_count */
extern T6 T1384f4(TC* ac, T0* C);
/* ET_WHEN_PART.nested_instruction_count */
extern T6 T1381f3(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.nested_instruction_count */
extern T6 T1247f7(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.nested_instruction_count */
extern T6 T1199f4(TC* ac, T0* C);
/* ET_ELSEIF_PART.nested_instruction_count */
extern T6 T1196f3(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.nested_instruction_count */
extern T6 T1606f16(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.nested_instruction_count */
extern T6 T1605f15(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.nested_instruction_count */
extern T6 T1603f9(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.nested_instruction_count */
extern T6 T1602f5(TC* ac, T0* C);
/* ET_ASSIGNMENT.nested_instruction_count */
extern T6 T368f7(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.nested_instruction_count */
extern T6 T1601f7(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.nested_instruction_count */
extern T6 T1068f9(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.nested_instruction_count */
extern T6 T361f8(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T529f5(TC* ac, T0* C);
/* ET_C_GENERATOR.are_inlinable_call_operands */
extern T1 T91f573(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.is_inlinable_argument */
extern T1 T91f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T91f865(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T91f909(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T91f908(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T91f994(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T91f745(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T91f756(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T91f907(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T91f993(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T91f917(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_access */
extern void T91f768(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_pointer_name */
extern void T91f778(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T91f906(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T91f992(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T91f991(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T91f1210(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f1210ot1(TC* ac, T0* a1);
extern T1 T91f1210ot2(TC* ac, T0* a1);
extern T1 T91f1210ot3(TC* ac, T0* a1);
extern T1 T91f1210ot4(TC* ac, T0* a1);
extern T1 T91f1210ot5(TC* ac, T0* a1);
extern T1 T91f1210ot6(TC* ac, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.keep_first */
extern void T271f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T670f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T669f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T669f10(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_tuple_label */
extern void T91f1211(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_identifier */
extern void T91f868(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T336f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T638f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T639f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T639f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T336f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T638f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T639f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T336f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T336f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_qualified_call_expression */
extern void T91f844(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T363f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].force_last */
extern void T344f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T778f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T777f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T777f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T344f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T778f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T777f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T344f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T344f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_qualified_call_expression */
extern T0* T91f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T363f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].remove_last */
extern void T344f13(TC* ac, T0* C);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T777f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T777f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T344f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T779f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].set_after */
extern void T779f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].last */
extern T0* T344f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T344f10(TC* ac, T0* C);
/* ET_C_GENERATOR.new_tuple_label */
extern T0* T91f564(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_identifier */
extern T0* T91f572(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_name */
extern void T189f134(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T189f20(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].remove_last */
extern void T336f17(TC* ac, T0* C);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T639f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T639f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_last_cursors_after */
extern void T336f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T756f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].set_after */
extern void T756f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].last */
extern T0* T336f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].is_empty */
extern T1 T336f7(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T348f19(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T348c13(TC* ac, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T230f4(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T501f52(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T91f729(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T337f11(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.conforming_type_set */
extern T0* T91f563(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T273f42(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T242f31(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T91f905(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T91f990(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T91f904(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T91f989(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T91f1209(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T91f903(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T91f988(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T91f987(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T91f986(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T91f985(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T91f984(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T91f983(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T91f982(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T91f981(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T91f980(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T91f979(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T91f978(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T91f977(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T91f976(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T91f975(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T91f974(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T91f973(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T91f972(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T91f971(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T91f970(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T91f969(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T91f968(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T91f967(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T91f966(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T91f965(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T91f964(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T91f963(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T91f962(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T91f961(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T91f960(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T91f959(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T91f958(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T91f957(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T91f956(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T91f955(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T91f902(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T91f954(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T91f901(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T91f953(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T91f900(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T91f952(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T91f899(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T91f951(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T91f898(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T91f950(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T91f897(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T91f949(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T91f896(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T91f948(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f948ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_minus */
extern void T91f921(TC* ac, T0* C);
/* ET_C_GENERATOR.print_plus */
extern void T91f918(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T502f32(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1541f8(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T348f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T520f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T502f56(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T501f58(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T310f39(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T396f41(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_expanded */
extern T1 T229f30(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.has_expanded */
extern T1 T400f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_copy_routine */
extern T1 T502f13(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_copy_routine */
extern T1 T501f13(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_copy_routine */
extern T1 T310f15(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_copy_routine */
extern T1 T396f16(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T229f15(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T501f32(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T396f47(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_copy_routine */
extern T1 T396f50(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T396f47p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T310f47(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T310f47p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T229f43(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T502f42(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T501f42(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_special */
extern T1 T396f46(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T310f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T229f42(TC* ac, T0* C);
/* ET_CLASS.is_type_class */
extern T1 T78f188(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T91f947(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T91f839(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f839ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T91f746(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T91f777(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_procedure_target_expression */
extern void T91f885(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_instruction */
extern void T91f884(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_target_operand */
extern void T91f883(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T2040f5(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1601f17(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T361f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T371f6(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T371f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_position */
extern void T91f882(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T2040f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1601f14(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T361f14(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T371f4(TC* ac, T0* C);
/* ET_C_GENERATOR.line_generation_mode */
extern T1 T91f376(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_arguments */
extern void T371f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_name */
extern void T371f9(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.set_target */
extern void T371f8(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T373f12(TC* ac, T0* C, T6 a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_arguments */
extern void T373f11(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_name */
extern void T373f10(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.set_target */
extern void T373f9(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T360f22(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T360f9(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T360f21(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T806f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T804f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T360f8(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T360f20(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T806f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T804f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T804f9(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_separate_call_object_name */
extern void T91f854(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_and_then */
extern void T91f833(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T371f3(TC* ac, T0* C);
/* ET_C_GENERATOR.formal_argument */
extern T0* T91f298(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T336f16(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_inline_separate_argument */
extern T1 T189f7(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.add_separate_arguments */
extern void T2130f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.add_separate_arguments */
extern void T2129f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.add_separate_arguments */
extern void T2128f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_CAST_EXPRESSION.add_separate_arguments */
extern void T2057f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.add_separate_arguments */
extern void T1564f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OCTAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T1563f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.add_separate_arguments */
extern void T1562f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.add_separate_arguments */
extern void T1561f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_INTEGER_CONSTANT.add_separate_arguments */
extern void T454f69(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.add_separate_arguments */
extern void T1560f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.add_separate_arguments */
extern void T1559f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.add_separate_arguments */
extern void T1557f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.add_separate_arguments */
extern void T1625f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.add_separate_arguments */
extern void T1337f41(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_EXPRESSION.add_separate_arguments */
extern void T1085f42(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.add_separate_arguments */
extern void T1624f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.add_separate_arguments */
extern void T702f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_OBJECT_TEST.add_separate_arguments */
extern void T1623f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.add_separate_arguments */
extern void T1612f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T774f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T1631f47(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T1630f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.add_separate_arguments */
extern void T1629f49(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T1628f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T1627f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION_INLINE_AGENT.add_separate_arguments */
extern void T1626f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.add_separate_arguments */
extern void T1118f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STRIP_EXPRESSION.add_separate_arguments */
extern void T1353f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.add_separate_arguments */
extern void T1287f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIZED_EXPRESSION.add_separate_arguments */
extern void T1315f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACKET_EXPRESSION.add_separate_arguments */
extern void T1115f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.add_separate_arguments */
extern void T394f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.add_separate_arguments */
extern void T1622f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.add_separate_arguments */
extern void T1621f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TYPE.add_separate_arguments */
extern void T1620f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T1619f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EQUALITY_EXPRESSION.add_separate_arguments */
extern void T764f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.add_separate_arguments */
extern void T1616f31(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.add_separate_arguments */
extern void T1615f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.add_separate_arguments */
extern void T1614f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.add_separate_arguments */
extern void T1613f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_EXPRESSION.add_separate_arguments */
extern void T1611f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_STATIC_CALL_EXPRESSION.add_separate_arguments */
extern void T1350f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.add_separate_arguments */
extern void T1260f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IF_EXPRESSION.add_separate_arguments */
extern void T1244f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_EXPRESSION.add_separate_arguments */
extern void T405f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.add_separate_arguments */
extern void T1571f53(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.add_separate_arguments */
extern void T1570f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FALSE_CONSTANT.add_separate_arguments */
extern void T1569f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VOID.add_separate_arguments */
extern void T1074f35(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TRUE_CONSTANT.add_separate_arguments */
extern void T1568f44(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.add_separate_arguments */
extern void T1566f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_REAL_CONSTANT.add_separate_arguments */
extern void T1565f48(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REGULAR_MANIFEST_STRING.add_separate_arguments */
extern void T1558f51(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT.add_separate_arguments */
extern void T334f40(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_EXPRESSION.add_separate_arguments */
extern void T363f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_TUPLE.add_separate_arguments */
extern void T370f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_INLINED_EXPRESSION.add_separate_arguments */
extern void T423f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT.add_separate_arguments */
extern void T359f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.add_separate_arguments */
extern void T189f137(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].wipe_out */
extern void T336f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].move_all_cursors_after */
extern void T336f19(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_call_name */
extern void T91f851(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_in_comment */
extern void T91f743(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T371f2(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.separate_target */
extern T0* T1606f18(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.separate_target */
extern T0* T1605f17(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T371f1(TC* ac, T0* C);
/* ET_C_GENERATOR.current_closure */
extern T0* T91f320(TC* ac, T0* C);
extern T1 T91f320ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T91f821(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T370f35(TC* ac, T0* C);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T91f881(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_name */
extern void T91f806(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T91f806ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T91f310(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_current */
extern T1 T2100f5(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_current */
extern T1 T1633f9(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_current */
extern T1 T1082f39(TC* ac, T0* C);
/* ET_CALL_AGENT.is_call_agent */
extern T1 T1118f29(TC* ac, T0* C);
/* ET_C_GENERATOR.register_polymorphic_called_features */
extern void T91f880(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_generated */
extern void T304f19(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_generated */
extern void T303f18(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_force_result_boxing */
extern void T303f17(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T91f799(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T91f773(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T91f808(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T91f808ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T91f808ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T91f879(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T91f724(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T91f835(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_separate_qualified_call_expression */
extern void T91f878(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T91f838(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T91f838ac1(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
extern T1 T91f838ot1(TC* ac, T0* a1);
extern T1 T91f838ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_query_call */
extern void T91f864(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f864ot1(TC* ac, T0* a1);
extern T1 T91f864ot2(TC* ac, T0* a1);
extern T1 T91f864ot3(TC* ac, T0* a1);
extern T1 T91f864ot4(TC* ac, T0* a1);
extern T1 T91f864ot5(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_inlined_query_call */
extern void T91f895(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f895ot1(TC* ac, T0* a1);
extern T1 T91f895ot2(TC* ac, T0* a1);
extern T1 T91f895ot3(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].replace */
extern void T350f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].item */
extern T0* T350f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].is_empty */
extern T1 T350f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T91f894(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T91f946(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T91f1208(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T91f1207(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T91f1206(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T91f1205(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T91f1204(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T91f1203(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1576f49(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T958f50(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T78f144(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T91f1202(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T91f1201(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T91f945(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T91f1200(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T91f1199(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f1199ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T91f944(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T91f1198(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T91f1197(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T91f1197ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T91f1196(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T91f727(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T91f787(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_name */
extern void T91f755(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T91f1195(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T91f726(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T91f786(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T91f1194(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T91f943(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T91f1193(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T91f1192(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T91f1191(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T91f1190(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T91f942(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T91f1189(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T91f1188(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T91f1187(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T91f1186(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T91f1185(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T91f1184(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T91f1183(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T91f1182(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T91f1181(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T91f1180(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T91f1179(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T91f1178(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T91f1177(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T91f1176(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T91f916(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T1 a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.total_order_on_reals_mode */
extern T1 T91f384(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_minimum_number_call */
extern void T91f1175(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_maximum_number_call */
extern void T91f1174(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_equal_call */
extern void T91f1173(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_less_call */
extern void T91f1172(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_equal_call */
extern void T91f1171(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_greater_call */
extern void T91f1170(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ieee_is_equal_call */
extern void T91f1169(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T91f1168(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T91f1167(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T91f1166(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T91f1165(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T91f1164(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T91f941(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T91f1163(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T91f940(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T91f1162(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T91f1161(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T91f1160(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T91f1159(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T91f939(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T91f1158(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T91f1157(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T91f1156(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T91f1155(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T91f1154(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T91f1153(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T91f1152(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T91f1151(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T91f1150(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T91f1149(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T91f1148(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T91f1147(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T91f1146(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T91f1145(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T91f1144(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T91f1143(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T91f938(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T91f1142(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T91f937(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T91f1141(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T91f1140(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T91f1139(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T91f1138(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T91f1137(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T91f1136(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T91f1135(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T91f1134(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T91f1133(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T91f1132(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T91f1131(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T91f1130(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T91f1129(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T91f1128(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T91f1127(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T91f1126(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T91f1125(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T91f1124(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T91f1123(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T91f1122(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T91f1121(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T91f1120(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T91f1119(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T91f1118(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T91f1117(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T91f1116(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T91f1115(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T91f1114(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T91f1113(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T91f1112(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T91f1111(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T91f1110(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T91f1109(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T91f1108(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T91f1107(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T91f1106(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T91f1105(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T91f1104(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T91f1103(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T91f1102(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T91f1101(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T91f1100(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T91f1099(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T91f1098(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T91f1097(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T91f1096(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T91f1095(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T91f1094(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T91f1093(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T91f1092(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T91f1091(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T91f1090(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_8_of_type_call */
extern void T91f1089(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T91f1088(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_8_of_type_call */
extern void T91f1087(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T91f1086(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T91f1085(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T91f1084(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T91f1083(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T91f1082(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T91f1081(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T91f1080(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T91f1079(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T91f1078(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T91f1077(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T91f1076(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T91f1075(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T91f1074(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T91f1073(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T91f1072(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T91f1071(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T91f1070(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T91f1069(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T91f1068(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T91f936(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T91f1067(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T91f935(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T91f1066(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T91f1065(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T91f1064(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T91f1063(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T91f1062(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T91f1061(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T91f1060(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T91f1059(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T91f1058(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T91f1057(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T91f1056(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T91f1055(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T91f1054(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T91f1053(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T91f1052(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T91f1051(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T91f1050(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T91f1049(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T91f1048(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T91f1047(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T91f1046(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T91f1045(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T91f1044(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T91f1043(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T91f1042(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T91f1041(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T91f1040(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T91f1039(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T91f1038(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T91f1037(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T91f934(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T91f1036(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_is_object_id_of_current_call */
extern void T91f1035(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T91f1034(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_current_object_id_call */
extern void T91f1033(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T91f933(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T91f1032(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T91f1031(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T91f932(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T91f1030(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T91f1029(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T91f1028(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T91f1027(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T91f1026(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T91f1025(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T91f931(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T91f1024(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T91f930(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T91f1023(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T91f1022(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T91f1021(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T91f1020(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T91f929(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T91f1019(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T91f928(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T91f1018(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T91f1017(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T91f1016(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T91f1015(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T91f1014(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T91f1013(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T91f1012(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T91f927(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T91f1011(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T91f1010(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T91f1009(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T91f926(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_twin_call */
extern void T91f1008(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_call */
extern void T91f1007(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T91f860(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_reference */
extern void T91f889(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
extern T1 T91f889ot1(TC* ac, T0* a1);
extern T1 T91f889ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_times */
extern void T91f920(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_offset_access */
extern void T91f919(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_offset_name */
extern void T91f1001(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call_with_expanded */
extern void T91f888(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_C_GENERATOR.print_equal_to */
extern void T91f830(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_redefined_is_equal_routine */
extern T1 T502f12(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_redefined_is_equal_routine */
extern T1 T501f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_redefined_is_equal_routine */
extern T1 T396f17(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_redefined_is_equal_routine */
extern T1 T310f17(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T229f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T502f30(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T501f30(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T396f44(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_item_nested_custom_standard_is_equal_routine */
extern T1 T396f48(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T396f44p1(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T310f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T310f44p1(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T229f40(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T348f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T348f10p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T348f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T348f11p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T91f1006(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T91f834(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T91f1005(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T91f1004(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T91f1003(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T354f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T354f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T354f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T354f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T354f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T354f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T354f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T354f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T354f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T354f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T354f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T354f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T354f47(TC* ac, T0* C);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T91f893(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_self_initializing */
extern T1 T502f61(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_self_initializing */
extern T1 T501f61(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_self_initializing */
extern T1 T400f11(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_self_initializing */
extern T1 T396f33(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_self_initializing */
extern T1 T310f31(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_self_initializing */
extern T1 T229f51(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_self_initializing_code */
extern T1 T442f54(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T271f13(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_value_name */
extern void T91f749(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T377f43(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T377f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T377f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T377f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T377f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T377f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T377f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T377f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T377f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T377f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T377f63(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T814f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T812f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T377f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T377f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T377f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T377f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T377f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T377f54(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T814f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T812f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T812f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T377f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T377f46(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_special_item */
extern T1 T273f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_once_function_call */
extern void T91f863(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T91f863ac1(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_once_function_call */
extern T0* T91f863ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.register_once_feature */
extern void T91f891(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].force_last */
extern void T375f39(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_put */
extern void T375f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_put */
extern void T375f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_put */
extern void T375f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].resize */
extern void T375f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_resize */
extern void T375f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].special_integer_ */
extern T0* T375f32(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_resize */
extern void T375f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_resize */
extern void T375f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_resize */
extern void T375f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_modulus */
extern T6 T375f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_capacity */
extern T6 T375f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_put */
extern void T375f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].unset_found_item */
extern void T375f43(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern void T91f862(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T91f862ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_adapted_extended_attribute_call */
extern T0* T91f862ac2(TC* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.is_inlinable_function */
extern T1 T91f375(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f375ot1(TC* ac, T0* a1);
extern T1 T91f375ot2(TC* ac, T0* a1);
extern T1 T91f375ot3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T351f17(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T91f877(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T370f32(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T370f11(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_operand */
extern void T91f816(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f816ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T91f765(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T91f763(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_expanded_types */
extern void T348f22(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_twin_feature_name */
extern void T91f845(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_twin_feature_name */
extern T0* T91f331(TC* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T189f132(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T91f876(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T2130f6(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T959f7(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1621f12(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1616f12(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T1115f10(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T363f7(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T373f5(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T373f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T350f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T350f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T350f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T350f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_writable */
extern void T91f817(TC* ac, T0* C, T0* a1);
extern T1 T91f817ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T91f728(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_local_variable */
extern void T91f850(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T91f873(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument */
extern void T91f849(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_item */
extern void T91f848(TC* ac, T0* C, T0* a1);
extern T1 T91f848ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T91f847(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_volatile */
extern void T91f870(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].replace */
extern void T339f12(TC* ac, T0* C, T1 a1, T6 a2);
/* ET_C_GENERATOR.temp_variable_type */
extern T0* T91f372(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_known */
extern T1 T91f371(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_operand */
extern void T91f875(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.is_twin_needed_in_attachment */
extern T1 T91f382(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T91f818(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T91f178(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].force_last */
extern void T339f13(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [BOOLEAN].resize */
extern void T339f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_capacity */
extern T6 T339f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].extendible */
extern T1 T339f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T337f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T758f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].fill_with */
extern void T757f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].extend */
extern void T757f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T337f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T758f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].aliased_resized_area */
extern T0* T757f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T337f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T337f7(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T189f128(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T91f571(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T91f874(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_free */
extern T1 T91f374(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T189f26(TC* ac, T0* C);
/* ET_C_GENERATOR.fill_call_operands */
extern void T91f802(TC* ac, T0* C, T6 a1);
extern T1 T91f802ot1(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T350f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T350f5(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T91f843(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.has_field_access */
extern T1 T303f14(TC* ac, T0* C, T0* a1);
extern T1 T303f14ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.in_call_target */
extern T1 T91f329(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.query_call */
extern T0* T273f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].value */
extern T0* T656f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].item_storage_item */
extern T0* T656f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].position_of_key */
extern T6 T656f25(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.query_call */
extern T0* T242f33(TC* ac, T0* C, T0* a1);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T373f3(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T373f2(TC* ac, T0* C);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T373f1(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T2129f30(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T294f64(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T288f70(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1409f123(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T270f466(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T270f469(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T270f348(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T59f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T852c1226(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T41f553(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_dotnet_creation_procedure_call_expression_validity */
extern void T270f424(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_FEATURE_CHECKER.check_creation_procedure_call_expression_validity */
extern void T270f423(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T270f423ot1(TC* ac, T0* a1);
extern T1 T270f423ot2(TC* ac, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T2129f27(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T405f31(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T405f24(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T2129f26(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T74f578(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T74f581(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T74f483(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_dotnet_creation_procedure_call_expression_validity */
extern void T74f530(TC* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_procedure_call_expression_validity */
extern void T74f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
extern T1 T74f529ot1(TC* ac, T0* a1);
extern T1 T74f529ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T91f1606(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T91f1609(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T91f760(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T2128f22(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T294f63(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T288f69(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1409f122(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T270f465(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T270f468(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T74f577(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T74f580(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T91f1605(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T91f1608(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1564f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1409f97(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T74f346(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T74f452(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T74f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1564f74(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1563f74(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1562f74(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1561f74(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T454f75(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.sign */
extern T0* T1564f2(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.sign */
extern T0* T1563f2(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.sign */
extern T0* T1562f2(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.sign */
extern T0* T1561f2(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.sign */
extern T0* T454f2(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_binary */
extern T1 T1564f41(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1563f41(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1562f41(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1561f41(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T454f36(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1564f40(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1563f40(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1562f40(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1561f40(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T454f35(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T74f372(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T74f460(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T272f49(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T272f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T675f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T674f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T674f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T272f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T272f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T272f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T272f24(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.hash_code */
extern T6 T400f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T272f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T272f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T272f31(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T272f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T675f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T674f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T272f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T272f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T272f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T272f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T272f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T272f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T272f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T272f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T272f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T272f21(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T272f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T272f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T272f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T74f371(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T74f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T74f369(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T74f368(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T74f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T74f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T59f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T852c1136(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BINARY_INTEGER_CONSTANT.literal */
extern T0* T1564f5(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.literal */
extern T0* T1563f5(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.literal */
extern T0* T1562f5(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.literal */
extern T0* T1561f5(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.literal */
extern T0* T454f3(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1564f58(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1563f58(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1562f58(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1561f58(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T454f58(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T59f135(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T41f463(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T41f135(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T74f365(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T59f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T852c1135(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T852f576(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T59f134(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T41f462(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T41f134(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T294f19(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T288f24(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T270f153(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T270f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T270f290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T270f387(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T270f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T270f385(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T270f384(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T270f383(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T270f382(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T270f381(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T270f380(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T91f1557(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T91f1584(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T91f1595(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1563f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1409f96(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T74f345(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T74f451(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T294f18(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T288f23(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T270f152(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T270f233(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T91f1556(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T91f1583(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1562f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1409f95(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T74f344(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T74f450(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T294f17(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T288f22(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T270f151(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T270f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T91f1555(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T91f1582(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1561f66(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1409f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T74f343(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T74f449(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T294f16(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T288f21(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T270f150(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T270f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T91f1554(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T91f1581(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T454f68(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1409f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T74f569(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T74f574(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T294f60(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T288f66(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T270f460(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T270f463(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T91f1601(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T91f1603(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T1560f53(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1409f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T74f342(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T74f448(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T74f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VERBATIM_STRING.set_type */
extern void T1560f60(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1559f56(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T1558f55(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_32_constant */
extern void T74f376(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T74f461(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T74f523(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T74f375(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_immutable_string_8_constant */
extern void T74f374(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.immutable_string_8_type */
extern T0* T192f44(TC* ac, T0* C);
/* ET_SYSTEM.immutable_string_8_type */
extern T0* T46f52(TC* ac, T0* C);
/* ET_ECF_SYSTEM.immutable_string_8_type */
extern T0* T63f47(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2c_error */
extern void T59f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2c */
extern T0* T852c1138(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VERBATIM_STRING.value_position */
extern T0* T1560f44(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.value_position */
extern T0* T1559f40(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.value_position */
extern T0* T1558f39(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2c_error */
extern void T41f465(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T74f373(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T59f464(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T852c1137(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T41f464(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.cast_type */
extern T0* T1560f3(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.cast_type */
extern T0* T1559f3(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.cast_type */
extern T0* T1558f3(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T294f15(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T288f20(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T270f149(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T270f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T270f291(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_32_constant */
extern void T270f391(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T270f390(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_immutable_string_8_constant */
extern void T270f389(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T270f388(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T91f1553(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T91f1580(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T91f1380(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_8 */
extern void T91f1385(TC* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_natural_32 */
extern void T432f3(TC* ac, T0* C, T0* a1, T10 a2);
/* ET_C_GENERATOR.print_utf8_as_escaped_string_32 */
extern void T91f1384(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1559f49(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1409f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T74f341(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T74f447(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T294f14(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T288f19(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T270f148(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T270f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T91f1552(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T91f1579(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1557f50(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1409f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T74f340(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T74f446(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T74f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1557f57(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1571f57(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1570f56(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T74f364(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2b_error */
extern void T59f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2b */
extern T0* T852c1134(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T852f1134ot1(TC* ac, T0* a1);
extern T1 T852f1134ot2(TC* ac, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.literal */
extern T2 T1571f42(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.value_position */
extern T0* T1557f43(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.value_position */
extern T0* T1571f43(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.value_position */
extern T0* T1570f42(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvwmc2b_error */
extern void T41f461(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T74f363(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T59f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T852c1133(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T41f460(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T294f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T288f17(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T270f146(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T270f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T270f289(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T270f379(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T270f378(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T91f1551(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T91f1342(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T394f28(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1409f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T74f319(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T74f426(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T74f495(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T74f494(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T294f51(TC* ac, T0* C, T0* a1);
extern T1 T294f51ot1(TC* ac, T0* a1);
extern T1 T294f51ot2(TC* ac, T0* a1);
extern T1 T294f51ot3(TC* ac, T0* a1);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T189f104(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1564f45(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1563f45(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1562f45(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1561f45(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T454f38(TC* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1560f38(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1559f35(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1557f34(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.unparenthesized_expression */
extern T0* T1625f21(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.unparenthesized_expression */
extern T0* T1337f35(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T1085f36(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1624f23(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T702f25(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1623f28(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1612f21(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T774f24(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1631f38(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1630f44(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1629f40(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1628f39(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1627f45(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1626f41(TC* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T1118f30(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1353f28(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T370f28(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T1287f28(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T1315f23(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T1115f25(TC* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T394f24(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1622f21(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1621f26(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1620f22(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T1619f22(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T764f21(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1616f26(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1615f21(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1614f21(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1613f21(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1611f25(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1350f25(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T363f26(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.unparenthesized_expression */
extern T0* T1260f24(TC* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T1244f27(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T405f32(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1571f32(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1570f32(TC* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T359f31(TC* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T334f31(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1569f30(TC* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T1074f29(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1568f30(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1566f32(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1565f32(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1558f33(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression */
extern T0* T1623f9(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression */
extern T0* T702f5(TC* ac, T0* C);
/* ET_OBJECT_TEST.expression */
extern T0* T394f4(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T288f56(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T270f192(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T270f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T270f351(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T270f350(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T91f1538(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T91f1322(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T91f798(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T356f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T796f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T795f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T795f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T356f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T796f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T795f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T356f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T356f8(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T91f1217(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST.name */
extern T0* T394f23(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.name */
extern T0* T1623f2(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.name */
extern T0* T702f2(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.process */
extern void T405f39(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1409f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T74f304(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T74f412(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T294f48(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T288f53(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T270f189(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T270f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_create_expression */
extern void T91f1539(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T91f1567(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1631f46(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1409f81(TC* ac, T0* C, T0* a1);
extern T1 T1409f81ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1409f107(TC* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1633f16(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1409f114(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T1082f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1409f119(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T74f331(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T74f438(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T59f535(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T852c1208(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T59f162(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T41f535(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T41f162(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T74f510(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T74f551(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T74f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f560ot1(TC* ac, T0* a1);
extern T1 T74f560ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T74f565(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f565ot1(TC* ac, T0* a1);
/* ET_CALL_AGENT.target */
extern T0* T1118f3(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T2057f19(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.is_open_operand */
extern T1 T423f20(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.is_open_operand */
extern T1 T2100f4(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T2130f23(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T2129f25(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T2128f19(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_open_operand */
extern T1 T1633f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1631f39(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1630f45(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1629f41(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1628f40(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1627f46(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1626f42(TC* ac, T0* C);
/* ET_ITERATION_CURSOR.is_open_operand */
extern T1 T1625f22(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1624f25(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1623f29(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1622f22(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1621f27(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1620f23(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T1619f23(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1616f27(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1615f22(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1614f22(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1613f22(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1612f22(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1611f26(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1571f34(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1570f34(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1569f31(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1568f31(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1566f33(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1565f33(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1564f47(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1563f47(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1562f47(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1561f47(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1560f39(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1559f36(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T1558f34(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1557f36(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1353f29(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1350f27(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.is_open_operand */
extern T1 T1337f36(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T1287f29(TC* ac, T0* C);
/* ET_INSPECT_EXPRESSION.is_open_operand */
extern T1 T1260f25(TC* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T1244f28(TC* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T1118f31(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T1115f26(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T1085f37(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_open_operand */
extern T1 T1082f37(TC* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T1074f30(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T764f22(TC* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T702f26(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T454f42(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T405f33(TC* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T394f25(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T370f29(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T363f27(TC* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T189f69(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T774f16(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_open_operand */
extern T1 T1632f6(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T1315f16(TC* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T359f24(TC* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T334f24(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1882f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T1631f7(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T1630f8(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_arguments */
extern T0* T1629f8(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T1628f7(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T1627f10(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_arguments */
extern T0* T1626f10(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T74f564(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1631f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1630f25(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1629f23(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T1628f14(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T1627f6(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_result */
extern T0* T1626f6(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.target */
extern T0* T1631f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.target */
extern T0* T1630f15(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.target */
extern T0* T1629f14(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.target */
extern T0* T1628f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.target */
extern T0* T1627f17(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.target */
extern T0* T1626f16(TC* ac, T0* C);
/* ET_ECF_LIBRARY.procedure_identity_type */
extern T0* T192f70(TC* ac, T0* C);
/* ET_SYSTEM.procedure_identity_type */
extern T0* T46f76(TC* ac, T0* C);
/* ET_ECF_SYSTEM.procedure_identity_type */
extern T0* T63f73(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tuple_identity_type */
extern T0* T192f27(TC* ac, T0* C);
/* ET_SYSTEM.tuple_identity_type */
extern T0* T46f38(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tuple_identity_type */
extern T0* T63f30(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T74f549(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T74f549ot1(TC* ac, T0* a1);
extern T1 T74f549ot2(TC* ac, T0* a1);
extern T1 T74f549ot3(TC* ac, T0* a1);
extern T1 T74f549ot4(TC* ac, T0* a1);
extern T1 T74f549ot5(TC* ac, T0* a1);
extern T1 T74f549ot6(TC* ac, T0* a1);
extern T1 T74f549ot7(TC* ac, T0* a1);
extern T1 T74f549ot8(TC* ac, T0* a1);
extern T1 T74f549ot9(TC* ac, T0* a1);
extern T1 T74f549ot10(TC* ac, T0* a1);
extern T1 T74f549ot11(TC* ac, T0* a1);
extern T1 T74f549ot12(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T59f587(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T852c1260(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T59f181(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T41f587(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T41f181(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T59f586(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T852c1259(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T41f586(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T59f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T852c1258(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T59f180(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T41f585(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T41f180(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T59f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T852c1257(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T41f584(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T1102f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T59f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T852c1256(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T59f179(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T41f583(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T41f179(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T59f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T852c1255(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T41f582(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T1118f15(TC* ac, T0* C);
extern T1 T1118f15ot1(TC* ac, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T1102f12(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T246f36(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T246f37(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T664f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T660f4(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T246f25(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T246f24(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T74f548(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CALL_AGENT.set_arguments */
extern void T1118f41(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1631f48(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1630f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1629f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1628f49(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1627f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1626f51(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T2099f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T2168f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T2167f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T2167f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T2099f9(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T2168c2(TC* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T2100c6(TC* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T2099c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T2168f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T2167c4(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T280f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T280f8(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_iteration_components_validity */
extern void T74f507(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T74f506(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T59f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T852c1240(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T41f567(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T74f503(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T74f545(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T74f544(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1i_error */
extern void T59f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1i */
extern T0* T852c1239(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T59f173(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1i_error */
extern void T41f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T41f173(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hidden_inline_separate_argument */
extern T0* T292f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T59f565(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T852c1238(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T41f565(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T59f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T852c1237(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T41f564(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T59f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T852c1236(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T41f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T59f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T852c1235(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T41f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T59f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T852c1234(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T41f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T59f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T852c1233(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T41f560(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T59f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T852c1205(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0i_error */
extern void T41f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.hide_inline_separate_arguments */
extern void T292f10(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.count */
extern T6 T292f4(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.hide_iteration_components */
extern void T290f10(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_ITEM_SCOPE.count */
extern T6 T290f5(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T287f9(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T294f44(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T288f49(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T270f185(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T270f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T270f344(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T270f422(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T270f420(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T270f420ot1(TC* ac, T0* a1);
extern T1 T270f420ot2(TC* ac, T0* a1);
extern T1 T270f420ot3(TC* ac, T0* a1);
extern T1 T270f420ot4(TC* ac, T0* a1);
extern T1 T270f420ot5(TC* ac, T0* a1);
extern T1 T270f420ot6(TC* ac, T0* a1);
extern T1 T270f420ot7(TC* ac, T0* a1);
extern T1 T270f420ot8(TC* ac, T0* a1);
extern T1 T270f420ot9(TC* ac, T0* a1);
extern T1 T270f420ot10(TC* ac, T0* a1);
extern T1 T270f420ot11(TC* ac, T0* a1);
extern T1 T270f420ot12(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T270f419(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_iteration_components_validity */
extern void T270f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T270f340(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T270f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T270f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1423f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T270f415(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T91f1320(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T91f1370(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T91f1377(TC* ac, T0* C, T0* a1);
extern T1 T91f1377ot1(TC* ac, T0* a1);
extern T1 T91f1377ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T91f795(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T358f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T802f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T801f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T801f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T358f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T802f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T801f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T358f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T358f8(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T1631f21(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T1630f24(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_qualified_call */
extern T1 T1629f22(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T1628f23(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T1627f26(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_qualified_call */
extern T1 T1626f24(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T91f1369(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1630f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1409f80(TC* ac, T0* C, T0* a1);
extern T1 T1409f80ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T74f330(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T74f437(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T59f534(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T852c1207(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T41f534(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T74f144(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T74f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T59f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T852c1062(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T59f94(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T41f386(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T41f94(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1931f12(TC* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1931f11(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T59f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T852c1061(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.note_term_value */
extern T0* T454f64(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T1071f10(TC* ac, T0* C);
/* ET_IDENTIFIER.note_term_value */
extern T0* T189f121(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term_value */
extern T0* T1575f8(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.note_term_value */
extern T0* T1571f48(TC* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f17(TC* ac, volatile T3* C);
/* ET_C1_CHARACTER_CONSTANT.note_term_value */
extern T0* T1570f47(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term_value */
extern T0* T1569f40(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term_value */
extern T0* T1568f40(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term_value */
extern T0* T1566f42(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term_value */
extern T0* T1565f42(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term_value */
extern T0* T1564f64(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term_value */
extern T0* T1563f64(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term_value */
extern T0* T1562f64(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term_value */
extern T0* T1561f64(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term_value */
extern T0* T1560f51(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term_value */
extern T0* T1559f47(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term_value */
extern T0* T1558f46(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term_value */
extern T0* T1557f48(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T59f93(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T41f385(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T41f93(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T59f384(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T852c1060(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T41f384(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1931f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T74f76(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].wipe_out */
extern void T297f12(TC* ac, T0* C);
/* SPECIAL [ET_NOTE_TERM].keep_head */
extern void T729f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM].set_count */
extern void T729f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].move_all_cursors_after */
extern void T297f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_next_cursor */
extern void T730f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].set_after */
extern void T730f6(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T59f383(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T852c1059(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T41f383(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T59f382(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T852c1058(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T41f382(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].item */
extern T0* T297f7(TC* ac, T0* C, T6 a1);
/* ET_NOTE_LIST.append_tagged_note_terms_to_list */
extern void T1298f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NOTE_TERM_LIST.append_note_terms_to_list */
extern void T1309f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].force_last */
extern void T297f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].force */
extern void T727f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].fill_with */
extern void T729f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM].extend */
extern void T729f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].resize */
extern void T297f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].aliased_resized_area */
extern T0* T727f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NOTE_TERM].aliased_resized_area */
extern T0* T729f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_capacity */
extern T6 T297f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].extendible */
extern T1 T297f8(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.note_term */
extern T0* T189f120(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.note_term */
extern T0* T1564f61(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.note_term */
extern T0* T1563f61(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.note_term */
extern T0* T1562f61(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.note_term */
extern T0* T1561f61(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.note_term */
extern T0* T454f61(TC* ac, T0* C);
/* ET_VERBATIM_STRING.note_term */
extern T0* T1560f47(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.note_term */
extern T0* T1559f43(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.note_term */
extern T0* T1557f46(TC* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.note_term */
extern T0* T1575f7(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.note_term */
extern T0* T1571f46(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.note_term */
extern T0* T1570f45(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.note_term */
extern T0* T1569f37(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.note_term */
extern T0* T1568f37(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.note_term */
extern T0* T1566f39(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.note_term */
extern T0* T1565f39(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.note_term */
extern T0* T1558f42(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_note */
extern T0* T1630f35(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T74f508(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T74f547(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T74f546(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_attached_index */
extern void T1845f13(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_attached_index */
extern void T1276f12(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_COMMA_VARIABLE.set_index */
extern void T1845f12(TC* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE.set_index */
extern void T1276f11(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T74f148(TC* ac, T0* C, T0* a1);
extern T1 T74f148ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1j_error */
extern void T59f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1j */
extern T0* T852c1248(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1j_error */
extern void T41f575(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T59f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T852c1247(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T41f574(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T59f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T852c1246(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T41f573(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T59f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T852c1245(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T41f572(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T59f571(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T852c1244(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T41f571(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T59f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T852c1243(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T59f175(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T41f570(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T41f175(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T59f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T852c1242(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T59f174(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T41f569(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T41f174(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T59f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T852c1241(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T41f568(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IDENTIFIER.set_local */
extern void T189f140(TC* ac, T0* C, T1 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T294f43(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T288f48(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T270f184(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T270f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T270f113(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T270f117(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T270f55(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T270f342(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T270f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1423f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T270f417(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T270f121(TC* ac, T0* C, T0* a1);
extern T1 T270f121ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T91f1319(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T91f1368(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T1630f23(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T1630f34(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T91f1367(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T91f1383(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature_body_declaration */
extern void T91f1254(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_inline_separate_argument_declarations */
extern void T91f1270(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor_declarations */
extern void T91f1269(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_declarations */
extern void T91f1268(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.compound */
extern T0* T442f16(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.compound */
extern T0* T1630f12(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.compound */
extern T0* T1629f11(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.compound */
extern T0* T1627f14(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.compound */
extern T0* T1626f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.compound */
extern T0* T1586f6(TC* ac, T0* C);
/* ET_DO_FUNCTION.compound */
extern T0* T531f8(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.compound */
extern T0* T1589f6(TC* ac, T0* C);
/* ET_DO_PROCEDURE.compound */
extern T0* T524f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T91f1244(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T91f1263(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_mutex */
extern void T91f1275(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_mutex */
extern void T91f1274(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_mutex_name */
extern void T91f782(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T91f1255(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T91f1236(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_status */
extern void T91f1259(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_status */
extern void T91f1258(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_status */
extern void T91f1257(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_status_name */
extern void T91f779(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T91f1248(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_status */
extern void T91f1239(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T91f1247(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T91f1260(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_thread_exception */
extern void T91f1273(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_process_exception */
extern void T91f1272(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_exception */
extern void T91f1271(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_exception_name */
extern void T91f781(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_exception */
extern void T91f1261(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1630f26(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1630f19(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1629f24(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1627f27(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1627f20(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_note */
extern T0* T1627f36(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T1627f35(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1626f25(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T91f1267(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T91f1266(TC* ac, T0* C);
/* ET_C_GENERATOR.reset_volatile_data */
extern void T91f1265(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.rescue_clause */
extern T0* T442f15(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T1630f14(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.rescue_clause */
extern T0* T1629f13(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T1627f16(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.rescue_clause */
extern T0* T1626f15(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.rescue_clause */
extern T0* T1586f22(TC* ac, T0* C);
/* ET_DO_FUNCTION.rescue_clause */
extern T0* T531f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.rescue_clause */
extern T0* T1589f20(TC* ac, T0* C);
/* ET_DO_PROCEDURE.rescue_clause */
extern T0* T524f4(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T91f1398(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T91f1264(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T1630f27(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_inline_agent */
extern T1 T1629f25(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T1627f28(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_inline_agent */
extern T1 T1626f26(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1629f48(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1409f79(TC* ac, T0* C, T0* a1);
extern T1 T1409f79ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T74f329(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T74f436(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T294f42(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T288f47(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T270f183(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T270f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T91f1318(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T91f1366(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T91f1365(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1628f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1409f78(TC* ac, T0* C, T0* a1);
extern T1 T1409f78ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T74f328(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T74f435(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T74f509(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T74f550(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.function_identity_any_type */
extern T0* T192f43(TC* ac, T0* C);
/* ET_SYSTEM.function_identity_any_type */
extern T0* T46f51(TC* ac, T0* C);
/* ET_ECF_SYSTEM.function_identity_any_type */
extern T0* T63f46(TC* ac, T0* C);
/* ET_ECF_LIBRARY.predicate_identity_type */
extern T0* T192f69(TC* ac, T0* C);
/* ET_SYSTEM.predicate_identity_type */
extern T0* T46f75(TC* ac, T0* C);
/* ET_ECF_SYSTEM.predicate_identity_type */
extern T0* T63f72(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T74f505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T74f504(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1631f58(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1630f66(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_attached_result_index */
extern void T1629f61(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1628f59(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1627f67(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_attached_result_index */
extern void T1626f62(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1631f57(TC* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1630f65(TC* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_result_index */
extern void T1629f60(TC* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1628f58(TC* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1627f66(TC* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_result_index */
extern void T1626f61(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T294f41(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T288f46(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T270f182(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T270f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T270f343(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T270f421(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T270f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1423f13(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T270f338(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T91f1317(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T91f1364(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T91f1363(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1627f53(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1409f77(TC* ac, T0* C, T0* a1);
extern T1 T1409f77ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T74f327(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T74f434(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T59f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T852c1206(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T2082f42(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T41f533(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T293f6(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T294f40(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T288f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T270f181(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T270f262(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T91f1316(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T91f1362(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T1627f25(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T91f1361(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1626f49(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1409f76(TC* ac, T0* C, T0* a1);
extern T1 T1409f76ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T74f326(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T74f433(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T294f39(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T288f44(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T270f180(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T270f261(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T91f1315(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T91f1360(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T91f1359(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.process */
extern void T1625f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_iteration_cursor */
extern void T1409f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_iteration_cursor */
extern void T74f339(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_cursor_validity */
extern void T74f445(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_cursor */
extern void T74f521(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_voit3a_error */
extern void T59f547(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_voit3a */
extern T0* T852c1220(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_voit3_error */
extern T1 T59f166(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit3a_error */
extern void T41f547(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_voit3_error */
extern T1 T41f166(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_iteration_cursor */
extern void T294f38(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_iteration_cursor */
extern void T288f43(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_iteration_cursor */
extern void T270f179(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_iteration_cursor_validity */
extern void T270f260(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_cursor */
extern void T270f336(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_iteration_cursor */
extern void T91f1314(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_cursor */
extern void T91f1358(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1624f28(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1409f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T74f336(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T74f442(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T294f37(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T288f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T270f178(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T270f259(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T91f1313(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T91f1357(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T91f750(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T378f60(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T378f66(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T818f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T816f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T816f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T378f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T378f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T378f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T378f33(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1624f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].resize */
extern void T378f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T378f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T378f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T378f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T818f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T816f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T378f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T378f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T378f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T378f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T378f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T378f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T378f62(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T378f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T378f45(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.process */
extern void T1623f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1409f84(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T74f334(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T74f441(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T74f519(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T74f552(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T59f546(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T852c1219(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T59f165(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T41f546(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T41f165(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T59f545(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T852c1218(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T41f545(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T74f98(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T59f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T852c1217(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T59f164(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T41f544(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T41f164(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T59f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T852c1216(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T41f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T59f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T852c1215(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T41f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T59f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T852c1214(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T41f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T59f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T852c1213(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T41f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T59f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T852c1212(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T41f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T286f61(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T286f67(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T704f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T703f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T703f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T286f66(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T286f65(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T286f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T286f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T286f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T286f70(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T704f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T703f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T286f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T286f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T286f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T286f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T286f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T286f47(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T294f36(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T294f56(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T288f41(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T288f61(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T287f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T705f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T705f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T705f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T705f8(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1g_error */
extern void T59f595(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1g */
extern T0* T852c1267(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1g_error */
extern void T41f595(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T288f7(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T288f65(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T270f177(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T270f258(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T270f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T270f65(TC* ac, T0* C);
/* ET_C_GENERATOR.process_old_object_test */
extern void T91f1312(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1622f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1409f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T74f318(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T74f425(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T59f528(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T852c1201(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T59f159(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T41f528(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T41f159(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T294f35(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T288f40(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T270f176(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T270f257(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T91f1311(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T91f1356(TC* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1621f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1409f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T74f317(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T74f424(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T294f34(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T288f39(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T270f175(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T270f256(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T91f1310(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T91f1355(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1620f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1409f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T74f316(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T74f423(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T74f493(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.type_identity_type */
extern T0* T192f94(TC* ac, T0* C);
/* ET_SYSTEM.type_identity_type */
extern T0* T46f98(TC* ac, T0* C);
/* ET_ECF_SYSTEM.type_identity_type */
extern T0* T63f97(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T294f33(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T288f38(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T270f174(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T270f255(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T270f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T91f1309(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T91f1354(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T1619f27(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1409f65(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T74f315(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T74f422(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T74f492(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T74f534(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T502f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T2098f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T501f94(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T310f90(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T396f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T229f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T2098c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T59f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T852c1200(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T662f17(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T59f158(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T41f527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T41f158(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T1619f32(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T1619f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T1619f21(TC* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T189f110(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T1619f24(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T294f32(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T288f37(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T270f173(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T270f254(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T270f333(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T91f1308(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T91f1353(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_object_equality_types */
extern void T91f738(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_right */
extern void T395f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.set_left */
extern void T395f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force_last */
extern void T342f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].force */
extern void T770f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].fill_with */
extern void T771f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extend */
extern void T771f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].resize */
extern void T342f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T770f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].aliased_resized_area */
extern T0* T771f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_capacity */
extern T6 T342f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].extendible */
extern T1 T342f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].last */
extern T0* T341f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].is_empty */
extern T1 T341f10(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_call */
extern void T91f1372(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T91f801(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].force_last */
extern void T341f14(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].force */
extern void T768f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].fill_with */
extern void T767f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].extend */
extern void T767f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].resize */
extern void T341f17(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T768f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].aliased_resized_area */
extern T0* T767f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_capacity */
extern T6 T341f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].extendible */
extern T1 T341f7(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_equality_call_with_one_object_equality */
extern void T91f828(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_equality_call_with_zero_object_equality */
extern void T91f827(TC* ac, T0* C, T1 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.add_common_types_to_list */
extern void T395f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_types_to_list */
extern void T1541f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_types_to_list */
extern void T520f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_types_to_list */
extern void T400f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_types_to_list */
extern void T502f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_types_to_list */
extern void T501f96(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_types_to_list */
extern void T348f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_types_to_list */
extern void T396f94(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_types_to_list */
extern void T310f92(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_types_to_list */
extern void T229f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_EQUALITY_TYPES.add_common_types_to_list */
extern void T392f4(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T1541f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T520f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SECONDARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T400f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T502f95(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T501f95(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T348f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T396f93(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T310f91(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRIMARY_TYPE.add_common_expanded_and_reference_types_to_lists */
extern void T229f89(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYMBOL_OPERATOR.is_not_tilde */
extern T1 T1071f100(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T662f100(TC* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T661f87(TC* ac, T0* C);
/* ET_C_GENERATOR.new_object_equality_types */
extern T0* T91f600(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].remove_last */
extern void T342f15(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].keep_head */
extern void T771f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_count */
extern void T771f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].move_last_cursors_after */
extern void T342f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_next_cursor */
extern void T772f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_after */
extern void T772f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].last */
extern T0* T342f10(TC* ac, T0* C);
/* ET_DYNAMIC_OBJECT_EQUALITY_TYPES.make */
extern T0* T395c3(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].is_empty */
extern T1 T342f9(TC* ac, T0* C);
/* ET_INFIX_EXPRESSION.process */
extern void T1616f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1409f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T74f313(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T74f420(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T294f31(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T288f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T270f172(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T270f253(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T91f1307(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T91f1352(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1615f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1409f62(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T74f312(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T74f419(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T74f490(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T74f489(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.typed_pointer_identity_type */
extern T0* T192f95(TC* ac, T0* C);
/* ET_SYSTEM.typed_pointer_identity_type */
extern T0* T46f99(TC* ac, T0* C);
/* ET_ECF_SYSTEM.typed_pointer_identity_type */
extern T0* T63f98(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T294f30(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T288f35(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T270f171(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T270f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T270f328(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T270f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_expression_address */
extern void T91f1306(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T91f1351(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T91f1348(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1541f14(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T520f14(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.special_type */
extern T0* T400f25(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T502f65(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T501f65(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T348f12(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T396f64(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T310f62(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.special_type */
extern T0* T229f61(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T230f9(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1612c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T77f1546(TC* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T661c101(TC* ac);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1612f7(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.process */
extern void T1614f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1409f61(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T74f311(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T74f418(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T59f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T852c1198(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T41f525(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T59f521(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T852c1194(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T41f521(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T59f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T852c1193(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T41f520(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T294f29(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T288f34(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T270f170(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T270f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T91f1305(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T91f1350(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T77f76(TC* ac, T0* C);
/* ET_RESULT.make */
extern T0* T334c35(TC* ac);
/* ET_RESULT.make_token */
extern void T334f36(TC* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T334f37(TC* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T334f6(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.process */
extern void T1613f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1409f60(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T74f310(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T74f417(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T59f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T852c1197(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0g_error */
extern void T41f524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T294f28(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T288f33(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T270f169(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T270f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T91f1304(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T91f1349(TC* ac, T0* C, T0* a1);
extern T1 T91f1349ot1(TC* ac, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1612f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1409f83(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T74f333(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T74f440(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.local_name */
extern T0* T189f103(TC* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T189f102(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen11a_error */
extern void T59f538(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen11a */
extern T0* T852c1211(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen11_error */
extern T1 T59f163(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen11a_error */
extern void T41f538(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen11_error */
extern T1 T41f163(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T74f518(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T273f62(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T242f62(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_base_type */
extern T1 T78f242(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1576f72(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T958f74(TC* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1598f77(TC* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T260f105(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T248f71(TC* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T76f113(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1600f75(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1599f78(TC* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T499f73(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T74f517(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T59f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T852c1210(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0e_error */
extern void T41f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T74f516(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.inline_separate_argument_name */
extern T0* T189f101(TC* ac, T0* C);
/* ET_IDENTIFIER.iteration_item_name */
extern T0* T189f100(TC* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T189f99(TC* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T294f27(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T288f32(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T270f168(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T270f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T270f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T270f331(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T270f330(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_feature_address */
extern void T91f1303(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1611f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1409f59(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T74f309(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T74f416(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T59f523(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T852c1196(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T41f523(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T294f26(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T288f31(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T270f167(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T270f248(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T270f248ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T91f1302(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T91f1347(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1571f52(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1409f53(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T74f303(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T74f411(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T294f25(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T288f30(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T270f159(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T270f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T91f1297(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1570f51(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1409f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T74f302(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T74f410(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T294f24(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T288f29(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T270f158(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T270f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T91f1296(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1569f43(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1409f50(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T74f300(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T74f408(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T74f481(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T294f23(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T288f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T270f157(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T270f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T270f315(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T91f1295(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T91f1341(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1568f43(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1409f48(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T74f298(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T74f406(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T294f22(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T288f27(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T270f156(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T270f237(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T91f1294(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T91f1340(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1566f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1409f47(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T74f297(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T74f405(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T74f480(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1566f52(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1565f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T74f528(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T74f527(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T59f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T852c1225(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T41f552(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T294f21(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T288f26(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T270f155(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T270f236(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T270f314(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T270f408(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T270f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T91f1293(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T91f1339(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1566f17(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1565f47(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1409f46(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T74f296(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T74f404(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T294f20(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T288f25(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T270f154(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T270f235(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T91f1292(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T91f1338(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1565f17(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T1558f50(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1409f45(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T74f295(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T74f403(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T294f13(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T288f18(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T270f147(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T270f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T91f1291(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T91f1337(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T1353f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1409f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T74f324(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T74f431(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T74f499(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T59f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T852c1204(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T59f161(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T41f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T41f161(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T59f530(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T852c1203(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T59f160(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T41f530(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T41f160(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T59f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T852c1202(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T41f529(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T1353f27(TC* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T294f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T288f16(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T270f145(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T270f226(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T270f313(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T91f1290(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T91f1336(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T1350f33(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1409f58(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T74f308(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T74f415(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T74f488(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T294f10(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T288f15(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T270f144(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T270f225(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T270f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T91f1289(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T91f1335(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_static_call */
extern void T91f1373(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f1373ot1(TC* ac, T0* a1);
extern T1 T91f1373ot2(TC* ac, T0* a1);
extern T1 T91f1373ot3(TC* ac, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.process */
extern void T1337f40(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_quantifier_expression */
extern void T1409f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_quantifier_expression */
extern void T74f338(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_quantifier_expression_validity */
extern void T74f444(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_iteration_expression_validity */
extern void T74f520(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_iteration_expression */
extern void T74f553(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_quantifier_expression */
extern void T294f9(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_quantifier_expression */
extern void T288f14(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_quantifier_expression */
extern void T270f142(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_quantifier_expression_validity */
extern void T270f222(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_iteration_expression_validity */
extern void T270f304(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_iteration_expression */
extern void T270f396(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_quantifier_expression */
extern void T91f1288(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_quantifier_expression */
extern void T91f1334(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_iteration_expression */
extern void T91f1374(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T1315f26(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1409f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T74f321(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T74f428(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T294f8(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T288f13(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T270f141(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T270f221(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T91f1287(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T91f1333(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T1287f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1409f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T74f322(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T74f429(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T74f497(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f497ot1(TC* ac, T0* a1);
extern T1 T74f497ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T74f486(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T285f19(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T285f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].item */
extern T0* T285f11(TC* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.expression */
extern T0* T2129f4(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression */
extern T0* T2128f2(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T74f484(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_modifier */
extern T0* T77f1554(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_modifier */
extern T0* T77f1553(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove */
extern void T285f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_left */
extern void T285f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T285f20(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T698f8(TC* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.put */
extern void T1287f39(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T74f535(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f535ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T76f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T76f121(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_named_type */
extern T0* T78f240(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T74f496(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f496ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T59f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T852c1228(TC* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T59f171(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma2a_error */
extern void T41f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T41f171(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T59f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T852c1227(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T59f170(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma1a_error */
extern void T41f554(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T41f170(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T294f7(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T288f12(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T270f140(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T270f220(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T270f303(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T270f303ot1(TC* ac, T0* a1);
extern T1 T270f303ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T270f300(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T270f298(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T270f393(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T270f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T270f302ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_manifest_array */
extern void T91f1286(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T91f1332(TC* ac, T0* C, T0* a1);
extern T1 T91f1332ot1(TC* ac, T0* a1);
/* ET_INSPECT_EXPRESSION.process */
extern void T1260f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_expression */
extern void T1409f56(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression_list */
extern void T1409f105(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_expression */
extern void T1409f111(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_expression */
extern void T74f306(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_expression_validity */
extern void T74f414(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f414ot1(TC* ac, T0* a1);
extern T1 T74f414ot2(TC* ac, T0* a1);
extern T1 T74f414ot3(TC* ac, T0* a1);
extern T1 T74f414ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inspect_expression */
extern void T74f487(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inspect_expression_dynamic_types */
extern void T74f532(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inspect_expression */
extern void T294f6(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inspect_expression */
extern void T288f11(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_expression */
extern void T270f139(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_expression_validity */
extern void T270f219(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T270f219ot1(TC* ac, T0* a1);
extern T1 T270f219ot2(TC* ac, T0* a1);
extern T1 T270f219ot3(TC* ac, T0* a1);
extern T1 T270f219ot4(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_inspect_expression */
extern void T270f301(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_inspect_expression */
extern void T91f1285(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_expression */
extern void T91f1331(TC* ac, T0* C, T0* a1);
extern T1 T91f1331ot1(TC* ac, T0* a1);
extern T1 T91f1331ot2(TC* ac, T0* a1);
extern T1 T91f1331ot3(TC* ac, T0* a1);
extern T1 T91f1331ot4(TC* ac, T0* a1);
extern T1 T91f1331ot5(TC* ac, T0* a1);
extern T1 T91f1331ot6(TC* ac, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T1244f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1409f55(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1409f104(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T1190f13(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1409f120(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T74f305(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T74f413(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T74f485(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T74f531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T294f5(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T288f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T270f138(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T270f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T270f299(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_if_expression */
extern void T91f1284(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T91f1330(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T1118f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1409f75(TC* ac, T0* C, T0* a1);
extern T1 T1409f75ot1(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1632f15(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1409f113(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1882f12(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1409f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T74f325(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T74f432(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f432ot1(TC* ac, T0* a1);
extern T1 T74f432ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T74f502(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgmc0g_error */
extern void T59f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vgmc0g */
extern T0* T852c1232(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vgmc0g_error */
extern void T41f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CALL_AGENT.is_procedure */
extern T1 T1118f27(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T59f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T852c1231(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T59f172(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T41f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T41f172(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T74f543(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T74f559(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f559ot1(TC* ac, T0* a1);
extern T1 T74f559ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T74f563(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T2099f6(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T74f542(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T74f558(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T74f562(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f562ot1(TC* ac, T0* a1);
extern T1 T74f562ot2(TC* ac, T0* a1);
extern T1 T74f562ot3(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T59f581(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T852c1254(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T59f178(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T41f581(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T41f178(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T74f541(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T74f557(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T1118f40(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T74f501(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T74f540(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T74f539(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T74f538(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T74f500(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T59f557(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T852c1230(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T41f557(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T74f537(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T74f556(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T74f561(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T74f561ot1(TC* ac, T0* a1);
extern T1 T74f561ot2(TC* ac, T0* a1);
extern T1 T74f561ot3(TC* ac, T0* a1);
extern T1 T74f561ot4(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T74f566(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T74f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T74f555(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T59f556(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T852c1229(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0j_error */
extern void T41f556(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T294f54(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T288f59(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T270f195(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T270f275(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T270f275ot1(TC* ac, T0* a1);
extern T1 T270f275ot2(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T270f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T270f432(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T270f456(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T270f431(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T270f455(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T270f430(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T270f454(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T270f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T270f429(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T270f428(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T270f427(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T270f353(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T270f426(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T270f453(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T270f425(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T270f452(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T91f1283(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T91f1329(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T91f1328(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T361f19(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T361f17(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT.set_expression */
extern void T364f13(TC* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_no_target_twin */
extern void T368f14(TC* ac, T0* C, T1 a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T1115f29(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1409f70(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T2041f20(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1409f117(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T360f27(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T74f320(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T74f427(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T294f52(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T288f57(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T270f193(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T270f273(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T91f1282(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T91f1327(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T1085f41(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1409f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T74f337(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T74f443(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T294f57(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T288f62(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T270f198(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T270f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T91f1281(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T91f1326(TC* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T1074f34(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1409f49(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T74f299(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T74f407(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T74f482(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T294f45(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T288f50(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T270f186(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T270f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T270f345(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T91f1280(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T91f1325(TC* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T774f32(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1409f82(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T74f332(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T74f439(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T59f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T852c1209(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T41f536(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T74f515(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T59f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T852c1251(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T59f176(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T41f578(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T41f176(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T59f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T852c1250(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T41f577(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T59f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T852c1249(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T41f576(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T74f514(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_iteration_item_call_expression_validity */
extern void T74f513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T74f512(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T74f511(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T294f55(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T288f60(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T270f196(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T270f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T270f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_inline_separate_argument_call_expression_validity */
extern void T270f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_iteration_item_call_expression_validity */
extern void T270f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T270f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T270f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T91f1279(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T91f1324(TC* ac, T0* C, T0* a1);
extern T1 T91f1324ot1(TC* ac, T0* a1);
extern T1 T91f1324ot2(TC* ac, T0* a1);
extern T1 T91f1324ot3(TC* ac, T0* a1);
extern T1 T91f1324ot4(TC* ac, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T774f9(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T273f39(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T242f42(TC* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T91f769(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T351f15(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T351f11(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.process */
extern void T764f25(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1409f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T74f314(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T74f421(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T74f491(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T74f533(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T502f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T2097f7(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T501f93(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T310f89(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T396f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T229f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T2097c6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T59f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T852c1199(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T41f526(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T764f30(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T764f29(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T294f50(TC* ac, T0* C, T0* a1);
extern T1 T294f50ot1(TC* ac, T0* a1);
extern T1 T294f50ot2(TC* ac, T0* a1);
extern T1 T294f50ot3(TC* ac, T0* a1);
extern T1 T294f50ot4(TC* ac, T0* a1);
extern T1 T294f50ot5(TC* ac, T0* a1);
extern T1 T294f50ot6(TC* ac, T0* a1);
extern T1 T294f50ot7(TC* ac, T0* a1);
extern T1 T294f50ot8(TC* ac, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T2057f17(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.unparenthesized_expression */
extern T0* T423f18(TC* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T2130f20(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T2129f20(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T2128f16(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_equal_symbol */
extern T1 T1071f110(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T662f106(TC* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T661f90(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T288f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T270f191(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T270f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T270f349(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T91f1278(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T91f1323(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_equality_types */
extern void T91f739(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_right */
extern void T392f6(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_TYPES.set_left */
extern void T392f5(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_not_equal */
extern T1 T1071f85(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T662f85(TC* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T661f86(TC* ac, T0* C);
/* ET_C_GENERATOR.new_equality_types */
extern T0* T91f594(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].remove_last */
extern void T341f18(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].keep_head */
extern void T767f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].set_count */
extern void T767f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_last_cursors_after */
extern void T341f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_next_cursor */
extern void T769f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].set_after */
extern void T769f6(TC* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_TYPES.make */
extern T0* T392c3(TC* ac, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.process */
extern void T702f30(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1409f85(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T74f335(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T270f197(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_named_object_test */
extern void T91f1277(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T370f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1409f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T74f323(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T74f430(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f430ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T74f498(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T74f498ot1(TC* ac, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T294f53(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T288f58(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T270f194(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T270f274(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T270f274ot1(TC* ac, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T270f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T91f1224(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T91f1227(TC* ac, T0* C, T0* a1);
extern T1 T91f1227ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T374f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T374f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T374f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T374f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T374f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T374f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T374f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T374f32(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T374f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T374f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T809f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T808f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T374f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T374f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T374f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T374f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T374f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T374f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T374f56(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T809f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T808f9(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T808f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T374f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T374f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T374f43(TC* ac, T0* C);
/* ET_RESULT.process */
extern void T334f38(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1409f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T74f301(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T74f409(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T59f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T852c1195(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T41f522(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T294f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T288f51(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T270f187(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T270f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T270f346(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.process_result */
extern void T91f1220(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T91f1222(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T359f36(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1409f44(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T74f294(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T74f402(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T74f479(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T59f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T852c1192(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0f_error */
extern void T41f519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T294f47(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T288f52(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T270f188(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T270f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T270f347(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T91f1221(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T91f1223(TC* ac, T0* C, T0* a1);
extern T1 T91f1223ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_inlined_expression */
extern void T91f869(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inlined_expression */
extern void T91f914(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_INLINED_EXPRESSION.process */
extern void T423f24(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_inlined_expression */
extern void T294f62(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_inlined_expression */
extern void T288f68(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inlined_expression */
extern void T1409f106(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inlined_expression */
extern void T270f305(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inlined_expression */
extern void T74f348(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T363f31(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1409f57(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T74f307(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T294f49(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T288f54(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T270f190(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T91f1213(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T189f126(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1409f43(TC* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T294f58(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T288f63(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T270f131(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T74f182(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_identifier */
extern void T91f1212(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T91f1216(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T91f796(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T189f47(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T91f1215(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T91f792(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_open_target_operand */
extern void T91f1218(TC* ac, T0* C, T0* a1);
extern T1 T91f1218ot1(TC* ac, T0* a1);
extern T1 T91f1218ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_indentation_end_newline */
extern void T91f832(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_else_newline */
extern void T91f1219(TC* ac, T0* C);
/* ET_C_GENERATOR.print_then_newline */
extern void T91f831(TC* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_if */
extern void T91f829(TC* ac, T0* C);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T189f46(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T91f1214(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T91f861(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T91f823(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T91f753(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T220f57(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T338f18(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T425f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T425f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T425f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T338f26(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T526f1(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].detachable_less_than */
extern T1 T526f2(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].attached_less_than */
extern T1 T526f3(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T91f309(TC* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T425c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T526c4(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T338f6(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T348f6(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T1541f2(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T348f2(TC* ac, T0* C);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T91f890(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T91f922(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T91f328(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T351f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T351f6(TC* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T91f804(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T91f1503(TC* ac, T0* C, T0* a1);
extern T1 T91f1503ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T91f1502(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T91f1517(TC* ac, T0* C, T0* a1);
extern T1 T91f1517ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T91f1501(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T91f1500(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T91f1499(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T91f1498(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T91f1497(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T91f1496(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T91f1495(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T91f1494(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T91f1493(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T91f1492(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T91f1491(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T91f1490(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T91f1489(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T91f1439(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T91f1488(TC* ac, T0* C, T0* a1);
extern T1 T91f1488ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_fields */
extern T1 T396f58(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_fields */
extern T1 T502f49(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_reference_fields */
extern T1 T502f59(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_fields */
extern T1 T501f49(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_reference_fields */
extern T1 T501f59(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_fields */
extern T1 T310f57(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_reference_fields */
extern T1 T310f59(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T229f55(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_reference_fields */
extern T1 T229f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_reference_fields */
extern T1 T396f61(TC* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T91f283(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T91f1487(TC* ac, T0* C, T0* a1);
extern T1 T91f1487ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T91f1438(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T91f1437(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_procedure_call_body */
extern void T91f1486(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T91f1436(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T91f1435(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T91f1434(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T91f1485(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T91f1433(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T91f1432(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T91f1431(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T91f1430(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T91f1484(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T91f1483(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T91f1482(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T91f1481(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T91f1429(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T91f1428(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T91f1427(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T91f1426(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body */
extern void T91f1480(TC* ac, T0* C, T0* a1);
extern T1 T91f1480ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_no_special */
extern void T91f1516(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f1516ot1(TC* ac, T0* a1);
extern T1 T91f1516ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_tuple_items */
extern void T91f1531(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_attributes */
extern void T91f1529(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_temp_variable_to_onces_attribute */
extern void T91f1526(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.has_once_per_object_routines */
extern T1 T502f17(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_once_per_object_routines */
extern T1 T501f17(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_once_per_object_routines */
extern T1 T310f18(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T229f17(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_once_per_object_routines */
extern T1 T396f18(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_temp_variable_to_flags_attribute */
extern void T91f1525(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_flags_access */
extern void T91f1533(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T91f774(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_onces_attribute_to_temp_variable */
extern void T91f1523(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_once_per_object_data_type_name */
extern void T91f772(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_flags_attribute_to_temp_variable */
extern void T91f1522(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_body_with_special */
extern void T91f1513(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_custom_special_items */
extern void T91f1530(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.free_actual_argument_list */
extern void T91f1521(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].force_last */
extern void T345f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].force */
extern void T780f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T781f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T781f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].resize */
extern void T345f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T780f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T781f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_capacity */
extern T6 T345f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].extendible */
extern T1 T345f6(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.force_first */
extern void T360f26(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.new_capacity */
extern T6 T360f17(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_actual_argument_list */
extern T0* T91f622(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].remove_last */
extern void T345f15(TC* ac, T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T781f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T781f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].move_last_cursors_after */
extern void T345f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_next_cursor */
extern void T782f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].set_after */
extern void T782f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].last */
extern T0* T345f10(TC* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T360f19(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T360c19(TC* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T360f19p1(TC* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T360f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].is_empty */
extern T1 T345f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_greater_than_or_equal */
extern void T91f1520(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_temp_variable_to_special_capacity_attribute */
extern void T91f1528(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_assign_temp_variable_to_special_count_attribute */
extern void T91f1527(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_assign_special_capacity_attribute_to_temp_variable */
extern void T91f1524(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_greater_than */
extern void T91f1512(TC* ac, T0* C);
/* ET_C_GENERATOR.print_assign_special_count_attribute_to_temp_variable */
extern void T91f1519(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_any_copy_body */
extern void T91f1479(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T91f1401(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T91f1425(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T91f1478(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1576f61(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1576f62(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f62ot1(TC* ac, T0* a1);
extern T1 T1576f62ot2(TC* ac, T0* a1);
extern T1 T1576f62ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1600f55(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f55ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1599f58(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f58ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1598f56(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T248f53(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f53ot1(TC* ac, T0* a1);
extern T1 T248f53ot2(TC* ac, T0* a1);
extern T1 T248f53ot3(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T499f52(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T958f64(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f64ot1(TC* ac, T0* a1);
extern T1 T958f64ot2(TC* ac, T0* a1);
extern T1 T958f64ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T958f62(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1600f49(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1599f52(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1598f50(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T248f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T499f46(TC* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T78f211(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T260f79(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T76f88(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T91f764(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T91f1424(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T91f1477(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T91f1477ac1(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T91f1477ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T91f1476(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T91f1515(TC* ac, T0* C, T0* a1);
extern T1 T91f1515ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T91f1475(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T91f1474(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T91f1473(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T91f1472(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T91f1471(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T91f1470(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T91f1469(TC* ac, T0* C, T0* a1);
extern T1 T91f1469ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T91f1468(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T91f1467(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T91f1466(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T91f1465(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T91f1464(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T91f1463(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T91f1462(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T91f1423(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T91f1461(TC* ac, T0* C, T0* a1);
extern T1 T91f1461ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_result_expression */
extern void T91f1514(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].force_last */
extern void T346f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].force */
extern void T783f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RESULT].fill_with */
extern void T784f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].extend */
extern void T784f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].resize */
extern void T346f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].aliased_resized_area */
extern T0* T783f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].aliased_resized_area */
extern T0* T784f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_capacity */
extern T6 T346f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].extendible */
extern T1 T346f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_result_expression */
extern T0* T91f621(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].remove_last */
extern void T346f15(TC* ac, T0* C);
/* SPECIAL [ET_RESULT].keep_head */
extern void T784f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RESULT].set_count */
extern void T784f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].move_last_cursors_after */
extern void T346f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_next_cursor */
extern void T785f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].set_after */
extern void T785f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].last */
extern T0* T346f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_RESULT].is_empty */
extern T1 T346f9(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T91f1422(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T91f1421(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T91f1460(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T91f1420(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T91f1419(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T91f1459(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T91f1418(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T91f1417(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T91f1416(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T91f1458(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T91f1457(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T91f1415(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T91f1414(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T91f1413(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T91f1412(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_function_item_body */
extern void T91f1456(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T91f1411(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T91f1455(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T91f1410(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T91f1454(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T91f1453(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T91f1452(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T91f1451(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T91f1450(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T91f1449(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T91f1448(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T91f1409(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T91f1408(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T91f1407(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T91f1406(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T91f1405(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T91f1404(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T91f1403(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T91f1447(TC* ac, T0* C, T0* a1);
extern T1 T91f1447ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_reference */
extern void T91f1511(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_expanded */
extern void T91f1510(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body_with_special */
extern void T91f1509(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T91f1446(TC* ac, T0* C, T0* a1);
extern T1 T91f1446ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T91f1445(TC* ac, T0* C, T0* a1);
extern T1 T91f1445ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_no_special */
extern void T91f1508(TC* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body_with_special */
extern void T91f1507(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_body */
extern void T91f1444(TC* ac, T0* C, T0* a1);
extern T1 T91f1444ot1(TC* ac, T0* a1);
extern T1 T91f1444ot2(TC* ac, T0* a1);
extern T1 T91f1444ot3(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_tuple_items */
extern void T91f1506(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_field */
extern void T91f1518(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.free_equality_expression */
extern void T91f1532(TC* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_operator */
extern void T764f31(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T340f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T763f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T765f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T765f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T340f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T763f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T765f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T340f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T340f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_equality_expression */
extern T0* T91f623(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].remove_last */
extern void T340f15(TC* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T765f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T765f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_last_cursors_after */
extern void T340f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T766f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T766f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].last */
extern T0* T340f10(TC* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T764c24(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].is_empty */
extern T1 T340f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.equal_symbol */
extern T0* T77f801(TC* ac, T0* C);
/* ET_SYMBOL.make_equal */
extern T0* T661c98(TC* ac);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_special_items */
extern void T91f1505(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_attributes */
extern void T91f1504(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_any_is_equal_body */
extern void T91f1443(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T91f1442(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T91f1441(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1590f72(TC* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_scoop_processor_access */
extern void T91f725(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_scoop_processor_name */
extern void T91f775(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_comma */
extern void T91f722(TC* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T91f846(TC* ac, T0* C, T0* a1);
extern T1 T91f846ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_assign_to */
extern void T91f758(TC* ac, T0* C);
/* ET_C_GENERATOR.print_separate_argument_session_name */
extern void T91f915(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_separate_argument_name */
extern void T91f999(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.is_separate */
extern T1 T502f46(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_separate */
extern T1 T501f46(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_separate */
extern T1 T400f19(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_separate */
extern T1 T396f51(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_separate */
extern T1 T310f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_separate */
extern T1 T229f34(TC* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T91f1390(TC* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T2031f1(TC* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T91f616(TC* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T2031c2(TC* ac);
/* UC_UTF8_STRING.has_substring */
extern T1 T748f70(TC* ac, T0* C, T0* a1);
/* UC_STRING.has_substring */
extern T1 T329f70(TC* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f46(TC* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f23(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T91f1389(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T91f1400(TC* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T748f64(TC* ac, T0* C, T0* a1);
/* UC_STRING.same_string */
extern T1 T329f65(TC* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force_last */
extern void T73f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T73f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T73f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T73f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T73f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T73f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T73f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T73f33(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T73f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T73f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T73f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T73f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T73f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T73f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T73f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T73f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T73f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T73f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T73f24(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T73f47(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].remove */
extern void T73f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_position */
extern void T73f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T73f74(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T73f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T73f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_cursors_forth */
extern void T73f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T266f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T266f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T266f10(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].internal_set_key_equality_tester */
extern void T73f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T73f30(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_cpp_includes */
extern void T91f1388(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_cpp_header_filename */
extern void T91f1399(TC* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T84f308(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T91f853(TC* ac, T0* C, T0* a1);
extern T1 T91f853ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.current_universe */
extern T0* T91f373(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T91f1387(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_show_console_call */
extern void T91f759(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1541f13(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T348f5(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T520f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T502f39(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T501f39(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T310f33(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T396f35(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_empty */
extern T1 T229f28(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.is_empty */
extern T1 T400f14(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T91f1253(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T91f810(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T91f719(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T91f752(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T91f852(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T91f826(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f826ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_context_type_declaration */
extern void T91f720(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T91f1386(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f1386ot1(TC* ac, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1589f85(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1409f22(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1408f55(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T270f97(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T270f105(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T59f381(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T852c1057(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0b_error */
extern void T41f381(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T270f111(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T270f123(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1423f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T270f122(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T59f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T852c958(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T59f44(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T41f258(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T41f44(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T59f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T852c957(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T59f43(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T41f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T41f43(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T59f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T852c956(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T41f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T74f155(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T74f160(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T74f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T74f150(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T74f149(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T91f1300(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T91f1345(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T91f1230(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_feature */
extern void T91f1231(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T91f1251(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T91f1250(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T91f1249(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T91f1246(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_per_process_value */
extern void T91f1262(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T91f1245(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T91f1243(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T91f1242(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T91f1241(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T91f1240(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T91f1238(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_once_exception_if_any */
extern void T91f1237(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_unlock */
extern void T91f1235(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_global_mutex_lock */
extern void T91f1234(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].value */
extern T6 T375f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].position_of_key */
extern T6 T375f35(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1587f84(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1409f21(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1408f54(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T270f96(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T270f104(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T270f116(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1423f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T270f115(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T270f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T74f154(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T74f159(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T74f164(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T74f163(TC* ac, T0* C, T0* a1);
extern T1 T74f163ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_extended_attribute_result_dynamic_types */
extern void T74f167(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T74f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_deferred_function */
extern void T91f1299(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T91f1344(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1586f87(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1409f20(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1408f53(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T270f95(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T270f103(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T59f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T852c1056(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T41f380(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T74f153(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T74f158(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T91f1298(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T91f1343(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T91f1371(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T531f85(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1409f19(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1408f21(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T270f94(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T270f102(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T74f152(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T74f157(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T91f1276(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T91f1321(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T524f82(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1409f18(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1408f20(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T270f92(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T270f100(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T74f134(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T74f136(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T74f140(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T74f136p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T91f1226(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T91f1229(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T453f85(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1409f17(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1408f18(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T270f130(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T270f206(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T59f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T852c1091(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T59f113(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T41f418(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T41f113(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T74f181(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T74f205(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T91f1543(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T91f1571(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T91f1593(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.free_unqualified_call_expression */
extern void T91f1598(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].force_last */
extern void T343f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].force */
extern void T773f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].fill_with */
extern void T775f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].extend */
extern void T775f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].resize */
extern void T343f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T773f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T775f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_capacity */
extern T6 T343f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].extendible */
extern T1 T343f6(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.new_unqualified_call_expression */
extern T0* T91f628(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T774f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].remove_last */
extern void T343f15(TC* ac, T0* C);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].keep_head */
extern void T775f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].set_count */
extern void T775f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].move_last_cursors_after */
extern void T343f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_next_cursor */
extern void T776f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].set_after */
extern void T776f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].last */
extern T0* T343f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].is_empty */
extern T1 T343f9(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T451f84(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1409f16(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1408f17(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T270f129(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T270f205(TC* ac, T0* C, T0* a1);
extern T1 T270f205ot1(TC* ac, T0* a1);
extern T1 T270f205ot2(TC* ac, T0* a1);
extern T1 T270f205ot3(TC* ac, T0* a1);
extern T1 T270f205ot4(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T59f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T852c1090(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T59f112(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T41f417(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T41f112(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_string_type */
extern T0* T192f89(TC* ac, T0* C);
/* ET_SYSTEM.system_string_type */
extern T0* T46f93(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_string_type */
extern T0* T63f92(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vqmc5b_error */
extern void T59f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc5b */
extern T0* T852c1089(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc5b_error */
extern void T41f416(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T59f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T852c1088(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T59f111(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T41f415(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T41f111(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T59f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T852c1087(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T59f110(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T41f414(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T41f110(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T59f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T852c1086(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T41f413(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T59f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T852c1085(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T59f109(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T41f412(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T41f109(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2b_error */
extern void T59f411(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc2b */
extern T0* T852c1084(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T852f1084ot1(TC* ac, T0* a1);
extern T1 T852f1084ot2(TC* ac, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2b_error */
extern void T41f411(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T59f410(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T852c1083(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T59f108(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T41f410(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T41f108(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1564f30(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1563f30(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1562f30(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1561f30(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T454f24(TC* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1560f33(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1559f30(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1557f29(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1571f27(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1570f27(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.is_boolean_constant */
extern T1 T1569f27(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.is_boolean_constant */
extern T1 T1568f27(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1566f29(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1565f29(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T1558f28(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T74f180(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T74f204(TC* ac, T0* C, T0* a1);
extern T1 T74f204ot1(TC* ac, T0* a1);
extern T1 T74f204ot2(TC* ac, T0* a1);
extern T1 T74f204ot3(TC* ac, T0* a1);
extern T1 T74f204ot4(TC* ac, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T91f1542(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T91f1570(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T443f81(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1409f15(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1408f16(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T270f128(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T270f204(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T59f409(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T852c1082(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0a_error */
extern void T41f409(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T74f179(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T74f203(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T91f1541(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T91f1569(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T442f86(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1409f14(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1408f15(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T270f127(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T270f203(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwab0a_error */
extern void T59f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwab0a */
extern T0* T852c1081(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.position */
extern T0* T442f83(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1591f5(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vwab_error */
extern T1 T59f107(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwab0a_error */
extern void T41f408(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwab_error */
extern T1 T41f107(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_self_initializing */
extern T1 T1598f75(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_self_initializing_with_type_mark */
extern T1 T1598f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_self_initializing */
extern T1 T260f102(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T260f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing */
extern T1 T248f68(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T248f75(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_self_initializing */
extern T1 T76f109(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T76f119(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing */
extern T1 T1600f73(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T1600f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing */
extern T1 T1599f76(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_self_initializing_with_type_mark */
extern T1 T1599f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_self_initializing */
extern T1 T499f70(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_self_initializing_with_type_mark */
extern T1 T499f76(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T59f407(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T852c1080(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T41f407(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T74f178(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T74f202(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T91f1540(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T91f1568(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T259f93(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1409f13(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1408f14(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T270f99(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T270f107(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T74f174(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T74f198(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T74f78(TC* ac, T0* C);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1598f73(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T78f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T76f118(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T260f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T76f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T248f66(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T248f66ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T76f125(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1576f57(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1576f57ot1(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T958f58(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T958f58ot1(TC* ac, T0* a1);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T76f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1600f71(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1600f71ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1599f74(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1599f74ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T499f68(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T247f53(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T247f53ot1(TC* ac, T0* a1);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T1548f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T260f111(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T76f128(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T78f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T74f226(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T74f293(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T74f292(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T74f291(TC* ac, T0* C, T0* a1);
extern T1 T74f291ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T74f290(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T74f289(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T68f114(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T74f288(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T74f287(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T74f286(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T74f285(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T74f284(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T74f283(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T74f282(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T74f281(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T74f280(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_is_object_id_of_current */
extern void T74f279(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T74f278(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_current_object_id */
extern void T74f277(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T74f276(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T74f275(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T74f274(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T74f273(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T74f272(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T74f271(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T74f270(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T74f269(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T74f268(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T74f267(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T74f266(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T259f79(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T74f198p1(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T91f1534(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T91f1566(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T521f81(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1409f12(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1408f19(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T270f93(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T270f101(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T74f133(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T74f135(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T91f1225(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T91f1228(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T59f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T852c1004(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T1327f14(TC* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T1327f16(TC* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T1327f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T59f61(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T41f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T41f61(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T1327f13(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.postconditions */
extern T0* T1590f14(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.postconditions */
extern T0* T1589f13(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.postconditions */
extern T0* T1587f12(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.postconditions */
extern T0* T1586f13(TC* ac, T0* C);
/* ET_DO_FUNCTION.postconditions */
extern T0* T531f15(TC* ac, T0* C);
/* ET_DO_PROCEDURE.postconditions */
extern T0* T524f20(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.postconditions */
extern T0* T442f11(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.postconditions */
extern T0* T259f14(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.postconditions */
extern T0* T521f18(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T59f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T852c1003(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T305f13(TC* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T305f15(TC* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T305f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T41f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T305f12(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.preconditions */
extern T0* T1590f10(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.preconditions */
extern T0* T1589f11(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.preconditions */
extern T0* T1587f10(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.preconditions */
extern T0* T1586f11(TC* ac, T0* C);
/* ET_DO_FUNCTION.preconditions */
extern T0* T531f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.preconditions */
extern T0* T524f17(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.preconditions */
extern T0* T442f9(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.preconditions */
extern T0* T259f10(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.preconditions */
extern T0* T521f15(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.redeclared_clients */
extern T0* T510f28(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.item */
extern T0* T313f3(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T510f55(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T59f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T852c1020(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T41f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T59f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T852c1019(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T59f68(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T41f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T41f68(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T59f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T852c1018(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T41f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T59f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T852f1017(TC* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T852c1016(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T41f337(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T59f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T852c1015(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T41f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T59f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T852c1014(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T41f335(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.ise_19_01_0 */
extern T0* T510f30(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T59f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T852c1013(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T59f66(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T41f334(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T41f66(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T59f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T852c1012(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.first_alias_name */
extern T0* T852f265(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T59f65(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T41f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T41f65(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T59f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T852c1011(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T41f332(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T59f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T852c1010(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T41f331(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1590f79(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T259f78(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T521f70(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1589f74(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T524f72(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1587f71(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1586f75(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T531f73(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T453f71(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T451f70(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T442f73(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T443f67(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1643f19(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.implementation_feature */
extern T0* T1590f6(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.implementation_feature */
extern T0* T1589f7(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.implementation_feature */
extern T0* T1587f6(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.implementation_feature */
extern T0* T1586f7(TC* ac, T0* C);
/* ET_DO_FUNCTION.implementation_feature */
extern T0* T531f9(TC* ac, T0* C);
/* ET_DO_PROCEDURE.implementation_feature */
extern T0* T524f9(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.implementation_feature */
extern T0* T453f7(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.implementation_feature */
extern T0* T451f6(TC* ac, T0* C);
/* ET_ATTRIBUTE.implementation_feature */
extern T0* T443f5(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.implementation_feature */
extern T0* T442f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.implementation_feature */
extern T0* T259f6(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.implementation_feature */
extern T0* T521f1(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1590f78(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1589f73(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1587f70(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1586f74(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T531f72(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T524f71(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T453f70(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T451f69(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T443f66(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T442f72(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T259f77(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T521f69(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T510f53(TC* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1408f13(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T59f310(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T852c989(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T59f52(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T41f310(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T41f52(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1643f17(TC* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1426f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1427f18(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T510f50(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1427f11(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1643f10(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1590f61(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T259f40(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T521f52(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1589f56(TC* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T524f54(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1587f57(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1586f61(TC* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T531f59(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T453f39(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T451f38(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T442f38(TC* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T443f37(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.is_immediate */
extern T1 T1427f10(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_immediate */
extern T1 T1643f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_immediate */
extern T1 T1590f60(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_immediate */
extern T1 T259f39(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_immediate */
extern T1 T521f51(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_immediate */
extern T1 T1589f55(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_immediate */
extern T1 T524f53(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_immediate */
extern T1 T1587f56(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_immediate */
extern T1 T1586f60(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_immediate */
extern T1 T531f58(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_immediate */
extern T1 T453f38(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_immediate */
extern T1 T451f37(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_immediate */
extern T1 T442f37(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_immediate */
extern T1 T443f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1392f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1392f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1392f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1392f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1744f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1392f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1392f63(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T510f39(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1400f23(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1400f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1764f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1764f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1764f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1764f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1764f54(TC* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1989f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1989f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1764f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1764f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1988f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1988f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1764f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1764f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1764f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1988f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1764f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1764f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1643f25(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1643f18(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1427f27(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1427f19(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.selected_count */
extern T6 T1766f2(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1400f34(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T59f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T852c1046(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1996f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1996f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1768f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1996f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1768f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1996f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1768f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1996f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1768f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1996f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1768f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1996f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1768f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1996f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1996f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1768f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1996c9(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1768f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T59f87(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T41f367(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T41f87(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1643f33(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1778f8(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T2161f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T2161c3(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1778c7(TC* ac);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1778f9(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1427f37(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1426f23(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1643f35(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1427f39(TC* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1643f34(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1427f38(TC* ac, T0* C, T6 a1);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1766f5(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1767f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T59f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T852c1045(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T41f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1400f18(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1400f27(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1767f16(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1767f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1767f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1992f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1767f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1992f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1768f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1994f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1995f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1995f7(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1643f26(TC* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1427f28(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1767f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1767f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1767f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1767f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1767f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1767f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1767f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1992f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1768c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1768f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1994f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1995c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1994c2(TC* ac);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1643f23(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1427f25(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1766f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1764f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1764f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1764f32(TC* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1643f22(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1427f24(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.has_replication */
extern T1 T1766f3(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1764f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1764f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1764f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1764f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1764f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1988f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1764f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1764f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1764f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1988f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1764f28(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1400f33(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1764f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1764f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1764f59(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1991f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1989f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1989f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1764f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1764f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1764f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1764f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1764f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1764f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1764f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1764f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1764f68(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1991f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1989f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1764f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1764f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1764f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1764f47(TC* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1766c6(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1767c12(TC* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1767f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1767f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1992c7(TC* ac, T0* a1);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1643f24(TC* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1427f26(TC* ac, T0* C);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1766f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1767f13(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1993f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1993c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1764f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1764f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1764f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1764f58(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1400f25(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T59f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T852c1038(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T59f80(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T41f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T41f80(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T59f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T852c1037(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T59f79(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T41f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T41f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1763f49(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1763f62(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1763f61(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1763f60(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1763f59(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1763f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1763f57(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1986f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_after */
extern void T1986f9(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1763f48(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1763f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1763f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1986f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1763f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1763f26(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T59f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T852c1036(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T59f78(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T41f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T41f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1763f40(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1763f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1763f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1763f38(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1763f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1763f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1763f37(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1763f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1986f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1763f47(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1763f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1763f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].off */
extern T1 T1986f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1763f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1762f43(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1762f60(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1762f59(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1762f58(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1762f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1762f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1762f56(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1985f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_after */
extern void T1985f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1762f42(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1762f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1762f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1985f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1762f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1762f22(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T59f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T852c1035(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T59f77(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T41f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T41f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1762f31(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1762f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1762f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1762f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1762f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].after */
extern T1 T1985f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1762f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1762f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1762f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].off */
extern T1 T1985f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1414f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1414f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1414f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1414f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1414f54(TC* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1786f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1786f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1414f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1414f52(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1785f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_after */
extern void T1785f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1414f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1414f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1414f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1785f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1414f74(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1414f23(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T59f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T852c1034(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T59f76(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T41f355(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T41f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1414f34(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1414f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1414f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1414f33(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1414f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1785f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1414f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1414f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1414f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].off */
extern T1 T1785f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1392f75(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1392f86(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1392f85(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1392f79(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1392f80(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1392f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1392f89(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1392f88(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1392f87(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1400f21(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1427f31(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1427c29(TC* ac, T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1427f30(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1643f30(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1643f21(TC* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1426f33(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_has_other_effective */
extern void T1426f32(TC* ac, T0* C, T1 a1);
/* ET_PARENT_FEATURE.set_has_other_deferred */
extern void T1426f31(TC* ac, T0* C, T1 a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1427f34(TC* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1427f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1392f76(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1400f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1643f29(TC* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1643c27(TC* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1643f28(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1426f28(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1426f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1763f46(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1763f54(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1763f25(TC* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1426f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1763f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1763f42(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1763f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1763f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1763f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1763f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1762f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1762f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1762f72(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1762f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_keep_head */
extern void T1762f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_keep_head */
extern void T1762f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1762f63(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1762f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1762f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1762f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1762f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1762f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1762f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1762f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1762f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1762f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1762f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1762f39(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1426f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1414f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1414f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1414f65(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1414f64(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1789f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1786f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1786f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1414f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1414f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1414f60(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1414f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1414f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1414f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1414f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1414f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1414f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1414f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1414f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1414f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1414f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1400f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1426f30(TC* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1426c24(TC* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1426f29(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1392f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1392f83(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1392f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1392f82(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1392f81(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1392f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1392f37(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1400f32(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T59f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T852c1044(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T59f86(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T41f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T41f86(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1763f51(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1763f69(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1763f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1763f65(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T495f4(TC* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T495f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1763f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1763f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1763f39(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1763f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1763f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1763f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1763f24(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1400f31(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T59f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T852c1043(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T59f85(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T41f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T41f85(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1400f30(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T59f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T852c1042(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T59f84(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T41f363(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T41f84(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1762f32(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1400f29(TC* ac, T0* C, T0* a1);
extern T1 T1400f29ot1(TC* ac, T0* a1);
extern T1 T1400f29ot2(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T59f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T852c1041(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T59f83(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T41f362(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T41f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1762f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T1222f5(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T1222f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1762f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1762f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1762f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1762f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1762f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1762f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1762f36(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T59f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T852c1040(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ALL_EXPORT.position */
extern T0* T1581f4(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T59f82(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T41f361(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T41f82(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1414f30(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1400f28(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T59f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T852c1039(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T59f81(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T41f360(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T41f81(TC* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1591f3(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T189f108(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put_new */
extern void T1414f46(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T493f4(TC* ac, T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T493f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1414f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1414f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1414f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1414f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1414f61(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1789f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1786f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1414f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1414f21(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1400f24(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T59f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T852c1033(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T41f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1401f20(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1772f36(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1772f45(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1772f44(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1772f43(TC* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1997f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1997f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1772f42(TC* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T2000f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T2000f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1772f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1772f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T2003f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T2003f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1770f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1770f47(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1770f46(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1770f45(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1770f44(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1770f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1770f43(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1998f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1998f7(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1401f23(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1401f17(TC* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1419c6(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T77f233(TC* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T319c53(TC* ac);
/* ET_RENAME.tokens */
extern T0* T1419f4(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1401f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1401f15(TC* ac, T0* C);
/* ET_ECF_LIBRARY.system_object_parents */
extern T0* T192f88(TC* ac, T0* C);
/* ET_SYSTEM.system_object_parents */
extern T0* T46f9(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_parents */
extern T0* T63f91(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1401f13(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1401f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1401f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1401f14(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1401f25(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1774f15(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1774f17(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1774f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T2005f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1774f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T2005f8(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1774f7(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1774f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1774f6(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1774f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1774f14(TC* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1774f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1774f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T2005f6(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1772f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1772f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1772f29(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1772f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1772f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1772f22(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1769f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1772f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1772f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1772f23(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1401f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1401f18(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1770f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1770f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1770f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1770f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1770f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1770f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1770f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1770f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1770f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1770f20(TC* ac, T0* C, T6 a1);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T489f10(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1401f21(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1401f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1770f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1770f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1770f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1770f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1770f55(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1999f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1997f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1997f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1772f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1772f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1772f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T2004f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T2000f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T2000f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1772f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1772f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1772f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1772f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1772f32(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1772f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1999f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1997f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1772f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T2004f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T2000f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1772f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1772f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1772f21(TC* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1774c11(TC* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1774f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1774f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T2005c7(TC* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1774f12(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T2006f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T2006c3(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1392f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1392f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1770f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1770f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1770f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1770f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1770f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1770f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1770f28(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T510f37(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1406f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T510f36(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1407f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1407f10(TC* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T489f6(TC* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T488f10(TC* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T489f8(TC* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T78f124(TC* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T78f139(TC* ac, T0* C);
/* ET_ECF_LIBRARY.any_parents */
extern T0* T192f23(TC* ac, T0* C);
/* ET_SYSTEM.any_parents */
extern T0* T46f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM.any_parents */
extern T0* T63f26(TC* ac, T0* C);
/* ET_CLASS.parents_count */
extern T6 T78f123(TC* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T78f138(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T1320f5(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T510f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T78f268(TC* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T510c32(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1410c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1410f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1410f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1410f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1410f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1780c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1410f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1410f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1410f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1410f72(TC* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1409c10(TC* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1409f6(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1409f7(TC* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1409f10p1(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1409f5(TC* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1408c12(TC* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1408f12p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_map */
extern T0* T1779c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_with_equality_testers */
extern void T1779f34(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_sparse_container */
extern void T1779f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].set_internal_cursor */
extern void T1779f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_cursor */
extern T0* T1779f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make */
extern T0* T2012c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_slots */
extern void T1779f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_clashes */
extern void T1779f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_key_storage */
extern void T1779f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_item_storage */
extern void T1779f36(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make */
extern T0* T2013f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make_empty */
extern T0* T2015c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].default_create */
extern T0* T2013c3(TC* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1407c8(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1407f8p1(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1407f5(TC* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1406c9(TC* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1406f9p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1406f5(TC* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1405c10(TC* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1405f10p1(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1404c8(TC* ac, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1775c10(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1775f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T838c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1517f1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1517c3(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern void T338f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T338c16(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T2007c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T2007f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T2007f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T2007f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T2007f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T2070c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T2007f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T2007f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T2007f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T2007f53(TC* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1404f8p1(TC* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1404f7(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1403c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1403f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1403f4(TC* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1402c7(TC* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1402f5(TC* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1401c19(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1772f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1772c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1772f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1772f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1772f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1772f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T2003c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1772f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1772f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1772f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1999f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1997c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1999c3(TC* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1772f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T2004f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T2000c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T2004c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1770f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1769c2(TC* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1770c31(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1770f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1770f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1998c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1770f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1770f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1770f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1770f37(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1401f19p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1401f12(TC* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1400c22(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1764c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1764f49(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1764f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1764f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1764f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1988c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1764f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1764f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1764f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1764f71(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1991f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1989c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1991c3(TC* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1763f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1763c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1763f52(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1763f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_internal_cursor */
extern void T1763f77(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1763f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1986c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1763f76(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1763f75(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1763f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1763f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1762f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1762c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_internal_cursor */
extern void T1762f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1762f20(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1985c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1762f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1762f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1762f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1762f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1414f42(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern T0* T1400f17(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1414c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1414f51(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1414f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_internal_cursor */
extern void T1414f80(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1414f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1785c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1414f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1414f78(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1414f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1414f76(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1789f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1786c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1789c3(TC* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1400f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1400f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1399c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1399f42(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1399f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1399f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1399f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1399f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1399f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1399f44(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1760f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1761c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1760c3(TC* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1398c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1398f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1398f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1757c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1755f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1756c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1755c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1395f36(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T510f24(TC* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1396c2(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1395c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1395f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1395f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1395f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1395f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1754c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1395f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1395f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1395f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T1753f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make_empty */
extern T0* T1751c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T1753c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1395f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1749f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1745c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1749c3(TC* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1392f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T510f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1392c44(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1392f54(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1392f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1392f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1392f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1744c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1392f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1392f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1392f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1392f69(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T510f32p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T510f23(TC* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T78f298(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T507f1073(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T507f1256(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_processed */
extern void T265f111(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T69f107(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T78f297(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1552c9(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T518f5(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T59f351(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T59f379(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T2020c14(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T217f96(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T217f100(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T217f102(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T634f97(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T634f101(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T634f104(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T59f73(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T41f351(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T41f379(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T41f73(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T870f47(TC* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T498f8(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T316f9(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T518f2(TC* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T78f266(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T59f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T2018c23(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T59f47(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T41f264(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T41f47(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T59f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T852c959(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T59f46(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T41f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T41f46(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T507f753(TC* ac, T0* C);
/* ET_CLASS.set_filename */
extern void T78f296(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T507f1259(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.set_has_utf8_bom */
extern void T78f315(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yyparse */
extern void T507f1260(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T507f1270(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T507f1269(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T507f1268(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T507f1297(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_954 */
extern void T507f2267(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T507f2275(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T1012f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T1012f14(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T1012f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T1012f6(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_953 */
extern void T507f2266(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].force */
extern void T1052f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].fill_with */
extern void T1053f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IDENTIFIER].extend */
extern void T1053f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_952 */
extern void T507f2265(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_951 */
extern void T507f2264(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_950 */
extern void T507f2263(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T1062f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T1064f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T1064f10(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1566f45(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1565f45(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T516f264(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T507f776(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_949 */
extern void T507f2262(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1566f44(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1565f44(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_948 */
extern void T507f2261(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_947 */
extern void T507f2260(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_946 */
extern void T507f2259(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_945 */
extern void T507f2258(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_944 */
extern void T507f2257(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_943 */
extern void T507f2256(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T1054f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T1056f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T1056f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_942 */
extern void T507f2255(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1564f70(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1563f70(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1562f70(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1561f70(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T454f72(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_941 */
extern void T507f2254(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_940 */
extern void T507f2253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_939 */
extern void T507f2252(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_938 */
extern void T507f2251(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_937 */
extern void T507f2250(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_936 */
extern void T507f2249(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T1038f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T1040f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T1040f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_935 */
extern void T507f2248(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_934 */
extern void T507f2247(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T1044f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T1046f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T1046f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_933 */
extern void T507f2246(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T1044f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T1046f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_932 */
extern void T507f2245(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_931 */
extern void T507f2244(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_930 */
extern void T507f2243(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_929 */
extern void T507f2242(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T1060f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T1061f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T1061f10(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1560f57(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1559f53(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T1558f48(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_928 */
extern void T507f2241(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T1060f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T1061f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_927 */
extern void T507f2240(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T507f2239(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T507f2238(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T507f2237(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T507f2236(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T507f2235(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T507f2234(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T507f2233(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T507f2232(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T507f2231(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T507f2230(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T507f2229(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T507f2228(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T507f2227(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T507f2226(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T507f2225(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T507f2224(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T507f2223(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T507f2222(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T507f2221(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T507f2220(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T507f2219(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T507f2218(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T507f2217(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T507f2216(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T507f2215(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T507f2214(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T507f2213(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T507f2212(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T507f2211(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T507f2210(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T507f2209(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T507f2208(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T1096f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T1097f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T1097f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T1096f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T1097f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T516f333(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1633c14(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T77f1551(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T1082c46(TC* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T1082f49(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1633f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T507f2207(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T507f2206(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T507f2205(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1098f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1100f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1100f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T1098f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T1100f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T507f2276(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T1012f13(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T516f332(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T507f2204(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T1101f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T1103f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T1103f10(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T1102f15(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T1881f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T1880f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T1880f7(TC* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T1102f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1881c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T507f2203(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T1101f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T1103f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T516f331(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T1102c14(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T1102f14p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1881f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1880c4(TC* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T1102f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T507f968(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T507f970(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T1016f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T507f2202(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T507f2201(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T507f2279(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T1016f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T1034f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T1035f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T1035f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T1016f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T1034f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T1035f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T1016f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T1016f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T507f2200(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T507f2273(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T507f2278(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T1016f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T1035f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T1035f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T507f2199(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T507f2198(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T507f2197(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T1104f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T1105f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T1105f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T1104f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T1105f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T516f330(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1632c12(TC* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1632f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T507f2196(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T507f2195(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T507f2194(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T507f2193(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T507f1022(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T516f355(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T530f4(TC* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_inline_separate_argument */
extern void T189f123(TC* ac, T0* C, T1 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.index_of_name */
extern T6 T1556f4(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.index_of_name */
extern T6 T447f4(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1845f11(TC* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T1276f10(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1844f13(TC* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T262f12(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T507f2192(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T507f2287(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1021f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1727f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1726f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1726f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T1021f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1727f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1726f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T1021f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T1021f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T1019f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].force */
extern void T1723f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1722f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].extend */
extern void T1722f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].resize */
extern void T1019f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1723f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1722f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T1019f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T1019f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T1017f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1719f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1718f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1718f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T1017f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1719f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1718f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T1017f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T1017f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1014f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1281f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1282f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1282f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T1014f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1281f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1282f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T1014f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T1014f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1013f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1234f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1235f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1235f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T1013f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1234f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1235f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T1013f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T1013f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T507f2191(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T507f2190(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T1249f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T1250f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T1250f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1249f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T1250f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T507f2298(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T507f2302(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T1021f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1726f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1726f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T1021f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T1021f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1022f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].force */
extern void T1728f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].fill_with */
extern void T1729f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].extend */
extern void T1729f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].resize */
extern void T1022f11(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1728f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1729f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].new_capacity */
extern T6 T1022f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].extendible */
extern T1 T1022f5(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.wipe_out */
extern void T1556f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T713f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.fixed_array */
extern T0* T1556f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T713c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].remove */
extern void T1019f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1722f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1722f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].item */
extern T0* T1019f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T1019f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].force */
extern void T1020f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].force */
extern void T1724f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].fill_with */
extern void T1725f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].extend */
extern void T1725f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].resize */
extern void T1020f11(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1724f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].aliased_resized_area */
extern T0* T1725f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].new_capacity */
extern T6 T1020f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].extendible */
extern T1 T1020f5(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.wipe_out */
extern void T447f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].keep_head */
extern void T709f5(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ITERATION_COMPONENT_LIST.fixed_array */
extern T0* T447f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].default_create */
extern T0* T709c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T1017f13(TC* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1718f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1718f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T1017f7(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T1017f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].force */
extern void T1018f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].force */
extern void T1720f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].fill_with */
extern void T1721f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST_LIST].extend */
extern void T1721f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].resize */
extern void T1018f11(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1720f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1721f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T1018f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].extendible */
extern T1 T1018f5(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T530f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T704f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T530f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T704c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T1014f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1282f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1282f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T1014f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T1014f5(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T1013f12(TC* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1235f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1235f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T1013f6(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T1013f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T1631f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T1630f51(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_inline_separate_arguments */
extern void T1629f47(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T1628f46(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T1627f52(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_inline_separate_arguments */
extern void T1626f48(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.cloned_inline_separate_argument_list */
extern T0* T1556f3(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.put_last */
extern void T1556f12(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.make_with_capacity */
extern T0* T1556c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T713f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T714c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T1631f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T1630f50(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_iteration_components */
extern void T1629f46(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T1628f45(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T1627f51(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_iteration_components */
extern void T1626f47(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.cloned_iteration_component_list */
extern T0* T447f3(TC* ac, T0* C);
/* ET_ITERATION_COMPONENT_LIST.put_last */
extern void T447f12(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.make_with_capacity */
extern T0* T447c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT].make */
extern T0* T709f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT].make_empty */
extern T0* T707c5(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1631f43(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1630f49(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1629f45(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1628f44(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1627f50(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1626f46(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T530f3(TC* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T530f12(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T530c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T704f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T703c5(TC* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T516f329(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1631f52(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1631f51(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1631f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1631f49(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1631c42(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1631f54(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1631f55(TC* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1882c9(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T77f907(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T1029c13(TC* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T1029f15(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T1029f16(TC* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T1029f7(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1631f17(TC* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T516f190(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T507f2189(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T507f2188(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T516f328(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1630f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1630f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1630f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1630f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1630f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1630f56(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1630f55(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1630c48(TC* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1630f63(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T516f187(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T333f20(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T77f766(TC* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T319c59(TC* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T516f371(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T507f2187(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T507f2186(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T516f327(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1629f56(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1629f55(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1629f54(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1629f53(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1629f52(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1629f51(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1629c44(TC* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1629f58(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1629f19(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T507f2185(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T507f2184(TC* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T516f326(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1628f53(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1628f52(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1628f51(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1628f50(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1628c43(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1628f55(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1628f56(TC* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T334f41(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1628f18(TC* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T516f181(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T507f2183(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T507f2182(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T516f325(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1627f62(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1627f61(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1627f60(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1627f59(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1627f58(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1627f57(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1627f56(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1627c49(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1627f64(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T507f2181(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T507f2180(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T516f324(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1626f57(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1626f56(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1626f55(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1626f54(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1626f53(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1626f52(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1626c45(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1626f59(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1626f20(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T507f2179(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T507f2178(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T507f2297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T507f2177(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T1117f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T1119f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T1119f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T1117f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T1119f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T516f322(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T1118f37(TC* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T1118c36(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T1118f10(TC* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T1118c33(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T516f323(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T507f2176(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T507f2175(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T1206f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T1207f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION].extend */
extern void T1207f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1206f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T1207f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_iteration_cursor */
extern T0* T507f1021(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_iteration_cursor */
extern T0* T516f370(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ITERATION_CURSOR.set_at_symbol */
extern void T1625f27(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_CURSOR.make */
extern T0* T1625c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.at_symbol */
extern T0* T77f1550(TC* ac, T0* C);
/* ET_SYMBOL.make_at */
extern T0* T661c103(TC* ac);
/* ET_ITERATION_CURSOR.tokens */
extern T0* T1625f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T516f311(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1621c29(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator_from_symbol */
extern T0* T516f321(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_break */
extern void T1050f58(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.break */
extern T0* T1071f1(TC* ac, T0* C);
/* ET_BRACKET_SYMBOL.break */
extern T0* T662f3(TC* ac, T0* C);
/* ET_SYMBOL.break */
extern T0* T661f3(TC* ac, T0* C);
/* ET_FREE_OPERATOR.set_position */
extern void T1050f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T1050c54(TC* ac, T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T85f10(TC* ac, T0* C, T0* a1);
/* CHARACTER_32.upper */
extern T3 T3f7(TC* ac, volatile T3* C);
/* CHARACTER_PROPERTY.to_upper */
extern T3 T849f2(TC* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_upper_table_17 */
extern T0* T849f36(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_16 */
extern T0* T849f35(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_15 */
extern T0* T849f34(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_14 */
extern T0* T849f33(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_13 */
extern T0* T849f32(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_12 */
extern T0* T849f31(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_11 */
extern T0* T849f30(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_10 */
extern T0* T849f29(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_9 */
extern T0* T849f28(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_8 */
extern T0* T849f27(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_7 */
extern T0* T849f26(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_6 */
extern T0* T849f25(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_5 */
extern T0* T849f24(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_4 */
extern T0* T849f23(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_3 */
extern T0* T849f22(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_2 */
extern T0* T849f21(TC* ac, T0* C);
/* CHARACTER_PROPERTY.to_upper_table_1 */
extern T0* T849f20(TC* ac, T0* C);
/* CHARACTER_32.minus */
extern T3 T3f14(TC* ac, volatile T3* C, T10 a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T1050f10(TC* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T1050f60(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T1050f61(TC* ac, T0* C);
/* ET_ECF_LIBRARY.use_obsolete_syntax_mode */
extern T1 T192f101(TC* ac, T0* C);
/* ET_ECF_SYSTEM.use_obsolete_syntax_mode */
extern T1 T63f132(TC* ac, T0* C);
/* ET_SYSTEM.use_obsolete_syntax_mode */
extern T1 T46f103(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T507f774(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T507f2174(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].force */
extern void T1336f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].fill_with */
extern void T1338f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].extend */
extern void T1338f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T1336f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].aliased_resized_area */
extern T0* T1338f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_there_exists_quantifier_expression_header */
extern T0* T507f1020(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ITERATION_COMPONENT_LIST.force_last */
extern void T447f11(TC* ac, T0* C, T0* a1);
/* ET_ITERATION_COMPONENT_LIST.resize */
extern void T447f13(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.new_capacity */
extern T6 T447f8(TC* ac, T0* C, T6 a1);
/* ET_ITERATION_COMPONENT_LIST.capacity */
extern T6 T447f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_iteration_component_list */
extern T0* T507f1037(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].remove */
extern void T1020f12(TC* ac, T0* C);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].keep_head */
extern void T1725f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].set_count */
extern void T1725f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].item */
extern T0* T1020f8(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].is_empty */
extern T1 T1020f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_there_exists_quantifier_expression */
extern T0* T516f369(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_there_exists */
extern T0* T1337c43(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUANTIFIER_EXPRESSION.create_unfolded_form */
extern void T1337f45(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T361c15(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T361f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bar_symbol */
extern T0* T77f726(TC* ac, T0* C);
/* ET_SYMBOL.make_bar */
extern T0* T661c115(TC* ac);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T77f721(TC* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T661c110(TC* ac);
/* ET_TOKEN_CONSTANTS.there_exists_symbol */
extern T0* T77f725(TC* ac, T0* C);
/* ET_SYMBOL.make_there_exists */
extern T0* T661c114(TC* ac);
/* ET_QUANTIFIER_EXPRESSION.tokens */
extern T0* T1337f14(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T77f335(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1568c41(TC* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1568f46(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1568f47(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T507f713(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T507f2173(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_for_all_quantifier_expression_header */
extern T0* T507f1019(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_for_all_quantifier_expression */
extern T0* T516f368(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUANTIFIER_EXPRESSION.make_for_all */
extern T0* T1337c39(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T507f2172(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_quantifier_expression */
extern T0* T507f1018(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUANTIFIER_EXPRESSION.set_iteration_expression */
extern void T1337f42(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T507f2171(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T1084f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T1086f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T1086f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T1084f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T1086f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T507f1017(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.set_has_cursor_name */
extern void T1085f50(TC* ac, T0* C, T1 a1);
/* ET_KEYWORD.is_as */
extern T1 T319f34(TC* ac, T0* C);
/* ET_ECF_LIBRARY.obsolete_iteration_mode */
extern T1 T192f98(TC* ac, T0* C);
/* ET_ECF_SYSTEM.obsolete_iteration_mode */
extern T1 T63f133(TC* ac, T0* C);
/* ET_SYSTEM.obsolete_iteration_mode */
extern T1 T46f104(TC* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T516f367(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_as_keyword */
extern void T1085f51(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T1085f47(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T1085f46(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T1085c40(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T1085f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T77f747(TC* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T319c83(TC* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T1085f21(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T507f2170(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T507f2169(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T507f1016(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T1085f48(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T1085f49(TC* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T1085f44(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T1085f43(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T516f258(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1848c4(TC* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T319f33(TC* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T319f32(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T507f2168(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T507f1015(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T1085f45(TC* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T507f2167(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T1149f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T1150f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTANT].extend */
extern void T1150f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T1149f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T1150f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T507f2166(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T507f2165(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T507f2164(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T507f2163(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T507f2162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1352f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1354f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1354f10(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T1353f34(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].force */
extern void T1891f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].fill_with */
extern void T1890f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].extend */
extern void T1890f7(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T1353f14(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1891c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T507f2161(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1352f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1354f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T516f320(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1353f35(TC* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1353c31(TC* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1353f31p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T1891f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1890c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T77f912(TC* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T319c63(TC* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T1353f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T507f967(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T1015f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T507f2160(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T507f2159(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T507f2274(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T1015f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T1026f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T1027f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T1027f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T1015f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T1026f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T1027f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T1015f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T1015f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T507f2158(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T507f2272(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T1015f10(TC* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T1027f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T1027f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T507f2157(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T507f2156(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1295f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1296f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1296f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T507f2155(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1295f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1296f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T516f319(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T370f38(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T507f2154(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T507f2153(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T507f2152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T507f2151(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T507f2150(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1286f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1288f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1288f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T1287f35(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T1287f14(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T507f2149(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1286f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1288f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T516f318(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T1287f36(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T1287c31(TC* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T1287f31p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T77f729(TC* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T661c118(TC* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T77f910(TC* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T661c106(TC* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T1287f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T507f2148(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T507f2147(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.set_cast_type */
extern void T1287f34(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T507f2146(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T507f2145(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T507f2144(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T507f2143(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1314f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1316f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1316f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1314f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1316f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T516f317(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T1315f28(TC* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T1315c25(TC* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T1315f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T507f2142(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T1090f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T1091f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T1091f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T507f2141(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1090f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1091f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T516f316(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T360c23(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T507f2140(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T507f2139(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T1114f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T1116f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T1116f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T1114f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T1116f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T507f2138(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T516f315(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T1115c28(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T507f2137(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T507f2136(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T507f2135(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T507f2134(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T507f2133(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T507f2132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T507f2131(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T507f2130(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T507f2129(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T507f2128(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T507f2269(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T507f1014(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T507f2127(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T507f2126(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T507f2125(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T507f2124(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T507f2123(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T507f2122(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T507f1013(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.register_inline_constant */
extern void T78f331(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1624f32(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T516f366(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1624f30(TC* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1624c27(TC* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1624f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T507f2121(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T507f2120(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T507f2119(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T507f2118(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T507f2117(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T507f2116(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T507f2115(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T507f2114(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T507f1296(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T507f2113(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T507f2112(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T507f2111(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T507f2110(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T507f2109(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T507f2108(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T507f1012(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T530f11(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T530f13(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T530f8(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T530f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T507f1039(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].remove */
extern void T1018f12(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST_LIST].keep_head */
extern void T1721f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].set_count */
extern void T1721f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].item */
extern T0* T1018f8(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].is_empty */
extern T1 T1018f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T516f365(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T702f32(TC* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T702c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T702f34(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T702f11(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T507f2107(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T507f2106(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T516f314(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T394f30(TC* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T394c27(TC* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T394f16(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T507f2105(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T507f2104(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T507f1011(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T516f364(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1623f35(TC* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1623c32(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1623f14(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T507f995(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T507f2103(TC* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T516f313(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1622f27(TC* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1622c24(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T77f1549(TC* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T319c62(TC* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1622f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T507f2102(TC* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T516f312(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T1050f59(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T507f2101(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T507f2100(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T507f2099(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T507f1010(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T507f1010ot1(TC* ac, T0* a1);
extern T1 T507f1010ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T516f363(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T1071f155(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T507f2098(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T507f1009(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T507f1009ot1(TC* ac, T0* a1);
extern T1 T507f1009ot2(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T516f362(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T1071f154(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T507f2097(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T507f2096(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T507f2095(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T507f2094(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T507f2093(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T507f2092(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T507f2091(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T507f2090(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T507f2089(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T507f2088(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T507f2087(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T507f2086(TC* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T516f310(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1620c25(TC* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1620f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T507f2085(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T507f2084(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T507f2083(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T507f2082(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T507f2081(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T507f2080(TC* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T516f309(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1619c26(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T507f2079(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T507f2078(TC* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T516f308(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T507f2077(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T507f2076(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T516f302(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1616c29(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T507f2075(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T507f2074(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T507f2073(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T516f307(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1618f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1618c42(TC* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T77f735(TC* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T319c71(TC* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T77f1548(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T1058c55(TC* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T1058f61(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T1058f62(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T507f2072(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T507f2071(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T516f306(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1617f43(TC* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1617c42(TC* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T77f740(TC* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T319c76(TC* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T77f1547(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T1058c57(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T507f2070(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T507f2069(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T507f2068(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T507f2067(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T507f2066(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T507f2065(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T507f2064(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T507f2063(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T507f2062(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T507f2061(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T507f2060(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T507f2059(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T507f2058(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T507f2057(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T507f2056(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T507f2055(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T516f305(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T1071f153(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T507f2054(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T516f304(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T1071f152(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T507f2053(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator_from_symbol */
extern T0* T516f303(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_infix */
extern T0* T1050c57(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T507f2052(TC* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T516f301(TC* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T1050f56(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T507f2051(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T507f2050(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T507f2049(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1386f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1387f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T1387f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1386f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1387f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T507f2048(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T507f1008(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T507f2047(TC* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T516f300(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1615f27(TC* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1615c24(TC* ac, T0* a1);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1615f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T507f2046(TC* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T516f299(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1614f27(TC* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1614c24(TC* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1614f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T507f2045(TC* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T516f298(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1613f27(TC* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1613c24(TC* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1613f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T507f2044(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T507f1007(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T516f361(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1612f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T507f2043(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T1208f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T1209f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T1209f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1208f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T1209f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T516f297(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T507f2042(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T507f2041(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T516f296(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T507f2040(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T507f2039(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T507f2038(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T507f2037(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T507f2036(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T507f2035(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T516f293(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T507f994(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T507f2034(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T507f979(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T507f2033(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T507f2032(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T507f2031(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T507f2030(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T507f2029(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T507f2028(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T507f2027(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T507f2026(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T507f2025(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T507f1006(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T507f2024(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T516f295(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1611f31(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T516f291(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T507f2023(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T507f2022(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1349f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1351f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1351f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1349f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1351f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T516f294(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1350f35(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T507f2021(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T507f2020(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T1120f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T1121f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T1121f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1120f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1121f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T507f2019(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T507f2018(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T507f2017(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T507f2016(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T507f2015(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1265f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1266f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1266f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1265f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1266f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T516f292(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1610f16(TC* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1610c15(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1610f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T507f2014(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T507f2013(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T516f290(TC* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1608f17(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1608f16(TC* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1608c15(TC* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1608f12(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T507f2012(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T507f2011(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T516f289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T507f2010(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T507f2009(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T507f1005(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T516f360(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1833c13(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T507f2008(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T1253f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T1254f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T1254f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1253f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1254f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_argument_comma */
extern T0* T516f288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T507f2007(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].force */
extern void T1251f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].fill_with */
extern void T1252f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].extend */
extern void T1252f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1251f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].aliased_resized_area */
extern T0* T1252f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_argument */
extern T0* T507f1004(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.force_last */
extern void T1556f11(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.resize */
extern void T1556f13(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.new_capacity */
extern T6 T1556f8(TC* ac, T0* C, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENT_LIST.capacity */
extern T6 T1556f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_inline_separate_argument_list */
extern T0* T507f1038(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].remove */
extern void T1022f12(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].keep_head */
extern void T1729f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].set_count */
extern void T1729f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].item */
extern T0* T1022f8(TC* ac, T0* C);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].is_empty */
extern T1 T1022f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_inline_separate_argument */
extern T0* T516f359(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_ARGUMENT.make */
extern T0* T364c12(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_ARGUMENT.tokens */
extern T0* T364f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T507f2006(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].force */
extern void T1255f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].fill_with */
extern void T1256f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].extend */
extern void T1256f10(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.put_first */
extern void T332f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].force */
extern void T752f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].fill_with */
extern void T751f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].extend */
extern void T751f7(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.fixed_array */
extern T0* T332f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T752c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T507f2005(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T1255f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].aliased_resized_area */
extern T0* T1256f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inline_separate_arguments */
extern T0* T516f287(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_INLINE_SEPARATE_ARGUMENTS.set_separate_keyword */
extern void T332f17(TC* ac, T0* C, T0* a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern T0* T332c15(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.make_with_capacity */
extern void T332f15p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T752f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T751c4(TC* ac, T6 a1);
/* ET_INLINE_SEPARATE_ARGUMENTS.tokens */
extern T0* T332f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T507f2004(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T507f2003(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T507f2002(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].force */
extern void T1257f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].fill_with */
extern void T1258f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].extend */
extern void T1258f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T1257f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].aliased_resized_area */
extern T0* T1258f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_inline_separate_instruction */
extern T0* T507f1003(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_inline_separate_instruction */
extern T0* T516f358(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INLINE_SEPARATE_INSTRUCTION.make */
extern T0* T367c12(TC* ac, T0* a1, T0* a2);
/* ET_INLINE_SEPARATE_INSTRUCTION.tokens */
extern T0* T367f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T507f2001(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1289f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1291f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1291f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1289f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1291f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T516f286(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T507f2000(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1292f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1294f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1294f10(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T1293f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].force */
extern void T1908f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1907f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].extend */
extern void T1907f7(TC* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T1293f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1908c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T507f1999(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1292f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1294f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T516f285(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T1293c11(TC* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T1293f5(TC* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T1293f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T1908f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1907c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T507f1998(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T507f1997(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T507f1996(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T507f1995(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T507f1994(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1186f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1188f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1188f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1186f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1188f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T516f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T1187c12(TC* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T1187f4(TC* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T516f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T77f744(TC* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T319c80(TC* ac);
/* ET_COMPOUND.make */
extern T0* T333c19(TC* ac);
/* ET_COMPOUND.make */
extern void T333f19p1(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T755f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].make_empty */
extern T0* T754c4(TC* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern T0* T333f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T755c2(TC* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T77f228(TC* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T319c52(TC* ac);
/* ET_COMPOUND.tokens */
extern T0* T333f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T507f1993(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T1146f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T1148f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T1148f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1146f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1148f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T507f1992(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T507f1991(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].force */
extern void T1346f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].fill_with */
extern void T1348f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].extend */
extern void T1348f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T1346f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].aliased_resized_area */
extern T0* T1348f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_repeat_instruction_header */
extern T0* T507f1002(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_AST_FACTORY.new_repeat_instruction */
extern T0* T516f357(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_REPEAT_INSTRUCTION.make */
extern T0* T1347c27(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.create_unfolded_form */
extern void T1347f30(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.close_repeat_symbol */
extern T0* T77f728(TC* ac, T0* C);
/* ET_SYMBOL.make_close_repeat */
extern T0* T661c117(TC* ac);
/* ET_TOKEN_CONSTANTS.open_repeat_symbol */
extern T0* T77f727(TC* ac, T0* C);
/* ET_SYMBOL.make_open_repeat */
extern T0* T661c116(TC* ac);
/* ET_REPEAT_INSTRUCTION.tokens */
extern T0* T1347f13(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T507f1990(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T1087f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T1089f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T1089f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T1087f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T1089f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T507f1001(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_INSTRUCTION.set_has_cursor_name */
extern void T1088f33(TC* ac, T0* C, T1 a1);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T516f356(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_as_keyword */
extern void T1088f34(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T1088f31(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T1088f30(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T1088c26(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T1088f35(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T1088f17(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T507f1989(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T507f1988(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].force */
extern void T1374f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].fill_with */
extern void T1376f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].extend */
extern void T1376f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T1374f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].aliased_resized_area */
extern T0* T1376f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression */
extern T0* T516f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_WHEN_EXPRESSION.make */
extern T0* T1375c10(TC* ac, T0* a1, T0* a2);
/* ET_WHEN_EXPRESSION.tokens */
extern T0* T1375f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T507f1987(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].force */
extern void T1377f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].fill_with */
extern void T1379f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].extend */
extern void T1379f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.put_first */
extern void T1378f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].force */
extern void T1920f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].fill_with */
extern void T1919f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_EXPRESSION].extend */
extern void T1919f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_EXPRESSION_LIST.fixed_array */
extern T0* T1378f4(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].default_create */
extern T0* T1920c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T507f1986(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1377f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1379f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_expression_list */
extern T0* T516f281(TC* ac, T0* C, T6 a1);
/* ET_WHEN_EXPRESSION_LIST.make_with_capacity */
extern T0* T1378c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_EXPRESSION].make */
extern T0* T1920f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_WHEN_EXPRESSION].make_empty */
extern T0* T1919c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T507f1985(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T507f1984(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T507f1983(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].force */
extern void T1259f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].fill_with */
extern void T1261f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].extend */
extern void T1261f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T1259f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].aliased_resized_area */
extern T0* T1261f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_expression */
extern T0* T516f280(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_EXPRESSION.set_else_part */
extern void T1260f28(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_EXPRESSION.make */
extern T0* T1260c27(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_EXPRESSION.tokens */
extern T0* T1260f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T507f1982(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T507f1981(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T1128f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T1130f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T1130f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1128f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T1130f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T507f1980(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T507f1000(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T507f1979(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T507f1978(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T507f1977(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T1125f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T1127f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T1127f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T1125f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T1127f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T516f279(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1607c12(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T77f731(TC* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T661c120(TC* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1607f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T507f1976(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T507f1975(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T1131f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T1133f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T1133f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1131f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T1133f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T516f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T507f1974(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T1134f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T1136f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T1136f10(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T1135f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].force */
extern void T1885f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].fill_with */
extern void T1884f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].extend */
extern void T1884f7(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T1135f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T1885c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T507f1973(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1134f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1136f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T516f277(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T1135f17(TC* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T1135c15(TC* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T1135f15p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T1885f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].make_empty */
extern T0* T1884c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T77f741(TC* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T319c77(TC* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T1135f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T507f1972(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T507f1971(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T507f1970(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T507f1969(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T507f1968(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1380f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1382f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1382f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1380f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1382f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T516f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1381c10(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T507f1967(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1383f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1385f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1385f10(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T1384f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].force */
extern void T1922f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].fill_with */
extern void T1921f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].extend */
extern void T1921f7(TC* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T1384f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T1922c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T507f1966(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1383f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1385f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T516f275(TC* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1384c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T1922f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].make_empty */
extern T0* T1921c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T507f1965(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T507f1964(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T507f1963(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1262f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1264f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1264f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1262f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1264f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T516f274(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T1263f15(TC* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T1263c14(TC* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T1263f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T507f1962(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T507f1961(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T1189f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T1191f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T1191f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1189f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T1191f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T516f273(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T1190c11(TC* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T1190f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T507f1960(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T1192f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T1194f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T1194f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T1193f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].force */
extern void T1901f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].fill_with */
extern void T1900f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_EXPRESSION].extend */
extern void T1900f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T1193f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1901c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T507f1959(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1192f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T1194f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T516f272(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T1193c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_EXPRESSION].make */
extern T0* T1901f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1900c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T507f1958(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T507f1957(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T1243f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T1245f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T1245f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1243f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T1245f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T516f271(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T1244f31(TC* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T1244c30(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T1244f13(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T507f1956(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T507f1955(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1195f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1197f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1197f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1195f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1197f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T516f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T1196c11(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T507f1954(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1198f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1200f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1200f10(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T1199f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].force */
extern void T1903f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].fill_with */
extern void T1902f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].extend */
extern void T1902f7(TC* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T1199f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T1903c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T507f1953(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1198f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1200f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T516f269(TC* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T1199c11(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T1903f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].make_empty */
extern T0* T1902c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T507f1952(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T507f1951(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1246f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1248f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1248f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1246f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1248f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T516f268(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T1247f17(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T1247f16(TC* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T1247c15(TC* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T1247f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T507f1950(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T507f1949(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T507f1948(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T507f1947(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T1177f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T1179f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T1179f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1177f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T1179f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creation_region */
extern T0* T516f267(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATION_REGION.set_right_symbol */
extern void T1178f7(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.set_left_symbol */
extern void T1178f6(TC* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.make */
extern T0* T1178c5(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T77f909(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T1071c138(TC* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T1071f156(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T77f908(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T1071c139(TC* ac);
/* ET_CREATION_REGION.tokens */
extern T0* T1178f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T507f1946(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T507f1945(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1175f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1176f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1176f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1175f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1176f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T516f266(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_EXPRESSION.set_creation_region */
extern void T405f38(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T405f37(TC* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T405c35(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T77f126(TC* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T319c47(TC* ac);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T516f263(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T406c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T507f1944(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T507f1943(TC* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T516f265(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.set_creation_region */
extern void T1606f24(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1606f23(TC* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1606c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T507f1942(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T507f1941(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T507f1940(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T507f1939(TC* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T516f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1605f22(TC* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1605c21(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T77f1544(TC* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T661c100(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T507f1938(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T507f1937(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T507f1936(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T507f1935(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T1122f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T1124f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T1124f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T1122f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T1124f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T507f999(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T1023f15(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1730f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1730f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T1023f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1732f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1732f6(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T1123f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1731f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1730f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1730f10(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T1123f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1731c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T1023f10(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T516f354(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T1123f20(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T1123f19(TC* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T1123c17(TC* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T1123f17p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1731f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1730c5(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T77f743(TC* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T319c79(TC* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T1123f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T338f29(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T338f30(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T338f15(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T507f1934(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T507f1933(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T507f1932(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T507f1931(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T507f2296(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T507f2301(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T507f1930(TC* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T516f261(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T507f1929(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T507f1928(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T507f1927(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T507f1926(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T507f1925(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_repeat_instruction */
extern T0* T507f998(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REPEAT_INSTRUCTION.set_close_repeat_symbol */
extern void T1347f29(TC* ac, T0* C, T0* a1);
/* ET_REPEAT_INSTRUCTION.set_loop_compound */
extern void T1347f28(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T507f1924(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T507f997(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T1088f32(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T1088f29(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T1088f28(TC* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T1088f27(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T507f1923(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T516f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1603f20(TC* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1603f19(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1603f18(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1603c17(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1603f8(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T507f996(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T507f1922(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T516f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T507f1921(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T507f1920(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T507f1919(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T507f1918(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T516f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1602c12(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T77f732(TC* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T661c121(TC* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1602f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T507f1917(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T516f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T368c13(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T77f234(TC* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T661c96(TC* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T368f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T507f1916(TC* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T516f255(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1601c21(TC* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T1601f6(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1601f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T507f1915(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T507f1914(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T507f1295(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T507f1913(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T507f1912(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T507f1911(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T1144f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T1145f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T1145f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1144f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1145f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T507f1910(TC* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T333f18(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].force */
extern void T755f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].fill_with */
extern void T754f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].extend */
extern void T754f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T507f1909(TC* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T516f254(TC* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T333c17(TC* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T333f17p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T507f1908(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T507f1907(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T507f1906(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T507f1905(TC* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T516f253(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T507f1904(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T507f1903(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T516f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T77f737(TC* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T319c73(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T507f1902(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T507f1901(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T507f1900(TC* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T516f251(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T77f736(TC* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T319c72(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T507f1899(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T516f250(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T77f752(TC* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T319c88(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T507f1898(TC* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T516f249(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T507f1897(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T507f1896(TC* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T516f248(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T507f1895(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T507f1894(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T516f247(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T77f764(TC* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T319c100(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T507f1893(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T516f246(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T507f1892(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1333f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1335f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1335f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1333f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1335f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T516f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1600c88(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_attachment_mark_separate_keyword */
extern T0* T516f149(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T507f1891(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T507f1890(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T507f1889(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T507f1888(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T507f1887(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T507f1886(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T507f1885(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T507f1884(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T507f1883(TC* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T516f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1599f92(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1599c91(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T507f1882(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T507f1881(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T507f1880(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T507f1879(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T507f1878(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T507f1877(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T507f1876(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T507f1875(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T507f1874(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T507f1873(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T507f1872(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T507f1871(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1272f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1274f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1274f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1272f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1274f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T507f1870(TC* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T516f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T499f91(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T507f1869(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T507f1868(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T507f1867(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T507f1866(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T507f1865(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T507f1864(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T507f1863(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T507f1862(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T507f1861(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T507f1860(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T507f993(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T516f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1598f92(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1598c91(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T507f1859(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T507f1858(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T507f1857(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T507f1856(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T507f1855(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T507f1854(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T507f1853(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T507f1852(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T507f1851(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T507f1850(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T507f1849(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T507f1848(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T507f1847(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].force */
extern void T1092f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1093f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T1093f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1092f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1093f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T516f242(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T516f239(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1596c12(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T507f1846(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T507f1845(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T1094f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1095f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T1095f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T507f2295(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T516f241(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1846c12(TC* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T246f16(TC* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T516f240(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T507f1844(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T507f1843(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T507f1842(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T507f1841(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T507f1840(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1094f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1095f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T516f237(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T246f33(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T507f1839(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T507f1838(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T507f1837(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T507f1836(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T507f1835(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T507f1834(TC* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T516f238(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T507f1833(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T507f1832(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T507f992(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T507f992ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T516f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T507f1023(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T507f1831(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T507f991(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T507f991ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_class_type */
extern T0* T516f339(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T516f338(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T516f351(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T78f201(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T642f21(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T507f1830(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T507f1829(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T507f1828(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T507f1827(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T507f1826(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T507f1825(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T507f1824(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T507f1823(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T507f1822(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T507f1821(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T507f1820(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T1355f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].fill_with */
extern void T1356f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE].extend */
extern void T1356f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T1355f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE].aliased_resized_area */
extern T0* T1356f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T507f1819(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T507f1818(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T507f1817(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T507f1816(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T507f1815(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T507f1814(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T507f1813(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T507f1812(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T507f1811(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T507f1810(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T507f1809(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T507f1808(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T507f1807(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T507f1806(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T507f1805(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T507f1804(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T507f1803(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T507f1802(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T507f1801(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T507f1800(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T507f1799(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T507f1798(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T507f1797(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T507f1796(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T507f1795(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T507f1794(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T507f1793(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T507f1792(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T507f1791(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T507f1790(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T507f1789(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T507f1788(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T507f1787(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T507f1786(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T507f1785(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T507f1784(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T507f1783(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T507f1782(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T507f1781(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T507f1780(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T507f1779(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T507f1778(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T507f1777(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T507f1776(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T507f1775(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T507f1774(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T507f1773(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T507f1772(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T507f1771(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T507f1770(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T507f1769(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T507f1768(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T507f1767(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T507f1766(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T507f1765(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T507f1764(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T507f1763(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T507f1762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T507f1761(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T507f1760(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T507f1759(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T507f1758(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T507f1757(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T507f1756(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T507f1755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T507f1754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T507f1753(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T507f1752(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T507f1751(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T507f1750(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T507f1749(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1371f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1373f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T1373f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T507f1748(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1371f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1373f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T507f1747(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T516f236(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T1372f7(TC* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T1372c6(TC* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T77f757(TC* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T319c93(TC* ac);
/* ET_VARIANT.tokens */
extern T0* T1372f4(TC* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T516f133(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T507f1746(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T507f1745(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1283f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1285f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1285f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1283f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1285f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T507f990(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T1284f16(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T1284f5(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T516f350(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T1284f17(TC* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T1284c15(TC* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T1284f15p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T77f765(TC* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T319c101(TC* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T1284f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T507f1744(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T507f1743(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T507f1742(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T507f1741(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_loop_invariant */
extern void T507f2294(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T507f1740(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T507f1739(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1267f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1269f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1269f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1267f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1269f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T507f989(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_inline_separate_arguments_stack */
extern void T507f1276(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].wipe_out */
extern void T1021f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].i_th */
extern T0* T1021f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_iteration_components_stack */
extern void T507f1275(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].wipe_out */
extern void T1019f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].i_th */
extern T0* T1019f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T507f1274(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T1017f11(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T1017f5(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T507f1273(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T1014f10(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T507f1272(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T1013f10(TC* ac, T0* C);
/* ET_INVARIANTS.set_inline_separate_arguments */
extern void T1268f30(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_iteration_components */
extern void T1268f29(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T1268f28(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T1268f27(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T1268f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T516f349(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T1268f31(TC* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T1268c26(TC* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T1268f32(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T507f1738(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T507f1737(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T507f1736(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T507f1735(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_invariant */
extern void T507f2293(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T507f1734(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1326f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1328f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1328f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1326f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1328f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T507f988(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T1327f18(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T1327f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T516f348(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T1327f20(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T1327f19(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T1327c17(TC* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T1327f17p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T77f911(TC* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T319c64(TC* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T1327f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T507f1733(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T507f1732(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T507f1731(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T507f1730(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T507f1729(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_postcondition */
extern void T507f2292(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T507f1728(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T1329f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T1330f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T1330f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1329f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1330f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T507f987(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T305f17(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T305f10(TC* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T516f347(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T305f19(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T305f18(TC* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T305c16(TC* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T305f16p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T77f1555(TC* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T319c67(TC* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T305f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T507f1727(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T507f1726(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T507f1725(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T507f1724(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T507f1723(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.start_precondition */
extern void T507f2291(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T507f1722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_class_assertion */
extern void T507f2290(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T507f2300(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T507f2300ot1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T1023f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T1023f18(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1731f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1730f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T1023f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T1023f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T1023f14(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T516f335(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T1636f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T1023f9(TC* ac, T0* C);
/* ET_AST_FACTORY.new_class_assertion */
extern T0* T516f235(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.set_class_keyword */
extern void T1595f8(TC* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.make */
extern T0* T1595c7(TC* ac);
/* ET_CLASS_ASSERTION.tokens */
extern T0* T1595f2(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T507f1721(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T507f1720(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T507f2289(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T507f2289ot1(TC* ac, T0* a1);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T516f334(TC* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1636c7(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T507f1299(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T59f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T2019c18(TC* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T2019f19(TC* ac, T0* C, T1 a1);
/* ET_BINARY_INTEGER_CONSTANT.position_to_text */
extern T0* T1564f60(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_position_to_string */
extern void T1564f75(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T1564f63(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position_to_text */
extern T0* T1563f60(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_position_to_string */
extern void T1563f75(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T1563f63(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position_to_text */
extern T0* T1562f60(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_position_to_string */
extern void T1562f75(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T1562f63(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position_to_text */
extern T0* T1561f60(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_position_to_string */
extern void T1561f75(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T1561f63(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position_to_text */
extern T0* T454f60(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_position_to_string */
extern void T454f76(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T454f63(TC* ac, T0* C);
/* ET_VERBATIM_STRING.position_to_text */
extern T0* T1560f46(TC* ac, T0* C);
/* ET_VERBATIM_STRING.append_position_to_string */
extern void T1560f61(TC* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T1560f50(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position_to_text */
extern T0* T1559f42(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_position_to_string */
extern void T1559f57(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T1559f46(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position_to_text */
extern T0* T1557f45(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_position_to_string */
extern void T1557f58(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T1557f47(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position_to_text */
extern T0* T1571f45(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_position_to_string */
extern void T1571f58(TC* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T1571f47(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position_to_text */
extern T0* T1570f44(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_position_to_string */
extern void T1570f57(TC* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T1570f46(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.position_to_text */
extern T0* T1569f36(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.append_position_to_string */
extern void T1569f49(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T1569f39(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.position_to_text */
extern T0* T1568f36(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.append_position_to_string */
extern void T1568f49(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T1568f39(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position_to_text */
extern T0* T1566f38(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_position_to_string */
extern void T1566f53(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T1566f41(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position_to_text */
extern T0* T1565f38(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_position_to_string */
extern void T1565f53(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T1565f41(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position_to_text */
extern T0* T1558f41(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_position_to_string */
extern void T1558f56(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T1558f45(TC* ac, T0* C);
/* ET_CURRENT.position_to_text */
extern T0* T359f32(TC* ac, T0* C);
/* ET_CURRENT.append_position_to_string */
extern void T359f43(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T359f34(TC* ac, T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T1638f10(TC* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1638f15(TC* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1638f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1638f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1638f19(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1638f18(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1638f11(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T41f279(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T507f1303(TC* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1638c12(TC* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1638f13(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1638f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T1638f3(TC* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1638f6(TC* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1638f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T507f765(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T507f1719(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T507f1718(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T507f2288(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T507f1717(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T507f1716(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T507f1715(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T507f1714(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T507f1294(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T507f1713(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T507f1712(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T507f1711(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T507f1710(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1278f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1280f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1280f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1278f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1280f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T516f234(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T516f233(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T1276c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T507f1709(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T507f1708(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1275f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1277f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1277f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1275f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1277f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T516f232(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1845c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T507f984(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T507f1707(TC* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T516f231(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T507f1706(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T529f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].force */
extern void T1854f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1852f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1852f7(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T529f10(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1854c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T507f1705(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T507f1704(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1845f10(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T529f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T507f1703(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T507f1702(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T507f985(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T516f346(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T529f13(TC* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T529c11(TC* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T529f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1854f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1852c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T77f745(TC* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T319c81(TC* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T529f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T507f1701(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T507f1700(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T507f1699(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T507f1698(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T507f1697(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T507f1696(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1231f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1233f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1233f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1231f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1233f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T516f230(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T516f229(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T262c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T507f1695(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T507f1694(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1229f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1230f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1230f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1229f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1230f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T516f228(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1844c9(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T507f1693(TC* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T516f227(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T507f1692(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T261f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].force */
extern void T2035f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T2033f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T2033f7(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T261f11(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T2035c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T507f1691(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T507f1690(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1844f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T261f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T507f1689(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T507f1688(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T507f983(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T516f345(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T261c12(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T261f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T2035f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T2033c4(TC* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T261f9(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T507f1687(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T507f1686(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T507f1685(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T507f1684(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T507f1683(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T507f1682(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T507f1681(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T507f1680(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T1106f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T1108f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T1108f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1106f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T1108f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T507f982(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T507f1036(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T516f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_FREE_NAME.set_convert_keyword */
extern void T1592f56(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1592f55(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1592c54(TC* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T1592f53(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T77f742(TC* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T319c78(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T507f1679(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T516f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.set_convert_keyword */
extern void T1107f82(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T1107f81(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T1107c109(TC* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T1107f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T507f1678(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T516f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T1107c108(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T507f1677(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T507f1676(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T516f223(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T1107c107(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T507f1675(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_symbol_name */
extern T0* T516f222(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor_symbol */
extern T0* T1107c106(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T507f1674(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T516f221(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_xor */
extern T0* T1107c105(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T507f1673(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_symbol_name */
extern T0* T516f220(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies_symbol */
extern T0* T1107c104(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T507f1672(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T516f219(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_implies */
extern T0* T1107c103(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T507f1671(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_symbol_name */
extern T0* T516f218(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else_symbol */
extern T0* T1107c102(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T507f1670(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T516f217(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T1107c101(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T507f1669(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_symbol_name */
extern T0* T516f216(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or_symbol */
extern T0* T1107c100(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T507f1668(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T516f215(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_or */
extern T0* T1107c99(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T507f1667(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_symbol_name */
extern T0* T516f214(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then_symbol */
extern T0* T1107c98(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T507f1666(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T516f213(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T1107c97(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T507f1665(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_symbol_name */
extern T0* T516f212(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and_symbol */
extern T0* T1107c96(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T507f1664(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T516f211(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_and */
extern T0* T1107c95(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T507f1663(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T516f210(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_ge */
extern T0* T1107c94(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T507f1662(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T516f209(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_gt */
extern T0* T1107c93(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T507f1661(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T516f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_le */
extern T0* T1107c92(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T507f1660(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T516f207(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_lt */
extern T0* T1107c91(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T507f1659(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T516f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_power */
extern T0* T1107c90(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T507f1658(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T516f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_mod */
extern T0* T1107c89(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T507f1657(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T516f204(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_div */
extern T0* T1107c88(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T507f1656(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T516f203(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_divide */
extern T0* T1107c87(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T507f1655(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T516f202(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_times */
extern T0* T1107c86(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T507f1654(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T516f201(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_minus */
extern T0* T1107c85(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T507f1653(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T516f200(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_plus */
extern T0* T1107c84(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T507f1652(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_symbol_name */
extern T0* T516f199(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not_symbol */
extern T0* T1107c83(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T507f1651(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T516f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ALIAS_NAME.make_not */
extern T0* T1107c80(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T507f1650(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].force */
extern void T1109f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].fill_with */
extern void T1110f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].extend */
extern void T1110f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T1109f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].aliased_resized_area */
extern T0* T1110f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T507f1649(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.put_first */
extern void T979f12(TC* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_LIST.fixed_array */
extern T0* T979f3(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T507f1648(TC* ac, T0* C);
/* ET_AST_FACTORY.new_alias_name_list */
extern T0* T516f197(TC* ac, T0* C, T6 a1);
/* ET_ALIAS_NAME_LIST.make_with_capacity */
extern T0* T979c11(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T507f1647(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1210f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1211f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1211f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1210f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1211f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T516f196(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T507f1646(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T507f1645(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1224f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1225f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1225f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1224f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1225f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T507f1644(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T1111f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T1113f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T1113f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T1111f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T1113f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T516f195(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T507f1643(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T507f1642(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1212f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1214f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1214f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1212f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1214f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T516f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T507f1641(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T507f1640(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T1076f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T1078f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T1078f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T507f1639(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T1076f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T1078f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T507f1638(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T507f1637(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T507f1636(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T1331f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T1332f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PROCEDURE].extend */
extern void T1332f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1331f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1332f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T507f981(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T516f344(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T507f1635(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T507f1634(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T516f193(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T507f1633(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T507f1632(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T516f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1589f100(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T507f1631(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T507f1630(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T516f191(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T507f1629(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T507f1628(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T1339f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].fill_with */
extern void T1340f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUERY].extend */
extern void T1340f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T1339f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T1340f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T507f980(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T516f343(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T507f1627(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T507f1626(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T507f1625(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T507f1624(TC* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T516f189(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T507f1623(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T507f1622(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T507f1621(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T507f1620(TC* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T516f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1586f103(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T507f1619(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T507f1618(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T507f1617(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T507f1616(TC* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T516f186(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T507f1615(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T507f1614(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T507f1613(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T507f1612(TC* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T516f185(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T507f1611(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T507f1610(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T516f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T507f1609(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T507f1608(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T516f183(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T507f1607(TC* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T516f182(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T507f1606(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T507f1605(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T507f2286(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T681f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T681f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T681f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T681f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T681f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T681f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T681f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T681f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T681f33(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T681f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1495f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T681f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T681f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T681f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T681f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T681f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1495f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T507f978(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1590f32(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1590f112(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T521f39(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T521f103(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1589f53(TC* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1589f109(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T524f42(TC* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T524f106(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T507f1604(TC* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T516f180(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T507f1603(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T507f1602(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T507f1601(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T507f2285(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T681f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T681f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1495f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1495f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T507f1600(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T507f1599(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T507f2284(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T685f22(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T685f28(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T685f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T685f30(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T685f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T685f27(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T685f31(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T685f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T685f33(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T685f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1496f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T685f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T685f20(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T685f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T685f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T685f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1496f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T507f977(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T259f37(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T259f115(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1587f34(TC* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1587f106(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1586f35(TC* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1586f112(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T531f37(TC* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T531f109(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T453f36(TC* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T453f104(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T451f35(TC* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T451f101(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T442f35(TC* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T442f109(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T443f34(TC* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T443f97(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T507f1598(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T507f1597(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T507f1596(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T507f1595(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T507f2283(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T685f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T685f25(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1496f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1496f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T507f1594(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T507f1593(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T507f1592(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T507f1591(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T507f1590(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T507f1589(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1215f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1217f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1217f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1215f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1217f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T516f179(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T1216c4(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T77f755(TC* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T319c91(TC* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T1216f3(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T507f976(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T507f974(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T516f341(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T507f1035(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T507f1588(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T507f1587(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T507f1586(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T507f1585(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1218f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1220f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1220f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T1219f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].force */
extern void T1905f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].fill_with */
extern void T1904f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].extend */
extern void T1904f7(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T1219f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T1905c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T507f1584(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1218f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1220f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T516f178(TC* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T1219c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T1905f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].make_empty */
extern T0* T1904c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T507f1583(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T507f2282(TC* ac, T0* C);
extern T1 T507f2282ot1(TC* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T454f66(TC* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f20(TC* ac, volatile T11* C);
/* STRING_8.append_natural_64 */
extern void T17f84(TC* ac, T0* C, T11 a1);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T507f1582(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T507f1581(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T507f1580(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1366f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1368f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1368f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1366f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1368f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T516f177(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T507f1579(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1369f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1370f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1370f10(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1002f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].force */
extern void T1715f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].fill_with */
extern void T1714f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].extend */
extern void T1714f7(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T507f1578(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1369f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1370f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T516f176(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1002f11(TC* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1002c9(TC* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1002f9p1(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T507f1577(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T507f1576(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T507f1575(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T507f1574(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1166f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1168f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1168f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1166f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1168f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T516f175(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1584c9(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1584f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T507f1573(TC* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T516f174(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1583c8(TC* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1583f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T507f1572(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1169f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1171f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1171f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1169f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1171f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T516f173(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T507f1571(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1172f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1174f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1174f10(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T1173f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].force */
extern void T1897f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1896f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].extend */
extern void T1896f7(TC* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T1173f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1897c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T507f1570(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1172f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1174f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T516f172(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1173c8(TC* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1173f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1897f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1896c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T77f754(TC* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T319c90(TC* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1173f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T507f1569(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T507f1568(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T507f1567(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T507f1566(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T507f1565(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T507f1564(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1226f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1228f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1228f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1226f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1228f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T516f169(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T507f1563(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1180f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1182f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T1182f10(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T1181f17(TC* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T1181f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T507f1562(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1180f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1182f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T516f171(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T1181c16(TC* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1181f18(TC* ac, T0* C, T6 a1);
/* ET_CREATOR.tokens */
extern T0* T1181f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T507f1561(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T507f1560(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T507f1559(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T507f1558(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T507f1557(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T507f1556(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T507f1555(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T507f1554(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T507f1553(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T507f1552(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T507f1551(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T507f1550(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T507f1549(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T507f1548(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1183f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1185f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1185f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1183f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1185f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T507f1547(TC* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T1184f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].force */
extern void T1899f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CREATOR].fill_with */
extern void T1898f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].extend */
extern void T1898f7(TC* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T1184f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T1899c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T507f1546(TC* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T516f170(TC* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T1184c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T1899f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].make_empty */
extern T0* T1898c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T507f1545(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T507f1544(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T507f1543(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T507f1542(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1270f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1271f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1271f10(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T495f9(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T495f7(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T507f1541(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1270f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1271f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T516f168(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T495c8(TC* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T495f8p1(TC* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T77f762(TC* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T319c98(TC* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T495f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T507f1540(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T507f1539(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T507f1538(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T507f1537(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T507f1536(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T507f1535(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T507f1534(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T507f1533(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T507f1532(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T507f1531(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T507f1530(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T507f1529(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T507f1528(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T507f1527(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T507f1526(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T507f1525(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T507f1524(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T1141f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T1143f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T1143f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1141f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1143f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T516f167(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T1142f19(TC* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T1142c20(TC* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T1142f20p1(TC* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T1142f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T507f1523(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T507f1522(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T507f1521(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T1139f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T1140f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T1140f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1139f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1140f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T507f975(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T516f342(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T507f1520(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T507f1519(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T507f1518(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T507f1517(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T507f1516(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T507f1515(TC* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T516f166(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T1142c17(TC* ac);
/* ET_CLIENTS.make */
extern void T1142f17p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T507f1514(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T507f1293(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T507f1513(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T507f1512(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1221f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1223f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1223f10(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T1222f11(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T1222f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T507f1511(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1221f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1223f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T516f164(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1222c10(TC* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1222f12(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T507f1510(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T507f1509(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1201f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1203f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T1203f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1201f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1203f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T516f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T507f1508(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T507f1507(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T507f1506(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T507f1505(TC* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T516f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1581c8(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T77f1543(TC* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T319c61(TC* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1581f3(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T507f1504(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1204f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1205f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1205f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1204f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1205f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T507f1503(TC* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T494f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].force */
extern void T2047f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPORT].fill_with */
extern void T2045f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].extend */
extern void T2045f7(TC* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T494f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T2047c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T507f1502(TC* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T516f162(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T494c7(TC* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T494f7p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T2047f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].make_empty */
extern T0* T2045c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T77f750(TC* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T319c86(TC* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T494f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T507f1501(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T507f1500(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T507f1499(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T507f1498(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T507f1497(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T507f1496(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1341f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1343f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1343f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1341f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1343f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T516f161(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T507f1495(TC* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T516f160(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T507f1494(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1344f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1345f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1345f10(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T493f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].force */
extern void T1894f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].fill_with */
extern void T1893f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].extend */
extern void T1893f7(TC* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T493f7(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T1894c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T507f1493(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1344f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1345f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T516f159(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T493c8(TC* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T493f8p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T1894f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].make_empty */
extern T0* T1893c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T77f751(TC* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T319c87(TC* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T493f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T507f1492(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T507f1491(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T507f1490(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T507f1489(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T507f1488(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1322f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1323f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1323f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1322f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1323f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T516f158(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T507f1487(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1324f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1325f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1325f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T507f1486(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T507f1485(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1324f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1325f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T516f157(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T507f1484(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T507f1483(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1317f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T1318f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T1318f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1317f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1318f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T507f973(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T516f340(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T78f200(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T642f20(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T507f1482(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T507f1481(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T507f1480(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T507f1479(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T507f1478(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T507f1477(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T507f1476(TC* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T489f13(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T507f1475(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T507f1474(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T1319f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T1321f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T1321f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1319f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1321f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T507f1473(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T1320f7(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].force */
extern void T1915f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].fill_with */
extern void T1914f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].extend */
extern void T1914f7(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T1320f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T1915c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T507f1472(TC* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T516f156(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T1320c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T1915f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].make_empty */
extern T0* T1914c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T507f1471(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T507f1470(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T507f1469(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1311f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1313f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1313f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1311f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1313f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T516f155(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T507f1468(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T507f1467(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1151f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1153f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1153f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1151f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1153f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T516f154(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T516f152(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1579c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T507f1466(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T507f1465(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1154f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1156f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1156f10(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T507f2281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T1155f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1888f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1886f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1886f7(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T1155f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1888c2(TC* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T516f153(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1580c6(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1578f4(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1832f5(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1580f3(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1579f3(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T1155f7(TC* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T1155f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T507f1464(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T507f1463(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T507f1462(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1154f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1156f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T516f150(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T1155f14(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1155c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T1155f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1888f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1886c4(TC* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T1155f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T507f1461(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T507f1460(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T507f1459(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T507f1458(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T507f1457(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T507f1456(TC* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T516f151(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T507f1455(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T507f972(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T516f337(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1578c7(TC* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T516f336(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1832c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T507f1454(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T507f1453(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T507f1452(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T507f1451(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T507f1450(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T507f1449(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T507f1448(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1163f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1165f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1165f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1163f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1165f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T507f1447(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T507f1446(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T507f1445(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T507f1444(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T507f1443(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T507f1442(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T507f1441(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T507f1440(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T507f1439(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T507f1438(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T507f1437(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T507f1436(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T507f1435(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T507f1434(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T507f1433(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T507f1432(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T507f1431(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T507f1430(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T507f1429(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T507f1428(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T507f1427(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T507f1426(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T507f1425(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T507f1424(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T507f1423(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T507f1422(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T507f1421(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T507f1420(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T507f1419(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T507f1418(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T507f1417(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T507f1416(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T507f1415(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T507f1414(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T507f1413(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T507f1412(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T507f1411(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T507f1410(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T507f1409(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T507f1408(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T507f1407(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T507f1406(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T507f1405(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T507f1404(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1157f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1159f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1159f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T1158f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1158f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T507f1403(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1157f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1159f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T516f148(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1158c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1158f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1158f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T507f1402(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T507f1401(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T507f1400(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T507f1399(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T507f1398(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T507f1397(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T507f1396(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].force */
extern void T1160f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].fill_with */
extern void T1162f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].extend */
extern void T1162f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.put_first */
extern void T1161f13(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_RENAME_LIST.fixed_array */
extern T0* T1161f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T507f1395(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T1160f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].aliased_resized_area */
extern T0* T1162f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_renames */
extern T0* T516f147(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern T0* T1161c12(TC* ac, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T1161f12p1(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.make_with_capacity */
extern void T1161f12p0(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_RENAME_LIST.tokens */
extern T0* T1161f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T507f1394(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T507f1393(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T507f1392(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T507f1391(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T507f1390(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1360f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1362f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1362f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T1360f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].aliased_resized_area */
extern T0* T1362f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_comma */
extern T0* T516f146(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T507f1389(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].force */
extern void T1363f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].fill_with */
extern void T1365f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].extend */
extern void T1365f10(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put_first */
extern void T1364f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].force */
extern void T1918f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].fill_with */
extern void T1917f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].extend */
extern void T1917f7(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1364f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1918c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T507f1388(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T1363f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].aliased_resized_area */
extern T0* T1365f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_constraint_list */
extern T0* T516f145(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TYPE_CONSTRAINT_LIST.set_left_brace */
extern void T1364f13(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1364c11(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern void T1364f11p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1918f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1917c4(TC* ac, T6 a1);
/* ET_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1364f5(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T507f1387(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T507f1386(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T507f1385(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].force */
extern void T1357f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].fill_with */
extern void T1359f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].extend */
extern void T1359f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1357f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].aliased_resized_area */
extern T0* T1359f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T507f2280(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T1024f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T1024f15(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T1024f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T1024f7(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_rename_constraint */
extern T0* T516f144(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_RENAME_CONSTRAINT.make */
extern T0* T1577c8(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T507f971(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T507f1384(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T507f1383(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1236f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1237f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1237f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1236f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1237f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T516f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1576f85(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1576c84(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1576f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T77f730(TC* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T661c119(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T507f1382(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T507f1381(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T507f1380(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T507f1379(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T507f1378(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T507f1377(TC* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T516f142(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T958f86(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T958c85(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T507f1376(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T507f1375(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T507f1374(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1238f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1240f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1240f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1238f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1240f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T516f141(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T507f1373(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1241f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1242f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1242f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T642f29(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1576f86(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T958f87(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T642f9(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T642f29p1(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].force */
extern void T1856f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1855f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1855f9(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T642f8(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1856c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T507f1372(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1241f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1242f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T516f140(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T642f30(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T642c27(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T642f27p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1856f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1855c4(TC* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T642f6(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T507f1371(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T507f1370(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T507f2277(TC* ac, T0* C, T0* a1);
extern T1 T507f2277ot1(TC* ac, T0* a1);
extern T1 T507f2277ot2(TC* ac, T0* a1);
extern T1 T507f2277ot3(TC* ac, T0* a1);
extern T1 T507f2277ot4(TC* ac, T0* a1);
extern T1 T507f2277ot5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T1024f11(TC* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1165f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1165f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T1024f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1733f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1733f6(TC* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T78f317(TC* ac, T0* C, T0* a1);
extern T1 T78f317ot1(TC* ac, T0* a1);
/* ET_TYPE_CONSTRAINT_LIST.put */
extern void T1364f15(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_TYPE_CONSTRAINT_LIST.remove */
extern void T1364f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1918f4(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1917f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1917f9(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1576f88(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T642f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1856f3(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1855f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1855f8(TC* ac, T0* C, T6 a1);
/* ET_TYPE_RENAME_CONSTRAINT.set_type */
extern void T1577f9(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1598f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1578f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T507f1055(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T507f1055ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1832f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T507f1059(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T507f1059ot1(TC* ac, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T1155f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T507f1060(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1598f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1578f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1832f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1600f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1599f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T499f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1580f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T507f1062(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1579f5(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T507f1061(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T1155f11(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T1155f9(TC* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1578f5(TC* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1832f6(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1580f4(TC* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1579f4(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1600f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1599f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T499f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T1024f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T507f1369(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T507f1368(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T507f1367(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T507f1366(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T507f1365(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T507f1364(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T507f1363(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T1137f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T1138f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T1138f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T1137f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T1138f4(TC* ac, T0* C, T6 a1);
/* ET_CLASS.set_external_keyword */
extern void T78f314(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T78f313(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T78f328(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T78f312(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T507f969(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T78f330(TC* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T491f81(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T491f84(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T513f16(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T491f83(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T491f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_class */
extern void T63f215(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T78f329(TC* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T78f293(TC* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T78f294(TC* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T78f311(TC* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T78f310(TC* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T78f309(TC* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T78f308(TC* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T491f65(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T131f29(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T536f14(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T536f16(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T536f18(TC* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T536f19(TC* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T964c3(TC* ac);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T130f32(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T536f13(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T536f15(TC* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T536f17(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T507f1034(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T507f1043(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T507f1042(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T507f1041(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T59f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T852c960(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T41f282(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T491f31(TC* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T491f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T491f41(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T491f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T513f14(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T491f39(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T491f38(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T507f1362(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T507f1361(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T507f1360(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T507f1359(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].force */
extern void T1305f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].fill_with */
extern void T1307f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].extend */
extern void T1307f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T1305f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].aliased_resized_area */
extern T0* T1307f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_term_comma */
extern T0* T516f139(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T507f1358(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].force */
extern void T1303f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].fill_with */
extern void T1304f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM].extend */
extern void T1304f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T1303f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM].aliased_resized_area */
extern T0* T1304f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T516f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1575c9(TC* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1575f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T507f1357(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T507f1356(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T507f1355(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T507f1354(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T507f1353(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T507f1352(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T507f1351(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T507f1350(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].force */
extern void T1308f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].fill_with */
extern void T1310f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].extend */
extern void T1310f10(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.put_first */
extern void T1309f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].force */
extern void T1913f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].fill_with */
extern void T1912f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_TERM_ITEM].extend */
extern void T1912f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_TERM_LIST.fixed_array */
extern T0* T1309f3(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].default_create */
extern T0* T1913c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T507f1349(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T1308f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].aliased_resized_area */
extern T0* T1310f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_note_terms */
extern T0* T516f137(TC* ac, T0* C, T6 a1);
/* ET_NOTE_TERM_LIST.make_with_capacity */
extern T0* T1309c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM_ITEM].make */
extern T0* T1913f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM_ITEM].make_empty */
extern T0* T1912c4(TC* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T507f1348(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].force */
extern void T1300f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].fill_with */
extern void T1302f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_ITEM].extend */
extern void T1302f10(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_note_semicolon */
extern T0* T516f135(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T507f1347(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T507f1346(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T1300f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_ITEM].aliased_resized_area */
extern T0* T1302f4(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_note */
extern T0* T516f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_NOTE.make */
extern T0* T1573c5(TC* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T507f1345(TC* ac, T0* C);
/* ET_AST_FACTORY.new_note */
extern T0* T516f136(TC* ac, T0* C, T0* a1);
/* ET_NOTE.make */
extern T0* T1574c5(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T507f1344(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T507f1343(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].force */
extern void T1297f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].fill_with */
extern void T1299f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_NOTE_LIST].extend */
extern void T1299f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T1297f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_NOTE_LIST].aliased_resized_area */
extern T0* T1299f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T507f1342(TC* ac, T0* C);
/* ET_NOTE_LIST.put_first */
extern void T1298f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].force */
extern void T1911f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].fill_with */
extern void T1910f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NOTE_ITEM].extend */
extern void T1910f7(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.fixed_array */
extern T0* T1298f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].default_create */
extern T0* T1911c2(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T507f1341(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T507f1340(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T507f1339(TC* ac, T0* C);
/* ET_AST_FACTORY.new_notes */
extern T0* T516f132(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_NOTE_LIST.set_note_keyword */
extern void T1298f14(TC* ac, T0* C, T0* a1);
/* ET_NOTE_LIST.make_with_capacity */
extern T0* T1298c12(TC* ac, T6 a1);
/* ET_NOTE_LIST.make_with_capacity */
extern void T1298f12p1(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_ITEM].make */
extern T0* T1911f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_ITEM].make_empty */
extern T0* T1910c4(TC* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T77f738(TC* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T319c74(TC* ac);
/* ET_NOTE_LIST.tokens */
extern T0* T1298f4(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T507f1338(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T507f1337(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T507f1336(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T507f1335(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T507f1334(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T507f1333(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T507f1332(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T507f1331(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T507f1330(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T507f1329(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T507f1328(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T507f1327(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T507f1326(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T507f1325(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T507f1324(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T507f1323(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T507f1322(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T507f1321(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T507f2271(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T1025f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T1025f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T1025f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T1025f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T1025f50(TC* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1734f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1734f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T1025f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T1025f41(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T1025f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T1025f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T1025f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T1025f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T1025f64(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T1025f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T1025f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T1025f20(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T1025f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T1025f39(TC* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T78f316(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T1025c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T1025f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T1025f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T1025f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T1025f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T1025f42(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1736f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1734c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1736c3(TC* ac);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T507f1320(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T507f2270(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T78f295(TC* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T78f327(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_note_clause */
extern void T78f326(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T78f325(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T78f324(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T78f323(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T78f322(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T78f321(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T78f320(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T507f1319(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T507f1318(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T507f1317(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T507f1316(TC* ac, T0* C);
/* ET_CLASS.set_first_note_clause */
extern void T78f319(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T507f1315(TC* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T78f318(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T507f1314(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T507f1267(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T1081f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T1083f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T1083f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T1081f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T1083f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T1079f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T1080f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T1080f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T1079f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T1080f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T1073f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T1075f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T1075f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T1073f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T1075f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T1070f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T1072f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T1072f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T1070f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T1072f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T1067f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T1069f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T1069f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T1067f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T1069f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T1065f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T1066f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T1066f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T1065f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T1066f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T1062f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T1064f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T1057f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T1059f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T1059f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T1057f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T1059f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T1054f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T1056f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T1052f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IDENTIFIER].aliased_resized_area */
extern T0* T1053f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T1049f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T1051f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T1051f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T1049f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T1051f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T1047f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T1048f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T1048f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T1047f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T1048f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T1041f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T1043f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T1043f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T1041f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T1043f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T1038f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T1040f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T1036f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T1037f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T1037f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T1036f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T1037f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T1031f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T1033f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T1033f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T1031f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T1033f4(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T1028f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T1030f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T1030f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T1028f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T1030f4(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T507f1266(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T507f1264(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T507f1292(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1800_1999 */
extern void T507f1291(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T507f1313(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T507f1290(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T507f1289(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T507f1288(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T507f1287(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T507f1286(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T507f1285(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T507f1284(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T507f1283(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T507f1282(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T507f1263(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T507f1281(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T507f1312(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T507f1301(TC* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T516f15(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T516f14(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T516f13(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1566f46(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1566c43(TC* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1566f50(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T507f1053(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T507f1058(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T1820f41(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T1820f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T1820f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T1820f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T1820f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T1820f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T1820f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T1820f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T1820f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T1820f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T1820f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T1820f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T1820f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T1820f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T1820f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T1820f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T1820f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T1820f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T1820f25(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T1820f28(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T1820f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T1820f45(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.strings */
extern T0* T507f1033(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T1820f37(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T507f1040(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T1820c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T1820f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T1820f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T1820f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T1820f33(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T2061c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T1820f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T1820f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T1820f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T1820f62(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T507f2306(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.append_substring_to_string */
extern void T1554f21(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_UNICODE_CHARACTER_BUFFER.item */
extern T2 T1554f11(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_item */
extern T3 T1554f10(TC* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1522f18(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T507f1032(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T507f1031(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T516f12(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1565f46(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1565c43(TC* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1565f50(TC* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T516f11(TC* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1564f72(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_binary_integer_constant */
extern T0* T507f1052(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1564c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1564f73(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.compute_natural_64_value */
extern void T507f2305(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T516f10(TC* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1563f72(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_octal_integer_constant */
extern T0* T507f1051(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1563c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1563f73(TC* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T516f9(TC* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1562f72(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_hexadecimal_integer_constant */
extern T0* T507f1050(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1562c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1562f73(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T59f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T41f278(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T59f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T41f277(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T516f8(TC* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1561f72(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_underscored_integer_constant */
extern T0* T507f1049(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1561c65(TC* ac, T0* a1, T11 a2, T1 a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1561f73(TC* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T516f7(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T454f74(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_regular_integer_constant */
extern T0* T507f1048(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T59f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T41f266(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T59f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T41f276(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T59f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T41f275(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T59f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T41f274(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T59f273(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T41f273(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T59f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T41f272(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T59f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T41f271(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T516f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1560f58(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T507f1047(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1560c52(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1560f59(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_utf8_literal */
extern T0* T507f1044(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T507f795(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.utf8_text */
extern T0* T507f793(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.append_utf8_text_to_string */
extern void T507f2304(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T1554f16(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_utf8_substring_to_string */
extern void T1522f16(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.utf8_text_substring */
extern T0* T507f790(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_utf8_text_substring_to_string */
extern void T507f2303(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T516f5(TC* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1559f54(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T507f1046(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1559c48(TC* ac, T0* a1, T0* a2, T1 a3);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1559f55(TC* ac, T0* C);
/* NATURAL_64.to_natural_32 */
extern T10 T11f21(TC* ac, volatile T11* C);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T516f4(TC* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T1558f49(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T1558c47(TC* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T1558f53(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T507f1311(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T59f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T41f270(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T59f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T41f269(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T59f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T41f268(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T59f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T41f267(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T516f3(TC* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1557f55(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T507f1045(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1557c49(TC* ac, T0* a1, T3 a2, T1 a3);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1557f56(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T507f1310(TC* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T516f131(TC* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1571f51(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1571c49(TC* ac, T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1571f55(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T59f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T41f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T59f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T41f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T507f782(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T507f1309(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T516f130(TC* ac, T0* C, T3 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1570f50(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T507f1302(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T507f1308(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T507f1307(TC* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T516f129(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T319f60(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T507f936(TC* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T516f128(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T319c55(TC* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T507f934(TC* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T516f127(TC* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T1032f24(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T516f126(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T516f125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T507f930(TC* ac, T0* C);
/* ET_ECF_CLUSTER.use_obsolete_syntax */
extern T1 T870f26(TC* ac, T0* C);
/* ET_NONE_GROUP.use_obsolete_syntax */
extern T1 T498f3(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.use_obsolete_syntax */
extern T1 T316f2(TC* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T516f124(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T77f763(TC* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T319c99(TC* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T516f123(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T516f122(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T516f121(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T77f761(TC* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T319c97(TC* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T516f120(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T77f760(TC* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T319c96(TC* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T516f119(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T77f759(TC* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T319c95(TC* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T516f118(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T319c54(TC* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T516f117(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T516f116(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T77f758(TC* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T319c94(TC* ac);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T516f115(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T507f919(TC* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T516f114(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T516f113(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T516f112(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T77f756(TC* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T319c92(TC* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T516f111(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T516f110(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T1058f56(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T1058c60(TC* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T516f109(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T516f108(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T516f107(TC* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T359f41(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T516f106(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T516f105(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T77f753(TC* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T319c89(TC* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T516f104(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T516f103(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T516f102(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T516f101(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T319c65(TC* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T516f100(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T516f99(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T516f98(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T77f749(TC* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T319c85(TC* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T516f97(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T516f96(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T77f748(TC* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T319c84(TC* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T516f95(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T516f94(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T77f746(TC* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T319c82(TC* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T516f93(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T516f92(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T1068f20(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T1068c19(TC* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T1068f21(TC* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T1068f22(TC* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T1068f7(TC* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T516f91(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T516f90(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1569f42(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1569c41(TC* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1569f46(TC* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1569f47(TC* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T516f89(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T516f88(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T516f87(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T516f86(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T516f85(TC* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T1029f14(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T516f84(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T516f83(TC* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T1074f33(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T1074c32(TC* ac);
/* ET_VOID.make_token */
extern void T1074f37(TC* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T1074f38(TC* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T1074f12(TC* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T516f82(TC* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1568f42(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T516f81(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T516f80(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.some_keyword */
extern T0* T77f739(TC* ac, T0* C);
/* ET_KEYWORD.make_some */
extern T0* T319c75(TC* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T516f79(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T507f880(TC* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T516f78(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T505f131(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T1820f42(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T189f135(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T189c135(TC* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T189f136(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T1820f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T1820f24(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T505f134(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T505f93(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T505f135(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T505f206(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T505f133(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T505f132(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T507f1054(TC* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T516f77(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T516f76(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T516f75(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T516f74(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T516f73(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T1058c59(TC* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T516f72(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T516f71(TC* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T1058c58(TC* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T516f70(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T516f69(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T516f68(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T516f67(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T516f66(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T516f65(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T77f733(TC* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T319c69(TC* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T516f64(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T516f63(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T516f2(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T507f1306(TC* ac, T0* C, T3 a1, T3 a2);
/* ET_AST_FACTORY.new_or_else_symbol */
extern T0* T516f62(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T1071f133(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_or_else_symbol */
extern T0* T1071c150(TC* ac);
/* ET_AST_FACTORY.new_and_then_symbol */
extern T0* T516f61(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_then_symbol */
extern T0* T1071c149(TC* ac);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T516f60(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T516f59(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T516f58(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T516f57(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T516f56(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T661f99(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T516f55(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T1071c148(TC* ac);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T516f54(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T516f53(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T1071c147(TC* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T516f52(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T1071c146(TC* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T516f51(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T661c105(TC* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T516f50(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T661c104(TC* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T516f49(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T1071c145(TC* ac);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T516f1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T507f773(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T507f1305(TC* ac, T0* C);
/* KL_CHARACTER_BUFFER.unicode_item */
extern T3 T1522f7(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T507f1304(TC* ac, T0* C, T3 a1);
/* ET_AST_FACTORY.new_xor_symbol */
extern T0* T516f48(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_xor_symbol */
extern T0* T1071c144(TC* ac);
/* ET_AST_FACTORY.new_or_symbol */
extern T0* T516f47(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_or_symbol */
extern T0* T1071c143(TC* ac);
/* ET_AST_FACTORY.new_not_symbol */
extern T0* T516f46(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_not_symbol */
extern T0* T1071c142(TC* ac);
/* ET_AST_FACTORY.new_implies_symbol */
extern T0* T516f45(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_implies_symbol */
extern T0* T1071c141(TC* ac);
/* ET_AST_FACTORY.new_and_symbol */
extern T0* T516f44(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_and_symbol */
extern T0* T1071c140(TC* ac);
/* ET_AST_FACTORY.new_close_repeat_symbol */
extern T0* T516f43(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_open_repeat_symbol */
extern T0* T516f42(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_bar_symbol */
extern T0* T516f41(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_there_exists_symbol */
extern T0* T516f40(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_for_all_symbol */
extern T0* T516f39(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.for_all_symbol */
extern T0* T77f724(TC* ac, T0* C);
/* ET_SYMBOL.make_for_all */
extern T0* T661c113(TC* ac);
/* ET_AST_FACTORY.new_at_symbol */
extern T0* T516f38(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T516f37(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T661c102(TC* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T516f36(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T516f35(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T516f34(TC* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T662f131(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T516f33(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T516f32(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T516f31(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T516f30(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T516f29(TC* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T1082f47(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T516f28(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T516f27(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T516f26(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T77f720(TC* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T661c109(TC* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T516f25(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T77f719(TC* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T1077c4(TC* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T1077f5(TC* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T1077f3(TC* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T516f24(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T77f718(TC* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T661c108(TC* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T516f23(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T516f22(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T516f21(TC* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T516f20(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T1071c137(TC* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T516f19(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T1071c136(TC* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T516f18(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T1071c135(TC* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T516f17(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T1071c134(TC* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T516f16(TC* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T1071c132(TC* ac);
/* ET_EIFFEL_PARSER.unicode_text_item */
extern T3 T507f772(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T507f1280(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T59f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T41f265(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T507f1300(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T507f734(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T507f1279(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T507f1072(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.count */
extern T6 T1554f6(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.as_special */
extern T0* T1554f12(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.fill */
extern void T1011f26(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.put */
extern void T1554f17(TC* ac, T0* C, T2 a1, T6 a2);
/* CHARACTER_8.to_character_8 */
extern T2 T2f33(TC* ac, volatile T2* C);
/* KL_STRING_INPUT_STREAM.end_of_input */
extern T1 T1552f1(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_stream */
extern T6 T1554f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_iso_8859_1_substring */
extern void T1554f20(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* STRING_32.put */
extern void T18f38(TC* ac, T0* C, T3 a1, T6 a2);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_utf8_stream */
extern T6 T1554f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* YY_UNICODE_FILE_BUFFER.compact_left */
extern void T1011f28(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.move_left */
extern void T1554f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.subcopy */
extern void T18f39(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_UNICODE_CHARACTER_BUFFER.resize */
extern void T1554f18(TC* ac, T0* C, T6 a1);
/* YY_UNICODE_FILE_BUFFER.default_capacity */
extern T6 T1011f19(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_index */
extern void T1011f25(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T507f733(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T507f732(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T507f1278(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_invalid_unicode_character_error */
extern void T507f1277(TC* ac, T0* C, T10 a1);
/* KL_UNICODE_CHARACTER_BUFFER.item_code */
extern T10 T1554f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_at_beginning_of_line */
extern T6 T507f722(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T507f699(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T507f1262(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T507f1271(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T507f1298(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T507f2268(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T507f2299(TC* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1387f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1387f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1385f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1385f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1382f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1382f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].keep_head */
extern void T1379f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].set_count */
extern void T1379f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].keep_head */
extern void T1376f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].set_count */
extern void T1376f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1373f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T1373f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1370f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1370f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1368f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1368f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].keep_head */
extern void T1365f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].set_count */
extern void T1365f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].keep_head */
extern void T1362f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].set_count */
extern void T1362f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].keep_head */
extern void T1359f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].set_count */
extern void T1359f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].keep_head */
extern void T1356f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].set_count */
extern void T1356f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1354f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1354f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1351f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1351f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].keep_head */
extern void T1348f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].set_count */
extern void T1348f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1345f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1345f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1343f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1343f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].keep_head */
extern void T1340f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].set_count */
extern void T1340f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].keep_head */
extern void T1338f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].set_count */
extern void T1338f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1335f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1335f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T1332f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T1332f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T1330f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T1330f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1328f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1328f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1325f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1325f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1323f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1323f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T1321f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T1321f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T1318f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T1318f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1316f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1316f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1313f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1313f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].keep_head */
extern void T1310f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].set_count */
extern void T1310f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].keep_head */
extern void T1307f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].set_count */
extern void T1307f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].keep_head */
extern void T1304f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].set_count */
extern void T1304f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].keep_head */
extern void T1302f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].set_count */
extern void T1302f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].keep_head */
extern void T1299f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].set_count */
extern void T1299f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1296f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1296f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1294f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1294f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1291f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1291f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1288f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1288f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1285f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1285f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1280f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1280f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1277f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1277f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1274f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1274f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1271f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1271f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1269f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1269f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1266f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1266f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1264f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1264f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].keep_head */
extern void T1261f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].set_count */
extern void T1261f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].keep_head */
extern void T1258f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].set_count */
extern void T1258f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].keep_head */
extern void T1256f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].set_count */
extern void T1256f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].keep_head */
extern void T1254f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].set_count */
extern void T1254f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].keep_head */
extern void T1252f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].set_count */
extern void T1252f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T1250f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T1250f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1248f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1248f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T1245f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T1245f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1242f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1242f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1240f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1240f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1237f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1237f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1233f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1233f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1230f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1230f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1228f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1228f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1225f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1225f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1223f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1223f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1220f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1220f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1217f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1217f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1214f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1214f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1211f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1211f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T1209f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T1209f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T1207f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T1207f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1205f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1205f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1203f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T1203f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1200f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1200f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1197f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1197f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T1194f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T1194f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T1191f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T1191f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1188f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1188f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1185f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1185f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1182f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T1182f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T1179f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T1179f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1176f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1176f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1174f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1174f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1171f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1171f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1168f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1168f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].keep_head */
extern void T1162f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].set_count */
extern void T1162f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1159f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1159f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1156f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1156f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1153f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1153f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T1150f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].set_count */
extern void T1150f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T1148f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T1148f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T1145f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T1145f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T1143f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T1143f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T1140f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T1140f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T1138f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T1138f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T1136f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T1136f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T1133f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T1133f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T1130f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T1130f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T1127f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T1127f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T1124f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T1124f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T1121f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T1121f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T1119f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T1119f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T1116f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T1116f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T1113f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T1113f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].keep_head */
extern void T1110f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].set_count */
extern void T1110f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T1108f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T1108f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T1105f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T1105f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T1103f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T1103f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T1100f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T1100f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T1097f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T1097f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1095f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T1095f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1093f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1093f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T1091f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T1091f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T1089f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T1089f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T1086f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T1086f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T1083f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T1083f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T1080f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T1080f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T1078f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T1078f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T1075f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T1075f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T1072f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T1072f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T1069f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T1069f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T1066f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T1066f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T1064f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T1064f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T1061f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T1061f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T1059f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T1059f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T1056f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T1056f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].keep_head */
extern void T1053f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].set_count */
extern void T1053f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T1051f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T1051f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T1048f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T1048f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T1046f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T1046f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T1043f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T1043f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T1040f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T1040f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T1037f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T1037f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T1033f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T1033f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T1030f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T1030f9(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T507f1265(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T507f1070(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_file */
extern void T1011f23(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_FILE_BUFFER.set_file_with_size */
extern void T1011f27(TC* ac, T0* C, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T1011f29(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.flush */
extern void T1011f29p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T507f1261(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T1023f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T1023f17(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T1016f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T1015f9(TC* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T1012f10(TC* ac, T0* C);
/* YY_UNICODE_FILE_BUFFER.set_end_of_file */
extern void T1011f24(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T507f1261p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T507f1261p0(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T507f1261p2(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T42f43(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T42f51(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T42f57(TC* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T507f752(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T42f17(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T507f1029(TC* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T78f288(TC* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T78f158(TC* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T138f7(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T138f8(TC* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T507f751(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T507f1255(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T507f1254(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T509f14(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T509f16(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T59f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T852c918(TC* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1430f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1430f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T513f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T513f39(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1430f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T513f40(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1430f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T513f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1430f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T513f37(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T1430f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1430f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T1430f8(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T59f26(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T41f218(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T41f26(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T509f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1388f13(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1738f35(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1738f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1738f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1738f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1738f43(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1738f42(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1738f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1980f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1980f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T513f36(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T513f22(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1388f17(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T509f20(TC* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1390f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T509f19(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1391f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].wipe_out */
extern void T1741f12(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].keep_head */
extern void T1981f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].set_count */
extern void T1981f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].move_all_cursors_after */
extern void T1741f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_next_cursor */
extern void T1983f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].set_after */
extern void T1983f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_constraint_base_types */
extern void T1391f28(TC* ac, T0* C, T0* a1);
extern T1 T1391f28ot1(TC* ac, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.put_first */
extern void T1743f15(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.fixed_array */
extern T0* T1743f6(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].default_create */
extern T0* T1982c3(TC* ac);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_with_capacity */
extern T0* T1743c14(TC* ac, T0* a1, T6 a2);
/* ET_BASE_TYPE_CONSTRAINT_LIST.make_empty_with_capacity */
extern void T1743f16(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1982f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE_CONSTRAINT].make_empty */
extern T0* T1981c5(TC* ac, T6 a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.tokens */
extern T0* T1743f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].item */
extern T0* T1741f6(TC* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_types */
extern void T1576f90(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].first */
extern T0* T1741f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.base_type_constraint */
extern T0* T1391f19(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1391f14(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_recursive_formal_constraints */
extern void T1391f27(TC* ac, T0* C, T0* a1);
extern T1 T1391f27ot1(TC* ac, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_recursive_formal_constraints */
extern void T1576f89(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].item */
extern T10 T1742f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].replace */
extern void T1742f12(TC* ac, T0* C, T10 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER1.add_n_flags_to_list */
extern void T1391f30(TC* ac, T0* C, T10 a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [NATURAL_32].force_last */
extern void T1742f13(TC* ac, T0* C, T10 a1);
/* DS_ARRAYED_LIST [NATURAL_32].resize */
extern void T1742f16(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_capacity */
extern T6 T1742f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].extendible */
extern T1 T1742f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].wipe_out */
extern void T1742f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [NATURAL_32].move_all_cursors_after */
extern void T1742f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_next_cursor */
extern void T1984f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].set_after */
extern void T1984f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.propagate_recursive_formal_dependencies */
extern void T1391f26(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1391f25(TC* ac, T0* C, T0* a1);
extern T1 T1391f25ot1(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T59f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T852c1032(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T59f75(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T41f353(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T41f75(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T59f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T852c1031(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T59f74(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T41f352(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T41f74(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_base_type_dependencies */
extern void T1391f23(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.initalize_formal_dependencies */
extern void T1391f22(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T509f18(TC* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T78f281(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T78f280(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1389f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1389f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1389f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1389f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1389f51(TC* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T986f8(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T986f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1389f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1389f49(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1739f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1739f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1389f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1389f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1389f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1739f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1389f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1389f39(TC* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T318f8(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T987f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T986f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T986f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_for_iteration */
extern T0* T1389f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1389f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1389f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1389f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T1389f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1739f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].start */
extern void T1389f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1389f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1389f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1739f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1389f24(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T509f23(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T76f69(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T76f81(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T500f11(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T260f81(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T260f80(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T260f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T2025f10(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1576f78(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T958f80(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1846f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1600f51(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1599f54(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1598f52(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1596f8(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T248f49(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T499f48(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T78f215(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T76f89(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1576f74(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1576f80(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f80ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1600f56(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1599f59(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1599f103(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1599f102(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1598f57(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1598f104(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1598f68(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T499f53(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T499f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T958f76(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T958f82(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f82ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1600f50(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1600f68(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1599f53(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1599f70(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1598f51(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1598f67(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T248f48(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T248f54(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f54ot1(TC* ac, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T499f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T499f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T78f214(TC* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T78f243(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T2026f10(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T642f18(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T246f19(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T318f5(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1389f45(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1389f60(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1389f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1389f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1389f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1389f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1389f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1389f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1389f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1389f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1389f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1389f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T987f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T986f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1389f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1389f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1389f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1389f35(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T59f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T852c925(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T59f32(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T41f225(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T41f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1389f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1389f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1389f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1389f55(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr2a_error */
extern void T59f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr2a */
extern T0* T852c924(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T59f31(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr2a_error */
extern void T41f224(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr2_error */
extern T1 T41f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_frozen */
extern T1 T78f196(TC* ac, T0* C);
/* ET_CLASS.has_frozen_mark */
extern T1 T78f207(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T59f223(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T852c923(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T59f30(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T41f223(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T41f30(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T59f221(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T852c921(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T59f28(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T41f221(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T41f28(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T59f220(TC* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T852c920(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T59f27(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T41f220(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T41f27(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T59f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T852c919(TC* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T41f219(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T489f7(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T509f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T513f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1388f12(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T509f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.system_object_type */
extern T0* T192f87(TC* ac, T0* C);
/* ET_SYSTEM.system_object_type */
extern T0* T46f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.system_object_type */
extern T0* T63f90(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T509f11(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T509f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1388f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1388f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1388f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1388f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1738f33(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1738f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1738f23(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1738f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1738f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1738f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1738f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1738f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1738f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1388f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1388f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1738f37(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1738f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1738f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1738f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1738f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1738f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1738f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1738f29(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1738f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1738f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1738f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1738f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1388f9(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1388f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1738f21(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T509f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T78f267(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T509c13(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1391c20(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].make */
extern T0* T1742c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [NATURAL_32].set_internal_cursor */
extern void T1742f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [NATURAL_32].new_cursor */
extern T0* T1742f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [NATURAL_32].make */
extern T0* T1984c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1741c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].set_internal_cursor */
extern void T1741f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_BASE_TYPE_CONSTRAINT].new_cursor */
extern T0* T1741f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_BASE_TYPE_CONSTRAINT].make */
extern T0* T1983c5(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1391f20p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T1390c8(TC* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1390f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1389c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1389f46(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1389f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1389f72(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1389f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1739c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1389f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1389f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1389f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1389f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1388c11(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1388f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1738c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1738f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1738f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1738f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1738f32(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1980c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1738f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1738f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1738f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1738f56(TC* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T509f13p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T509f9(TC* ac, T0* C);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T509f10(TC* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T78f279(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T512f20(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T512f24(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.post_action */
extern void T512f32(TC* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T78f284(TC* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T78f283(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T1025f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T1025f48(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T512f31(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T512f17(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T270f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T293f12(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.wipe_out */
extern void T292f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].wipe_out */
extern void T715f11(TC* ac, T0* C);
/* ET_ITERATION_ITEM_SCOPE.wipe_out */
extern void T290f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].wipe_out */
extern void T710f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_for_iteration */
extern T0* T289f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_key */
extern T0* T289f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].wipe_out */
extern void T289f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].slots_wipe_out */
extern void T289f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].clashes_wipe_out */
extern void T289f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].key_storage_wipe_out */
extern void T289f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_storage_wipe_out */
extern void T289f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].move_all_cursors_after */
extern void T289f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].forth */
extern void T289f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_forth */
extern void T289f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].add_traversing_cursor */
extern void T289f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].remove_traversing_cursor */
extern void T289f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].item_for_iteration */
extern T0* T289f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_item */
extern T0* T289f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T289f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_after */
extern T1 T289f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].after */
extern T1 T706f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].start */
extern void T289f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_start */
extern void T289f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].cursor_off */
extern T1 T289f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].off */
extern T1 T706f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].is_empty */
extern T1 T289f40(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T287f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T705f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T286f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T286f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T286f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T286f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T286f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T286f46(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T699f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T699f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T286f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T286f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T286f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T699f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T286f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T286f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T286f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T286f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T286f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T699f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T286f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T286f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T286f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T699f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T286f27(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_error */
extern void T1268f35(TC* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T1268f34(TC* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T1268f12(TC* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T1268f13(TC* ac, T0* C, T6 a1);
/* ET_CLASS.same_as_base_class */
extern T1 T78f71(TC* ac, T0* C);
/* ET_INVARIANTS.reset_validity_checked */
extern void T1268f33(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T270f81(TC* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T277f23(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T512f30(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T512f36(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T1421f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T1421f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T1421f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T1421f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T1421f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T1421f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1794f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1794f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T1421f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T1421f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T1421f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1794f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T1421f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T512f40(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T270f87(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T1421f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T1421f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T1421f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T1421f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1794f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T1421f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T1421f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T1421f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1794f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T1421f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T270f84(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1590f93(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T259f95(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T521f83(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1589f87(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T524f84(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1587f86(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1586f89(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T531f87(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T453f87(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T451f86(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T442f88(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T443f83(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1590f92(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T259f94(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T521f82(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1589f86(TC* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T524f83(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1587f85(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1586f88(TC* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T531f86(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T453f86(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T451f85(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T442f87(TC* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T443f82(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T270f88(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].wipe_out */
extern void T296f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_wipe_out */
extern void T296f57(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_wipe_out */
extern void T296f56(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_wipe_out */
extern void T296f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_wipe_out */
extern void T296f54(TC* ac, T0* C);
/* SPECIAL [ET_ASSERTIONS].keep_head */
extern void T721f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].set_count */
extern void T721f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].unset_found_item */
extern void T296f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].move_all_cursors_after */
extern void T296f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_next_cursor */
extern void T720f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_after */
extern void T720f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].forth */
extern void T296f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_forth */
extern void T296f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].add_traversing_cursor */
extern void T296f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_position */
extern void T720f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].remove_traversing_cursor */
extern void T296f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_item */
extern T6 T296f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_last */
extern T1 T296f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_is_last */
extern T1 T296f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_empty */
extern T1 T296f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_for_iteration */
extern T0* T296f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_item */
extern T0* T296f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_item */
extern T0* T296f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].start */
extern void T296f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_start */
extern void T296f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_off */
extern T1 T296f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].off */
extern T1 T720f5(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T270f90(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].first */
extern T0* T296f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].force_last */
extern void T296f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_put */
extern void T296f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_put */
extern void T296f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_put */
extern void T296f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_item */
extern T6 T296f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].hash_position */
extern T6 T296f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].resize */
extern void T296f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_resize */
extern void T296f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].special_integer_ */
extern T0* T296f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_resize */
extern void T296f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_resize */
extern void T296f60(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].aliased_resized_area */
extern T0* T724f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTIONS].aliased_resized_area */
extern T0* T721f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_item */
extern T0* T296f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_resize */
extern void T296f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_modulus */
extern T6 T296f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_capacity */
extern T6 T296f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_put */
extern void T296f46(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].force */
extern void T724f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].fill_with */
extern void T721f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].extend */
extern void T721f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].search_position */
extern void T296f45(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T270f89(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.other_precursors */
extern T0* T1590f9(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.other_precursors */
extern T0* T259f9(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.other_precursors */
extern T0* T521f17(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.other_precursors */
extern T0* T1589f10(TC* ac, T0* C);
/* ET_DO_PROCEDURE.other_precursors */
extern T0* T524f19(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.other_precursors */
extern T0* T1587f9(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.other_precursors */
extern T0* T1586f10(TC* ac, T0* C);
/* ET_DO_FUNCTION.other_precursors */
extern T0* T531f12(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.other_precursors */
extern T0* T453f10(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.other_precursors */
extern T0* T451f9(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.other_precursors */
extern T0* T442f8(TC* ac, T0* C);
/* ET_ATTRIBUTE.other_precursors */
extern T0* T443f8(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T270f76(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T305f21(TC* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T305f20(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T270f48(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.validity_checked */
extern T1 T453f23(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.validity_checked */
extern T1 T451f21(TC* ac, T0* C);
/* ET_ATTRIBUTE.validity_checked */
extern T1 T443f19(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.validity_checked */
extern T1 T442f26(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.validity_checked */
extern T1 T259f29(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.validity_checked */
extern T1 T1590f27(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.validity_checked */
extern T1 T1589f27(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.validity_checked */
extern T1 T1587f26(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.validity_checked */
extern T1 T1586f29(TC* ac, T0* C);
/* ET_DO_FUNCTION.validity_checked */
extern T1 T531f28(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.validity_checked */
extern T1 T521f13(TC* ac, T0* C);
/* ET_DO_PROCEDURE.validity_checked */
extern T1 T524f15(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T512f38(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T512f18(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T270f86(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T1327f23(TC* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T1327f22(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T270f85(TC* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1590f94(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T521f85(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1589f88(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T524f86(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T512f35(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T1422f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T1422f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T1422f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T1422f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T1422f48(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T1422f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1795f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1795f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T1422f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T1422f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T1422f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1795f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T1422f52(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T512f39(TC* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T1422f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T1422f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T1422f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T1422f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1795f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T1422f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T1422f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T1422f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1795f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T1422f21(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T270f83(TC* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T1327f21(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T305f22(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T259f96(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1587f87(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1586f90(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T531f88(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T453f88(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T451f87(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T442f89(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T443f84(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.set */
extern void T1423f6(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T512f15(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_signatures_validity */
extern void T512f29(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_signature_validity */
extern void T512f34(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.resolve_feature_adaptations */
extern void T512f33(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.resolve_inherited_features */
extern void T512f37(TC* ac, T0* C, T0* a1);
extern T1 T512f37ot1(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_parents_validity */
extern void T512f28(TC* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1420f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.pre_action */
extern void T512f27(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T69f108(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_class_postponed */
extern void T265f112(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T512f26(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_checking_implementation */
extern void T78f285(TC* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T512f23(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T78f270(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T512c19(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T512f21(TC* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1423c5(TC* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1423f4(TC* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1423f3(TC* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T1422c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T1422f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T1422f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1795c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T1422f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T1422f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T1422f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T1422f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T1421c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T1421f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T1421f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1794c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T1421f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T1421f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T1421f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T1421f39(TC* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1420c6(TC* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1420f6p1(TC* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1420f4(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.feature_name_tester */
extern T0* T512f14(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T512f25(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T512f16(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T270c75(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern T0* T301c9(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.make */
extern void T301f9p1(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T300c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].set_internal_cursor */
extern void T300f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].new_cursor */
extern T0* T300f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T735c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make */
extern T0* T733f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].make_empty */
extern T0* T734c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_ADAPTED_CLASS]].default_create */
extern T0* T733c3(TC* ac);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].make */
extern T0* T297c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].set_internal_cursor */
extern void T297f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NOTE_TERM].new_cursor */
extern T0* T297f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NOTE_TERM].make */
extern T0* T730c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].make */
extern T0* T727f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NOTE_TERM].make_empty */
extern T0* T729c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NOTE_TERM].default_create */
extern T0* T727c3(TC* ac);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_map */
extern T0* T296c38(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_with_equality_testers */
extern void T296f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_sparse_container */
extern void T296f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].set_internal_cursor */
extern void T296f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_cursor */
extern T0* T296f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].make */
extern T0* T720c7(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_slots */
extern void T296f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_clashes */
extern void T296f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_key_storage */
extern void T296f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_item_storage */
extern void T296f65(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].make */
extern T0* T724f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].make_empty */
extern T0* T721c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].default_create */
extern T0* T724c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T295c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T295f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T295f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T719c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T718f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T717c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T718c3(TC* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T294c3(TC* ac);
/* ET_INLINE_SEPARATE_ARGUMENT_SCOPE.make */
extern T0* T292c6(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T715c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T715f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T715f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1499c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_map */
extern T0* T291c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_with_equality_testers */
extern void T291f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_sparse_container */
extern void T291f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].set_internal_cursor */
extern void T291f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].new_cursor */
extern T0* T291f24(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T712c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_slots */
extern void T291f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_clashes */
extern void T291f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_key_storage */
extern void T291f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_INLINE_SEPARATE_ARGUMENT].make_item_storage */
extern void T291f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T697f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T696c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T697c3(TC* ac);
/* ET_ITERATION_ITEM_SCOPE.make */
extern T0* T290c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].make */
extern T0* T710c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T710f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ITERATION_COMPONENT].new_cursor */
extern T0* T710f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ITERATION_COMPONENT].make */
extern T0* T1498c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_map */
extern T0* T289c43(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_with_equality_testers */
extern void T289f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_sparse_container */
extern void T289f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].set_internal_cursor */
extern void T289f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].new_cursor */
extern T0* T289f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make */
extern T0* T706c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_slots */
extern void T289f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_clashes */
extern void T289f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_key_storage */
extern void T289f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ITERATION_COMPONENT].make_item_storage */
extern void T289f59(TC* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T288c8(TC* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T288f6(TC* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T287c6(TC* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T705c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T705f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T705f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1497c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T286c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T286f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T286f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T286f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T286f26(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T699c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T286f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T286f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T286f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T286f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T285c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T285f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T285f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T698c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T284c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].set_internal_cursor */
extern void T284f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].new_cursor */
extern T0* T284f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T695c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make */
extern T0* T692f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].make_empty */
extern T0* T694c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ET_QUERY, ET_CLASS, ET_NESTED_TYPE_CONTEXT]].default_create */
extern T0* T692c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T283c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T283f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T283f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T691c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T688f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T690c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T688c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T282c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T282f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T282f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T687c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T684f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T686c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T684c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T281c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T281f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T281f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T683c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T680f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T682c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T680c3(TC* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T280c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T280f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T280f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T679c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T677f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T678c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T677c3(TC* ac);
/* ET_INVARIANTS.implementation_class */
extern T0* T1268f1(TC* ac, T0* C);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T270f61(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T277c22(TC* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T277f16(TC* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T277f22p1(TC* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T270f75p1(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T512f13(TC* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T512f22(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T515f2(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T511f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1411f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1411f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1411f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1411f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1411f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1411f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1783f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1783f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1783f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1411f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1411f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1411f28(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T511f16(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T511f20(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T511f23(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3b_error */
extern void T59f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3b */
extern T0* T852c932(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.types_to_text */
extern T0* T1924f5(TC* ac, T0* C);
/* ET_BASE_TYPE_RENAME_CONSTRAINT.append_types_to_string */
extern void T1924f16(TC* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_CONSTRAINT_LIST.types_to_text */
extern T0* T1743f8(TC* ac, T0* C);
/* ET_BASE_TYPE_CONSTRAINT_LIST.append_types_to_string */
extern void T1743f17(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T59f35(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc3b_error */
extern void T41f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vggc3_error */
extern T1 T41f35(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vggc3a_error */
extern void T59f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vggc3a */
extern T0* T852c931(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vggc3a_error */
extern void T41f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc3c_error */
extern void T59f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc3c */
extern T0* T852c930(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc3c_error */
extern void T41f230(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc3d_error */
extern void T59f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vggc3d */
extern T0* T852c929(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vggc3d_error */
extern void T41f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T59f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T852c928(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T41f228(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INTERFACE_CHECKER.check_constraint_renamings_validity */
extern void T511f19(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_renaming_validity */
extern void T511f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T511f22ot1(TC* ac, T0* a1);
extern T1 T511f22ot2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].wipe_out */
extern void T1415f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1415f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1415f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1415f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1415f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].unset_found_item */
extern void T1415f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1415f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1793f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].set_after */
extern void T1793f7(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_not_renamed_names_validity */
extern void T511f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1t_error */
extern void T59f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1t */
extern T0* T852c954(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1t_error */
extern void T41f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav1s_error */
extern void T59f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1s */
extern T0* T852c953(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1s_error */
extern void T41f253(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav3g_error */
extern void T59f252(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3g */
extern T0* T852c952(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3g_error */
extern void T41f252(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav2g_error */
extern void T59f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2g */
extern T0* T852c951(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2g_error */
extern void T41f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_key */
extern T0* T1415f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1415f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found_item */
extern T0* T1415f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1415f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].found */
extern T1 T1415f26(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search */
extern void T1415f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].search_position */
extern void T1415f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].hash_position */
extern T6 T1415f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1415f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_item */
extern T6 T1415f24(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2f_error */
extern void T59f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2f */
extern T0* T852c950(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T59f33(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vggc2f_error */
extern void T41f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vggc2_error */
extern T1 T41f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].has */
extern T1 T1414f29(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_renamed_names_validity */
extern void T511f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vggc2e_error */
extern void T59f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2e */
extern T0* T852c949(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2e_error */
extern void T41f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1r_error */
extern void T59f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1r */
extern T0* T852c946(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1r_error */
extern void T41f246(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4l_error */
extern void T59f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4l */
extern T0* T852c944(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4l_error */
extern void T41f244(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav1q_error */
extern void T59f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav1q */
extern T0* T852c943(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav1q_error */
extern void T41f243(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4k_error */
extern void T59f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4k */
extern T0* T852c941(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4k_error */
extern void T41f241(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vfav3f_error */
extern void T59f240(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav3f */
extern T0* T852c940(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav3f_error */
extern void T41f240(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vfav4j_error */
extern void T59f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4j */
extern T0* T852c938(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4j_error */
extern void T41f238(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].put_new */
extern void T1415f41(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_put */
extern void T1415f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_put */
extern void T1415f57(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_put */
extern void T1415f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_put */
extern void T1415f53(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2f_error */
extern void T59f237(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vfav2f */
extern T0* T852c937(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vfav2f_error */
extern void T41f237(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item */
extern T0* T1415f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].has */
extern T1 T1415f29(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav4i_error */
extern void T59f235(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfav4i */
extern T0* T852c935(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vfav4i_error */
extern void T41f235(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vggc2a_error */
extern void T59f234(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2a */
extern T0* T852c934(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2a_error */
extern void T41f234(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2d_error */
extern void T59f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vggc2d */
extern T0* T852c933(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vggc2d_error */
extern void T41f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].resize */
extern void T1415f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].clashes_resize */
extern void T1415f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1415f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1415f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1415f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].slots_resize */
extern void T1415f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1415f34(TC* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vggc2c_error */
extern void T59f227(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2c */
extern T0* T852c927(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.tuple_keyword */
extern T0* T260f4(TC* ac, T0* C);
/* ET_CLASS_TYPE.name */
extern T0* T76f2(TC* ac, T0* C);
/* ET_CLASS.name */
extern T0* T78f13(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vggc2c_error */
extern void T41f227(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vggc2b_error */
extern void T59f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vggc2b */
extern T0* T852c926(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vggc2b_error */
extern void T41f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T511f18(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T511f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1413f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T511f17(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1412f15(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T511f15(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T78f269(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T511c13(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1415f38(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.alias_name_tester */
extern T0* T511f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_map */
extern T0* T1415c37(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1415f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1415f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1415f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1415f35(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_ALIAS_NAME].make */
extern T0* T1793c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_slots */
extern void T1415f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_clashes */
extern void T1415f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_key_storage */
extern void T1415f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_ALIAS_NAME].make_item_storage */
extern void T1415f60(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T511f9(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1413c6(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1413f6p1(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1413f4(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_classes_to_be_processed */
extern void T1412f14(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1412c13(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.set_feature_flattening_error_only */
extern void T301f10(TC* ac, T0* C, T1 a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1412f13p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1411c32(TC* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1411f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1411f29(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1783c6(TC* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1411f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1411f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1411f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1411f34(TC* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T511f13p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T511f10(TC* ac, T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T511f12(TC* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T78f282(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].force_last */
extern void T232f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_put */
extern void T232f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_put */
extern void T232f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_put */
extern void T232f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_item */
extern T6 T232f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].hash_position */
extern T6 T232f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].resize */
extern void T232f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_resize */
extern void T232f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].special_integer_ */
extern T0* T232f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_resize */
extern void T232f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_resize */
extern void T232f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].key_storage_item */
extern T0* T232f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].clashes_item */
extern T6 T232f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].slots_resize */
extern void T232f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_modulus */
extern T6 T232f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_capacity */
extern T6 T232f31(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_put */
extern void T232f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search_position */
extern void T232f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].unset_found_item */
extern void T232f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found_item */
extern T0* T232f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].item_storage_item */
extern T0* T232f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].found */
extern T1 T232f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].search */
extern void T232f34(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_to_string */
extern void T78f275(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_canonical_to_string */
extern void T642f31(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T1576f99(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_canonical_to_string */
extern void T1576f100(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1576f102(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_keyword */
extern T0* T77f240(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.expanded_keyword */
extern T0* T77f239(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_canonical_actual_parameter_to_string */
extern void T958f97(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_canonical_to_string */
extern void T958f96(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T958f98(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_to_string */
extern void T260f128(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_canonical_to_string */
extern void T2026f24(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1846f13(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_to_string */
extern void T1600f95(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1600f96(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_to_string */
extern void T1599f98(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_to_string */
extern void T1598f98(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1598f100(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_to_string */
extern void T248f87(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T248f88(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_canonical_to_string */
extern void T499f89(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T499f90(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.tokens */
extern T0* T1846f8(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_mark */
extern T0* T1576f6(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.type_mark */
extern T0* T958f4(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type_mark */
extern T0* T1600f1(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_mark */
extern T0* T1599f1(TC* ac, T0* C);
/* ET_LIKE_FEATURE.type_mark */
extern T0* T1598f1(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type_mark */
extern T0* T248f1(TC* ac, T0* C);
/* ET_LIKE_CURRENT.type_mark */
extern T0* T499f1(TC* ac, T0* C);
/* ET_TUPLE_TYPE.type_mark */
extern T0* T260f2(TC* ac, T0* C);
/* ET_CLASS.class_mark */
extern T0* T78f31(TC* ac, T0* C);
/* ET_CLASS_TYPE.type_mark */
extern T0* T76f1(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_canonical_actual_parameter_to_string */
extern void T1600f93(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_canonical_actual_parameter_to_string */
extern void T1599f99(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_canonical_actual_parameter_to_string */
extern void T1598f99(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T1596f13(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.tokens */
extern T0* T1596f7(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.append_canonical_actual_parameter_to_string */
extern void T248f86(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_canonical_actual_parameter_to_string */
extern void T499f88(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_canonical_actual_parameter_to_string */
extern void T260f131(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_canonical_actual_parameter_to_string */
extern void T78f286(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_actual_parameter_to_string */
extern void T76f139(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_canonical_to_string */
extern void T246f29(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_canonical_to_string */
extern void T76f136(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T500f19(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T2025f21(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.type_name_buffer */
extern T0* T68f65(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_primary_type */
extern T0* T68f64(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T68f99(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_conforming_ancestors */
extern void T68f109(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T77f28(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T69f59(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T69c59(TC* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T69f74(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T69f73(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T69f72(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T69f71(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T69f79(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T69f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T69f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T69f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T69f75(TC* ac, T0* C, T1 a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T518c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T77f152(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T59c189(TC* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T59f189p1(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T59f24(TC* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T166c3(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T77f151(TC* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T515c1(TC* ac);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T77f150(TC* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T516c374(TC* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T69f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].make_default */
extern T0* T338c23(TC* ac);
/* DS_ARRAYED_LIST [INTEGER_32].default_capacity */
extern T6 T338f10(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.conforming_ancestors */
extern T0* T502f11(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforming_ancestors */
extern T0* T501f11(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.conforming_ancestors */
extern T0* T310f11(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.conforming_ancestors */
extern T0* T396f11(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T229f11(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T502f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T501f76(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T310f73(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T396f75(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T229f72(TC* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T78f274(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T502f75(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T501f75(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T310f72(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T396f74(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T229f71(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].force_last */
extern void T93f19(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T93f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T93f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extendible */
extern T1 T93f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.make */
extern T0* T229c65(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T354c37(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T354f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T354f18(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T415c9(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T354f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T354f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T354f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T354f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.empty_features */
extern T0* T229f46(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T230c14(TC* ac);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T68f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T502c69(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T502f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T502f62(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T68f72(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T68f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T68f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T501c69(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T501f90(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T501f62(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T68f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T68f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T310c66(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T310f80(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T310f53(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T68f66(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T396c68(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T396f82(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T396f55(TC* ac, T0* C);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T260f13(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T76f12(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1576f29(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1576f29ot1(TC* ac, T0* a1);
extern T1 T1576f29ot2(TC* ac, T0* a1);
extern T1 T1576f29ot3(TC* ac, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T958f27(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T958f27ot1(TC* ac, T0* a1);
extern T1 T958f27ot2(TC* ac, T0* a1);
extern T1 T958f27ot3(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1600f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1600f22ot1(TC* ac, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1599f8(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T1599f8ot1(TC* ac, T0* a1);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1598f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T248f22(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T248f22ot1(TC* ac, T0* a1);
extern T1 T248f22ot2(TC* ac, T0* a1);
extern T1 T248f22ot3(TC* ac, T0* a1);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T78f142(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T642f14(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T499f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T247f37(TC* ac, T0* C, T0* a1);
extern T1 T247f37ot1(TC* ac, T0* a1);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1548f26(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T260f39(TC* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T78f116(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T76f39(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T260f10(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T2026f12(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1576f77(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T958f79(TC* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1846f4(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1600f37(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1599f34(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1598f34(TC* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1596f4(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T248f30(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T499f25(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T260f55(TC* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T78f149(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T76f51(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T246f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T76f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T500f2(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T2025f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.next_type */
extern T0* T502f16(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.next_type */
extern T0* T501f16(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.next_type */
extern T0* T310f21(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.next_type */
extern T0* T396f21(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T229f19(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1576f47(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T958f48(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1600f21(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1599f48(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1598f7(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T248f21(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T78f141(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T499f12(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T260f9(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T76f87(TC* ac, T0* C, T0* a1);
/* ET_CLASS.is_tuple_class */
extern T1 T78f98(TC* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T78f88(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1576f46(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T958f47(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1600f20(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1599f47(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1598f6(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T248f20(TC* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T78f140(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T499f11(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T260f7(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T76f86(TC* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_non_separate_type_mark */
extern T0* T77f22(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T68f75(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.base_type */
extern T0* T400f9(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_index */
extern void T1844f11(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT.set_index */
extern void T262f10(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T189f127(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1844f8(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T262f8(TC* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T271f11(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1844f7(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T262f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T273f40(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T242f23(TC* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T261f8(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T271c9(TC* ac, T6 a1);
/* ET_EXTERNAL_PROCEDURE.arguments */
extern T0* T1590f5(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments */
extern T0* T259f1(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments */
extern T0* T1589f5(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.arguments */
extern T0* T1587f1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments */
extern T0* T1586f1(TC* ac, T0* C);
/* ET_DO_FUNCTION.arguments */
extern T0* T531f1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T453f55(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T451f53(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T442f50(TC* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T443f52(TC* ac, T0* C);
/* ET_DO_PROCEDURE.arguments */
extern T0* T524f3(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments */
extern T0* T521f4(TC* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1541f16(TC* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T348f16(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T520f16(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T502f77(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T501f77(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T310f74(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T396f76(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.set_never_void */
extern void T400f28(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_never_void */
extern void T229f73(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T236f10(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T74f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T520c15(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T520f20(TC* ac, T0* C, T0* a1);
extern T1 T520f20ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T236f12(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T275f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T275f54(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T275f53(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T275f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T275f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T275f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T275f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T275f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T275f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T275f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T275f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T275f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T275f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T275f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T275f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T275f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T275f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T275f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T275f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T275f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T275f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map_default */
extern T0* T275c40(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern void T275f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T275f55(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T275f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T275f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T275f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T983c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T275f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T275f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T275f64(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T675f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T674c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T675c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T275f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].default_capacity */
extern T6 T275f30(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T74f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T236f11(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T236f17(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T236f9(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T502f70(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T501f70(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T310f67(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T396f69(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T229f66(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T74f104(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.primary_type */
extern T0* T502f47(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.primary_type */
extern T0* T501f47(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.primary_type */
extern T0* T310f50(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.primary_type */
extern T0* T396f52(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T229f31(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.primary_type */
extern T0* T400f1(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T68f60(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_type */
extern void T502f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_type */
extern void T501f74(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_type */
extern void T310f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_type */
extern void T396f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T229f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attached_separate_type */
extern void T502f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attached_separate_type */
extern void T501f72(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_attached_separate_type */
extern void T310f69(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attached_separate_type */
extern void T396f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T229f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_separate_type */
extern void T502f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_separate_type */
extern void T501f71(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_separate_type */
extern void T310f68(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_separate_type */
extern void T396f70(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T229f67(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SECONDARY_TYPE.make */
extern T0* T400c26(TC* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.base_type */
extern T0* T502f3(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_type */
extern T0* T501f3(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_type */
extern T0* T396f3(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_type */
extern T0* T310f3(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T229f5(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1590f45(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T259f73(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1589f45(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1587f54(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1586f56(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T531f33(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_unique_attribute */
extern T1 T453f32(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T451f31(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T442f31(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T443f30(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T524f36(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T521f29(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1590f44(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T259f72(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1589f44(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1587f53(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1586f55(TC* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T531f56(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T453f31(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_constant_attribute */
extern T1 T451f30(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T442f67(TC* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T443f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T524f32(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T521f48(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1590f39(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T259f35(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1589f41(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1587f35(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1586f34(TC* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T531f53(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T453f54(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T451f52(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T442f49(TC* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T443f51(TC* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T524f31(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T521f47(TC* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T242f30(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_map */
extern T0* T655c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T655f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_sparse_container */
extern void T655f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T655f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].new_cursor */
extern T0* T655f22(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make */
extern T0* T1481c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_slots */
extern void T655f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_clashes */
extern void T655f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_key_storage */
extern void T655f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1483f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1479c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1483c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL, ET_CALL_NAME].make_item_storage */
extern void T655f37(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make */
extern T0* T1482f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].make_empty */
extern T0* T1477c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL].default_create */
extern T0* T1482c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_map */
extern T0* T656c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_with_equality_testers */
extern void T656f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_sparse_container */
extern void T656f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].set_internal_cursor */
extern void T656f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].new_cursor */
extern T0* T656f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make */
extern T0* T1487c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_slots */
extern void T656f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_clashes */
extern void T656f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_key_storage */
extern void T656f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_QUALIFIED_QUERY_CALL, ET_CALL_NAME].make_item_storage */
extern void T656f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make */
extern T0* T1486f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_QUALIFIED_QUERY_CALL].make_empty */
extern T0* T1484c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_QUALIFIED_QUERY_CALL].default_create */
extern T0* T1486c3(TC* ac);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T242f29(TC* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T524c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.tokens */
extern T0* T524f46(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.base_class */
extern T0* T502f2(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.base_class */
extern T0* T501f2(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.base_class */
extern T0* T396f2(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.base_class */
extern T0* T310f2(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T229f6(TC* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T189c122(TC* ac, T0* a1);
/* ET_C_GENERATOR.close_cpp_file */
extern void T91f679(TC* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T91f678(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T131f32(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T42f76(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T42f79(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T42f81(TC* ac, T0* C, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T130f35(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T91f677(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T166f9(TC* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T166f9p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T42f77(TC* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T335f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T335f10p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T385f38(TC* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T385f38p1(TC* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T131f31(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T42f75(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T42f78(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T42f80(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T42f71(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T42f82(TC* ac, T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T42f36(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T42f44(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T42f54(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T42f53(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T42f52(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T42f42(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T42f50(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T42f56(TC* ac, T0* C, T14 a1);
/* FILE_INFO.size */
extern T6 T145f18(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T42f55(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T42f41(TC* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T145f17(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T42f40(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T130f34(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T379f34(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T379f43(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T379f42(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T379f41(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T379f40(TC* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T819f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T819f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T379f39(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T379f38(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T821f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T821f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T378f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T378f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T378f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T378f47(TC* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T816f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T816f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T378f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T378f44(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T815f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T815f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T377f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T377f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T377f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T377f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T377f47(TC* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T812f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T812f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T377f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T811f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T811f9(TC* ac, T0* C);
/* ARRAY [INTEGER_32].fill_with */
extern void T376f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].wipe_out */
extern void T375f37(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].slots_wipe_out */
extern void T375f47(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].clashes_wipe_out */
extern void T375f46(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].key_storage_wipe_out */
extern void T375f45(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].item_storage_wipe_out */
extern void T375f44(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].move_all_cursors_after */
extern void T375f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_next_cursor */
extern void T810f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].set_after */
extern void T810f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T384f46(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T384f58(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T384f57(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T384f56(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T384f55(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T384f54(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T384f53(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T833f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T833f9(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T73f45(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T73f63(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T73f62(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T73f61(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T73f60(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T73f59(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T73f31(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T384f45(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T384f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T384f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T833f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T384f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T384f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T384f30(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T384f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T384f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T384f21(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T384f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T384f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T384f35(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T384f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T833f4(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T384f44(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T384f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T384f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T833f7(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T384f31(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T73f75(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T73f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T73f69(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T73f68(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T91f676(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T73f20(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T73f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T73f34(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T73f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T266f4(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T73f42(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T73f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T73f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T266f8(TC* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T91f675(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T91f674(TC* ac, T0* C);
/* ET_C_GENERATOR.temp_variable */
extern T0* T91f192(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T91f673(TC* ac, T0* C);
extern T1 T91f673ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T68f61(TC* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.runtime_name_to_text */
extern T0* T260f30(TC* ac, T0* C);
/* ET_TUPLE_TYPE.append_runtime_name_to_string */
extern void T260f130(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_runtime_name_to_string */
extern void T2026f26(TC* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T1576f95(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_runtime_name_to_string */
extern void T958f92(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_runtime_name_to_string */
extern void T1600f90(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_runtime_name_to_string */
extern void T1599f94(TC* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_runtime_name_to_string */
extern void T1598f94(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_runtime_name_to_string */
extern void T248f85(TC* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_runtime_name_to_string */
extern void T499f87(TC* ac, T0* C, T0* a1);
/* ET_CLASS.append_runtime_name_to_string */
extern void T78f277(TC* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T642f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_runtime_name_to_string */
extern void T76f138(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T500f21(TC* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T2025f23(TC* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_runtime_name_to_string */
extern void T246f31(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.runtime_name_to_text */
extern T0* T76f30(TC* ac, T0* C);
/* ET_CLASS.runtime_name_to_text */
extern T0* T78f74(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T502f50(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T501f50(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_tuple */
extern T1 T310f58(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T396f59(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T229f56(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.type_id */
extern T6 T502f45(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.type_id */
extern T6 T501f45(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.type_id */
extern T6 T310f48(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.type_id */
extern T6 T396f49(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.type_id */
extern T6 T229f45(TC* ac, T0* C);
/* ET_DYNAMIC_SECONDARY_TYPE.type_id */
extern T6 T400f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T93f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T93f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T459f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T459f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T93f14(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T399f3(TC* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort_with_comparator */
extern void T399f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].subsort_with_comparator */
extern void T399f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].swap */
extern void T93f22(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].replace */
extern void T93f21(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T401f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T93f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].append_last */
extern void T93f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].extend_last */
extern void T93f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T415f14(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T354f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T354f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T415f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T415f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T354f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T415f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].item */
extern T0* T415f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T354f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T415f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T415f13(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T354f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T354f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T415f6(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T354f21(TC* ac, T0* C);
/* DS_QUICK_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T399c2(TC* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_primary_type_comparator */
extern T0* T91f200(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE_COMPARATOR_BY_ID.make */
extern T0* T401c2(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T93c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T93f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T93f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T459c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T379f28(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T379f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T379f29(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T379f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T379f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T379f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T379f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T379f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T379f21(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T91f672(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T220f55(TC* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T748f36(TC* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T748f55(TC* ac, T0* C, T6 a1);
/* UC_STRING.occurrences */
extern T6 T329f27(TC* ac, T0* C, T2 a1);
/* UC_STRING.code_occurrences */
extern T6 T329f49(TC* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f35(TC* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T220f38(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T220f37(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T220f36(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T220f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T220f54(TC* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T91f671(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].forth */
extern void T378f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T378f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T378f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T815f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T378f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T378f20(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T378f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T378f36(TC* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1624f16(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T378f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T378f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T378f21(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T378f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T815f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].start */
extern void T378f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T378f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T378f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T815f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T378f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T377f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T377f52(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T377f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T811f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T377f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T377f23(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T377f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T377f20(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_status_name */
extern void T91f751(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].has */
extern T1 T375f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T377f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T377f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T377f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T377f25(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T811f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T377f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T377f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T377f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T811f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T377f28(TC* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T91f670(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T91f669(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T355f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T355f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T355f52(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T355f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T355f50(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T355f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T355f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_next_cursor */
extern void T793f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_after */
extern void T793f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T355f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_forth */
extern void T355f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].add_traversing_cursor */
extern void T355f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_position */
extern void T793f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].remove_traversing_cursor */
extern void T355f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T355f24(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T91f748(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].wipe_out */
extern void T352f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_wipe_out */
extern void T352f49(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_wipe_out */
extern void T352f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T352f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T352f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].unset_found_item */
extern void T352f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].move_all_cursors_after */
extern void T352f45(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_next_cursor */
extern void T792f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_after */
extern void T792f7(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T91f815(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T91f814(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T91f814ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T91f842(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item */
extern T0* T352f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_item */
extern T0* T352f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].search_position */
extern void T352f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].hash_position */
extern T6 T352f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_item */
extern T6 T352f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_item */
extern T6 T352f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_item */
extern T6 T352f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last */
extern void T352f36(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_put */
extern void T352f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_put */
extern void T352f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_put */
extern void T352f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].resize */
extern void T352f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].clashes_resize */
extern void T352f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].special_integer_ */
extern T0* T352f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].key_storage_resize */
extern void T352f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_resize */
extern void T352f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].slots_resize */
extern void T352f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_modulus */
extern T6 T352f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_capacity */
extern T6 T352f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].item_storage_put */
extern void T352f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T355f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_item */
extern T0* T355f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T0* T355f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T355f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T355f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T793f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T355f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_start */
extern void T355f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].cursor_off */
extern T1 T355f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].off */
extern T1 T793f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].is_empty */
extern T1 T355f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T91f747(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac1(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac3(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac4(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac6(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac7(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac8(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac9(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac10(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac11(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T91f747ac12(TC* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T91f747ot1(TC* ac, T0* a1);
extern T1 T91f747ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T91f812(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T91f813(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T91f841(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T355f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T355f59(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T355f58(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T355f57(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T355f56(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T355f38(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T355f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T355f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T355f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T355f37(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T355f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T355f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T355f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T355f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T355f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T355f34(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T353f12(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T353f5(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T787c3(TC* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T353f10(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T353f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T353f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T0* T355f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T355f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T355f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T355f54(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T502f44(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T501f44(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T310f54(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T396f60(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T229f57(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T374f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T374f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T374f50(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T374f49(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T374f48(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T808f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T808f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T374f47(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T807f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T807f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T374f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T374f46(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T374f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T807f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T374f52(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T91f668(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T374f29(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T374f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T374f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T374f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T807f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T374f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T374f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T374f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T807f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T374f21(TC* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T91f667(TC* ac, T0* C, T0* a1);
extern T1 T91f667ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].wipe_out */
extern void T354f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].slots_wipe_out */
extern void T354f55(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].clashes_wipe_out */
extern void T354f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].key_storage_wipe_out */
extern void T354f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_storage_wipe_out */
extern void T354f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].move_all_cursors_after */
extern void T354f51(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].forth */
extern void T354f39(TC* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T91f666(TC* ac, T0* C, T0* a1);
extern T1 T91f666ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].item_for_iteration */
extern T0* T354f17(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].after */
extern T1 T354f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].cursor_after */
extern T1 T354f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].start */
extern void T354f38(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T91f665(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T91f744(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f744ot1(TC* ac, T0* a1);
extern T1 T91f744ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T91f811(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T91f807(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f807ot1(TC* ac, T0* a1);
extern T1 T91f807ot2(TC* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T348f18(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T353f11(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T304f10(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T303f12(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.force_result_boxing */
extern T1 T304f12(TC* ac, T0* C);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T91f805(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T91f805ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].force_last_new */
extern void T352f34(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].has */
extern T1 T352f25(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T304f11(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T303f13(TC* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1601f20(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T273f52(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_target_type */
extern void T273f51(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_target_type */
extern void T242f50(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T91f190(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f190ot1(TC* ac, T0* a1);
extern T1 T91f190ot2(TC* ac, T0* a1);
extern T1 T91f190ot3(TC* ac, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.procedure_calls */
extern T0* T502f20(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.procedure_calls */
extern T0* T501f20(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.procedure_calls */
extern T0* T310f23(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.procedure_calls */
extern T0* T396f23(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T229f22(TC* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T91f664(TC* ac, T0* C);
extern T1 T91f664ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T91f663(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.query_calls */
extern T0* T502f19(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.query_calls */
extern T0* T501f19(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.query_calls */
extern T0* T310f22(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.query_calls */
extern T0* T396f22(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T229f21(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].wipe_out */
extern void T383f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].slots_wipe_out */
extern void T383f54(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].clashes_wipe_out */
extern void T383f53(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_wipe_out */
extern void T383f52(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_wipe_out */
extern void T383f51(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_FEATURE].keep_head */
extern void T644f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].set_count */
extern void T644f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_all_cursors_after */
extern void T383f50(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T830f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T830f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].forth */
extern void T383f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_forth */
extern void T383f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].add_traversing_cursor */
extern void T383f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T830f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_traversing_cursor */
extern void T383f61(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_in_comment */
extern void T91f662(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_routine_name */
extern void T91f661(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T91f661ot1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_for_iteration */
extern T0* T383f30(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_item */
extern T0* T383f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].after */
extern T1 T383f35(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_after */
extern T1 T383f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].after */
extern T1 T830f4(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].start */
extern void T383f37(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_start */
extern void T383f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].cursor_off */
extern T1 T383f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].off */
extern T1 T830f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T383f27(TC* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T91f660(TC* ac, T0* C, T0* a1);
extern T1 T91f660ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.free_call_contexts */
extern void T91f741(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].wipe_out */
extern void T381f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].move_all_cursors_after */
extern void T381f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].item */
extern T0* T381f11(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.free_inlined_operands */
extern void T91f740(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].wipe_out */
extern void T380f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].move_all_cursors_after */
extern void T380f18(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].item */
extern T0* T380f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].wipe_out */
extern void T341f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].move_all_cursors_after */
extern void T341f16(TC* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T91f737(TC* ac, T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_body */
extern void T91f803(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].item */
extern T0* T341f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T356f11(TC* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T795f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T795f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T356f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T797f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T797f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T91f736(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T356f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T358f11(TC* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T801f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T801f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T358f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T803f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T803f6(TC* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T91f735(TC* ac, T0* C, T6 a1, T0* a2);
extern T1 T91f735ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T91f794(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T91f790(TC* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.agent_closed_operand */
extern T0* T91f297(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T189f130(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.agent_open_operand */
extern T0* T91f296(TC* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T189f129(TC* ac, T0* C, T1 a1);
/* ET_CALL_AGENT.implicit_result */
extern T0* T1118f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T358f7(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T273f29(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T242f38(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T382f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T382f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T829f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T829f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T382f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T382f10(TC* ac, T0* C);
/* ET_C_GENERATOR.register_called_feature */
extern void T91f659(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove */
extern void T383f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].remove_position */
extern void T383f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_put */
extern void T383f67(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].key_storage_keep_head */
extern void T383f66(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].item_storage_keep_head */
extern void T383f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].move_cursors_forth */
extern void T383f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].internal_set_key_equality_tester */
extern void T383f63(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T273f57(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T242f53(TC* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_functions */
extern void T91f658(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_dispose_function */
extern void T91f734(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_functions */
extern void T91f657(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_allocation_function */
extern void T91f733(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T91f656(TC* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T91f732(TC* ac, T0* C, T0* a1);
extern T1 T91f732ot1(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T91f789(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f789ot1(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].force_last_new */
extern void T379f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T379f49(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T379f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T822f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T819f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T819f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T379f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T379f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T379f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T379f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T379f31(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T379f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T379f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T822f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T819f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T379f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T379f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_capacity */
extern T6 T379f32(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T91f655(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_8_function */
extern void T91f654(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T91f653(TC* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T91f652(TC* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T335f5(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T91f651(TC* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T91f715(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T91f783(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f783ot1(TC* ac, T0* a1);
extern T1 T91f783ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T91f824(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T91f650(TC* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T91f649(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_per_object_data_struct */
extern void T91f714(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_per_object_data_struct_name */
extern void T91f771(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T91f713(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T91f770(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T91f712(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T91f712ot1(TC* ac, T0* a1);
extern T1 T91f712ot2(TC* ac, T0* a1);
/* ET_C_GENERATOR.print_struct_name */
extern void T91f762(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has_cycle */
extern T1 T391f8(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].sort */
extern void T391f15(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_PRIMARY_TYPE].put_last */
extern void T93f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].reset */
extern void T391f20(TC* ac, T0* C);
/* ET_C_GENERATOR.print_once_per_object_data_type_definition */
extern void T91f711(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T91f710(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T91f709(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_pointer_function */
extern void T91f708(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_scoop_processor_access */
extern void T91f767(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_flags_access */
extern void T91f766(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_function */
extern void T91f707(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force_relation */
extern void T391f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_indexed_relation */
extern void T391f19(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].count */
extern T6 T391f10(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].index_of */
extern T6 T391f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found_item */
extern T6 T837f20(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_item */
extern T6 T837f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].found */
extern T1 T837f30(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search */
extern void T837f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].search_position */
extern void T837f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].hash_position */
extern T6 T837f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_item */
extern T0* T837f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_item */
extern T6 T837f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_item */
extern T6 T837f29(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T91f706(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T91f705(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T91f704(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T91f703(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T91f702(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T91f701(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T91f700(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T91f699(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T91f698(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T91f697(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T91f696(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T91f695(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T91f694(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T91f693(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T91f692(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].force */
extern void T391f13(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put */
extern void T391f18(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].put_new */
extern void T837f36(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_put */
extern void T837f48(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_put */
extern void T837f47(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_put */
extern void T837f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_put */
extern void T837f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].unset_found_item */
extern void T837f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].resize */
extern void T837f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].clashes_resize */
extern void T837f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].special_integer_ */
extern T0* T837f26(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].key_storage_resize */
extern void T837f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].item_storage_resize */
extern void T837f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].slots_resize */
extern void T837f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_modulus */
extern T6 T837f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].capacity */
extern T6 T391f7(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T391f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].has */
extern T1 T837f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make_default */
extern T0* T391c12(TC* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern void T391f16(TC* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T391c16(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T837c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T837f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T837f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T837f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T837f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T1515c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T837f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T837f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T837f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T837f50(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T91f691(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T91f690(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T91f689(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T91f688(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T91f687(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T91f686(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T91f648(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T91f647(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T91f684(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force_last */
extern void T384f48(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T384f63(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T384f62(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T384f61(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T384f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T384f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T384f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T384f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T384f40(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T384f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T384f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T384f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T384f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T384f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T384f59(TC* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T384f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T384f47(TC* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T384f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T384f33(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T76f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T77f60(TC* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T91f154(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_32_type */
extern T0* T192f37(TC* ac, T0* C);
/* ET_SYSTEM.character_32_type */
extern T0* T46f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_32_type */
extern T0* T63f40(TC* ac, T0* C);
/* ET_ECF_LIBRARY.character_type */
extern T0* T192f34(TC* ac, T0* C);
/* ET_SYSTEM.character_type */
extern T0* T46f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.character_type */
extern T0* T63f37(TC* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T78f184(TC* ac, T0* C);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T91f319(TC* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T91f280(TC* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T91f646(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T273f55(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T242f59(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_static */
extern T1 T502f21(TC* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_static */
extern T1 T501f21(TC* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_static */
extern T1 T310f24(TC* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_static */
extern T1 T396f24(TC* ac, T0* C);
/* ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T229f23(TC* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T502f79(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T501f79(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T310f81(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T396f83(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T229f80(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T91f683(TC* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_PRIMARY_TYPE].put_relation */
extern void T391f17(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_PRIMARY_TYPE].new_iterator */
extern T0* T354f34(TC* ac, T0* C);
/* ET_C_GENERATOR.open_cpp_file */
extern void T91f645(TC* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T91f644(TC* ac, T0* C);
/* ET_C_GENERATOR.add_boehm_gc_c_files */
extern void T91f638(TC* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_undefined_environment_variable_error */
extern void T91f642(TC* ac, T0* C, T0* a1);
/* UT_UNDEFINED_ENVIRONMENT_VARIABLE_ERROR.make */
extern T0* T389c8(TC* ac, T0* a1);
/* ET_C_GENERATOR.set_split_threshold */
extern void T91f633(TC* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T91f632(TC* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T25f55(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T54f12(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T162f7(TC* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T162f6(TC* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T91f631(TC* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T25f51(TC* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T91f630(TC* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T25f54(TC* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T91c629(TC* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T91f637(TC* ac, T0* C);
/* ET_C_GENERATOR.make_volatile_data */
extern void T91f636(TC* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T91f635(TC* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T384f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T384c42(TC* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T384f50(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T384f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T384f75(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T384f39(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T833c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T384f74(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T384f73(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T384f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T384f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T73f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern void T73f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T73c40(TC* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T73f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T73f22(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T266c9(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T73f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T73f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T73f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T73f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make */
extern T0* T383c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T383f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T383f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T830c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_slots */
extern void T383f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_clashes */
extern void T383f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_key_storage */
extern void T383f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_FEATURE].make_item_storage */
extern void T383f42(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T382c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T382f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T382f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T829c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T381c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].set_internal_cursor */
extern void T381f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_CALL_CONTEXT].new_cursor */
extern T0* T381f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T828c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].make */
extern T0* T827f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_CALL_CONTEXT].make_empty */
extern T0* T826c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_CALL_CONTEXT].default_create */
extern T0* T827c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T380c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].set_internal_cursor */
extern void T380f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_INLINED_EXPRESSION].new_cursor */
extern T0* T380f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T825c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].make */
extern T0* T824f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_INLINED_EXPRESSION].make_empty */
extern T0* T823c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_INLINED_EXPRESSION].default_create */
extern T0* T824c3(TC* ac);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T379c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T379f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T379f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T379f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T379f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T821c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T379f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T379f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T379f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T379f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T822f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T819c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T822c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T378c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T378f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T378f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T378f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T378f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T815c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T378f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T378f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T378f56(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T818f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T816c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T818c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T378f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T377c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T377f44(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T377f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T377f70(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T377f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T811c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T377f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T377f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T377f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T377f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T814f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T812c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T814c3(TC* ac);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_map */
extern T0* T375c36(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_with_equality_testers */
extern void T375f41(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_sparse_container */
extern void T375f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].set_internal_cursor */
extern void T375f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].new_cursor */
extern T0* T375f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FEATURE].make */
extern T0* T810c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_slots */
extern void T375f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_clashes */
extern void T375f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_key_storage */
extern void T375f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FEATURE].make_item_storage */
extern void T375f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T374c35(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T374f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T374f33(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T807c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T374f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T374f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T374f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T374f39(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T809f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T808c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T809c3(TC* ac);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_EXPRESSION.make */
extern T0* T373c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_GENERAL_QUALIFIED_FEATURE_CALL_INSTRUCTION.make */
extern T0* T371c7(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T358c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T358f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T358f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T803c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T802f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T801c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T802c3(TC* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T356c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T356f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T356f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T797c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T796f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T795c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T796c3(TC* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_map */
extern T0* T355c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_with_equality_testers */
extern void T355f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_sparse_container */
extern void T355f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T355f71(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T355f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T793c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_slots */
extern void T355f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_clashes */
extern void T355f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_key_storage */
extern void T355f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_PRIMARY_TYPE].make_item_storage */
extern void T355f67(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T787f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T786c5(TC* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T353c9(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_map */
extern T0* T352c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_with_equality_testers */
extern void T352f38(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_sparse_container */
extern void T352f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].set_internal_cursor */
extern void T352f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].new_cursor */
extern T0* T352f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make */
extern T0* T792c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_slots */
extern void T352f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_clashes */
extern void T352f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_key_storage */
extern void T352f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, INTEGER_32].make_item_storage */
extern void T352f55(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T350c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T349c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].set_internal_cursor */
extern void T349f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T349f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T788c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].make */
extern T0* T346c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_RESULT].set_internal_cursor */
extern void T346f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_RESULT].new_cursor */
extern T0* T346f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_RESULT].make */
extern T0* T785c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T783f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_RESULT].make_empty */
extern T0* T784c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T783c3(TC* ac);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T345c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].set_internal_cursor */
extern void T345f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACTUAL_ARGUMENT_LIST].new_cursor */
extern T0* T345f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T782c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T780f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T781c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T780c3(TC* ac);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T344c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T344f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T344f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T779c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T778f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T777c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T778c3(TC* ac);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T343c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T343f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_UNQUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T343f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T776c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].make */
extern T0* T773f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNQUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T775c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNQUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T773c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T342c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].set_internal_cursor */
extern void T342f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].new_cursor */
extern T0* T342f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T772c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make */
extern T0* T770f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].make_empty */
extern T0* T771c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_OBJECT_EQUALITY_TYPES].default_create */
extern T0* T770c3(TC* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T341c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].set_internal_cursor */
extern void T341f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_EQUALITY_TYPES].new_cursor */
extern T0* T341f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T769c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].make */
extern T0* T768f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_EQUALITY_TYPES].make_empty */
extern T0* T767c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_EQUALITY_TYPES].default_create */
extern T0* T768c3(TC* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T340c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T340f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T340f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T766c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T763f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T765c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T763c3(TC* ac);
/* DS_ARRAYED_LIST [BOOLEAN].make */
extern T0* T339c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [BOOLEAN].set_internal_cursor */
extern void T339f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [BOOLEAN].new_cursor */
extern T0* T339f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [BOOLEAN].make */
extern T0* T762c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T337c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].set_internal_cursor */
extern void T337f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_DYNAMIC_PRIMARY_TYPE].new_cursor */
extern T0* T337f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T759c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].make */
extern T0* T758f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_PRIMARY_TYPE].make_empty */
extern T0* T757c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_PRIMARY_TYPE].default_create */
extern T0* T758c3(TC* ac);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T336c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T336f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T336f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T756c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T638f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T639c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T638c3(TC* ac);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T335c4(TC* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T91f151(TC* ac, T0* C);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T76f22(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T77f1(TC* ac, T0* C);
/* ET_CLASS.make_unknown */
extern T0* T78c264(TC* ac);
/* GEC.tokens */
extern T0* T25f47(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T68f88(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T68f91(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T68f95(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T236f20(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T74f107(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T74f111(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T74f116(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T74f118(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T74f118ot1(TC* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T74f122(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T59f210(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T41f210(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T74f123(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T304f9(TC* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T303f11(TC* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T959f9(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T74f67(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T74f66(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T74f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T271f12(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T272f34(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T272f41(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T272f40(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T272f39(TC* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T674f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T674f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T272f38(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T272f36(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T673f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T673f7(TC* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T273f54(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T242f58(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T74f114(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T74f117(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T74f120(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T74f119(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T74f113(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T242f40(TC* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T236f16(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T74f103(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T236f15(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T74f102(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T236f19(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T74f106(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T236f18(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T74f105(TC* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T78f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T1184f7(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T1181f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T59f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T59f211(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T850c32(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T59f16(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T41f201(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T41f211(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T41f16(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T59f200(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T850c31(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T59f15(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T41f200(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T41f15(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T59f199(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T850c30(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T59f14(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T41f199(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T41f14(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T59f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T850c29(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T59f13(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T41f198(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T41f13(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T59f197(TC* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T850c28(TC* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T59f12(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T41f197(TC* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T41f12(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T68f93(TC* ac, T0* C, T0* a1);
extern T1 T68f93ot1(TC* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T77f20(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T77f19(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T77f17(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T77f16(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T77f15(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T77f14(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T77f11(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T68f78(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T77f9(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T77f8(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T77f7(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T59f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T852c914(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T59f22(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T41f208(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T41f22(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T59f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T852c912(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T59f20(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T41f206(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T41f20(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T59f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T852c910(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T59f18(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T41f204(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T41f18(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T59f203(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T850c33(TC* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T59f17(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T41f203(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T41f17(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T69f58(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T69f70(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T63f144(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T63f144ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T63f144ac2(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T234f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T903f2(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T902f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T63f225(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T63f225ac1(TC* ac, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T46f199(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T648f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T231f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T231f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T648f16(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T648f15(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T231f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T648f14(TC* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T491f48(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T648f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T231f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T648f4(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T648f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T231f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T231f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T648f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T231f35(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T217f158(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T217f158p1(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T634f158(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T634f158p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T192f188(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_all */
extern void T921f159(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T63f279(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T63f228(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T924f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T924f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T924f17(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T63f236(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T63f236ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T63f236ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T914f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T217f156(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T217f156ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T633f7(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T634f156(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T634f156ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_LIBRARY]].set_rout_disp_final */
extern void T923f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T192f185(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T192f185ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T192f185ac2(TC* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T921f156(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T921f156ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T921f156ac2(TC* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T216f9(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T193f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T924f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T924f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T924f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T924f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T924f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T924f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T924f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T924f33(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T924f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T924f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T924f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T924f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T924f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T924f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T924f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T924f42(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T924f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T924f47(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T924f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T924c36(TC* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T924f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T924f35(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1682c8(TC* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T924f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T924f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T924f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T924f43(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T63f151(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T63f153(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T903c1(TC* ac);
/* UT_COUNTER.make */
extern T0* T902c2(TC* ac, T6 a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T63f227(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T63f231(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T63f231ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_CLUSTER]].set_rout_disp_final */
extern void T927f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T63f239(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T870f90(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T63f238(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T63f238ac1(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T917f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T192f198(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T485f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T854f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1652f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T997f7(TC* ac, T0* C, T6 a1);
/* ET_LIBRARY.clusters_do_explicit */
extern void T921f169(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T63f286(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T63f232(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T929f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T929f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T929f22(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T63f240(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T63f240ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T192f186(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T192f186ac1(TC* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T921f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T921f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T929f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T929f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T929f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T929f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T929f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T929f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T929f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T929f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T929f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T929f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1688f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1689f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T929f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T929f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T929f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T929f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T929f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1688f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1689f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1689f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T929f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T929f19(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T929f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T929f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T929c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T929f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T929f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1686c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T929f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T929f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T929f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T929f34(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1688f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1689c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1688c3(TC* ac);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T63f230(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T63f230ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T63f237(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T870f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern void T265f110(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_master_class_validity */
extern T0* T265f110ac1(TC* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T491f66(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T515f3(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T506f8(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T506f9(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T506f12(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T59f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T59f377(TC* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T2017c21(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T491f49(TC* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T921f97(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T921f101(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T921f105(TC* ac, T0* C);
/* ET_LIBRARY.lower_name */
extern T0* T921f104(TC* ac, T0* C);
/* ET_SYSTEM.full_lower_name */
extern T0* T46f127(TC* ac, T0* C, T2 a1);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T192f107(TC* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T63f159(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.kind_name */
extern T0* T921f96(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T634f96(TC* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T46f126(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T217f95(TC* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T192f106(TC* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T63f158(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T59f45(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T41f260(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T41f377(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T41f45(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T506f6(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T506f5(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T506f13(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T506f11(TC* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T506f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T59f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T2017c23(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T870f49(TC* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T498f17(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T316f18(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T41f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T59f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T2017c22(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T41f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T491f25(TC* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T78f169(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T59f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T2017c20(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T41f259(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T506f10(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T63f244(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T63f244ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T63f244ac2(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T46f203(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T648f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T231f64(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T217f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T634f163(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T192f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_until */
extern void T921f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T63f282(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_all */
extern void T46f201(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T231f50(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T217f160(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T634f160(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T192f190(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_classes_do_all */
extern void T921f161(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T63f241(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T63f229(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T924f40(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T924f51(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T924f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1682f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1682f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T924f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1682f9(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T924f34(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T924f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T924f39(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T924f50(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T924f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1682f5(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T924f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T924f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1682f7(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T924f38(TC* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T924f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T924f31(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T69f106(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T69f106ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T63f227p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac2(TC* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac4(TC* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac5(TC* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac6(TC* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T63f227p1ac8(TC* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T192f184(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T192f184ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T192f184ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T192f184ac3(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T934f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T219f39(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T491f85(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T491f47(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1003f13(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T921f92(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T220f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T648f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T231f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_hidden */
extern T1 T870f7(TC* ac, T0* C);
/* ET_NONE_GROUP.is_hidden */
extern T1 T498f13(TC* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_hidden */
extern T1 T316f14(TC* ac, T0* C);
/* PROCEDURE [TUPLE [ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T196f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T213f36(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T491f63(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T491f77(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T491f24(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T216f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T632f11(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T193f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T616f11(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T921f155(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T921f155ac1(TC* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T921f155ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T921f155ac3(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T217f155(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T217f168(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T217f91(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T217f99(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T217f167(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T77f1559(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T634f155(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T634f167(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T634f91(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T634f95(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T634f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T192f183(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T192f183p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T192f183p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T192f183p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T192f183p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T192f183p1ac4(TC* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T491f62(TC* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T491f76(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T513f31(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T513f30(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T491f75(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T491f74(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T513f27(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T513f34(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T513f33(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T513f32(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T513f35(TC* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T491f61(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T491f61ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T491f61ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T491f61ac3(TC* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T491f61ac4(TC* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T491f61ac5(TC* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T491f69(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T131f28(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T130f31(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T491f23(TC* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T491f29(TC* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T491f28(TC* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T491f27(TC* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T78f287(TC* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T78f289(TC* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T1173f10(TC* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1584f10(TC* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1002f12(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1598f96(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T260f133(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T2026f27(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1576f96(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1576f92(TC* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T1158f14(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_base_types */
extern void T1576f101(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset */
extern void T1364f18(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset */
extern void T1577f11(TC* ac, T0* C);
/* ET_CONSTRAINT_RENAME_LIST.reset */
extern void T1161f14(TC* ac, T0* C);
/* ET_RENAME.reset */
extern void T1419f7(TC* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1591f7(TC* ac, T0* C);
/* ET_ALIAS_NAME_LIST.reset */
extern void T979f13(TC* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1592f59(TC* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T1107f112(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T958f93(TC* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T78f332(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T246f34(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T248f90(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T76f141(TC* ac, T0* C);
extern T1 T76f141ot1(TC* ac, T0* a1);
extern T1 T76f141ot2(TC* ac, T0* a1);
extern T1 T76f141ot3(TC* ac, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T500f22(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T2025f24(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1600f91(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1599f96(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T499f93(TC* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T189f138(TC* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1583f9(TC* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T1184f11(TC* ac, T0* C);
/* ET_CREATOR.reset */
extern void T1181f19(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T1268f36(TC* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T1268f36p1(TC* ac, T0* C);
/* ET_CALL_AGENT.reset */
extern void T1118f39(TC* ac, T0* C);
extern T1 T1118f39ot1(TC* ac, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T1102f16(TC* ac, T0* C);
extern T1 T1102f16ot1(TC* ac, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T2130f30(TC* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T2129f32(TC* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T2057f24(TC* ac, T0* C);
/* ET_DYNAMIC_INLINED_EXPRESSION.reset */
extern void T423f29(TC* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T2128f24(TC* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1633f17(TC* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T1082f51(TC* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1632f13(TC* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1882f10(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T1115f32(TC* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T1115f33(TC* ac, T0* C);
extern T1 T1115f33ot1(TC* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T2041f18(TC* ac, T0* C);
extern T1 T2041f18ot1(TC* ac, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T360f24(TC* ac, T0* C);
extern T1 T360f24ot1(TC* ac, T0* a1);
/* ET_BRACKET_SYMBOL.reset */
extern void T662f133(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T1085f54(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T1085f54p1(TC* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T1085f55(TC* ac, T0* C);
/* ET_VARIANT.reset */
extern void T1372f8(TC* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T1284f18(TC* ac, T0* C);
/* ET_VOID.reset */
extern void T1074f39(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T774f35(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T774f35p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T774f36(TC* ac, T0* C);
extern T1 T774f36ot1(TC* ac, T0* a1);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T764f28(TC* ac, T0* C);
extern T1 T764f28ot1(TC* ac, T0* a1);
extern T1 T764f28ot2(TC* ac, T0* a1);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T702f35(TC* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T454f70(TC* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T405f41(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T406f6(TC* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T406f7(TC* ac, T0* C);
/* ET_OBJECT_TEST.reset */
extern void T394f32(TC* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T370f39(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T363f37(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T363f37p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T363f37p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T363f38(TC* ac, T0* C);
extern T1 T363f38ot1(TC* ac, T0* a1);
/* ET_CURRENT.reset */
extern void T359f42(TC* ac, T0* C);
/* ET_RESULT.reset */
extern void T334f42(TC* ac, T0* C);
/* ET_TAGGED_ASSERTION.reset */
extern void T1636f9(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1631f56(TC* ac, T0* C);
extern T1 T1631f56ot1(TC* ac, T0* a1);
/* ET_POSTCONDITIONS.reset */
extern void T1327f24(TC* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T1327f24p1(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T305f23(TC* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T305f23p1(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T261f14(TC* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1844f14(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T262f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1630f64(TC* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T333f21(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1833f15(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1833f15p1(TC* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1833f16(TC* ac, T0* C);
extern T1 T1833f16ot1(TC* ac, T0* a1);
/* ET_INLINE_SEPARATE_INSTRUCTION.reset */
extern void T367f14(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENTS.reset */
extern void T332f18(TC* ac, T0* C);
/* ET_INLINE_SEPARATE_ARGUMENT.reset */
extern void T364f14(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T1347f32(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset */
extern void T1347f32p1(TC* ac, T0* C);
/* ET_REPEAT_INSTRUCTION.reset_unfolded_form */
extern void T1347f33(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T1088f37(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T1088f37p1(TC* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T1088f38(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T1123f22(TC* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T1123f22p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1610f19(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1610f19p1(TC* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T1610f20(TC* ac, T0* C);
extern T1 T1610f20ot1(TC* ac, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1608f19(TC* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T1608f20(TC* ac, T0* C);
extern T1 T1608f20ot1(TC* ac, T0* a1);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T1187f14(TC* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T1263f17(TC* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T1384f13(TC* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1381f11(TC* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T1135f18(TC* ac, T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T1607f13(TC* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T1247f19(TC* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T1199f13(TC* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T1196f12(TC* ac, T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1606f26(TC* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1605f24(TC* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1603f22(TC* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1602f14(TC* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T368f16(TC* ac, T0* C);
extern T1 T368f16ot1(TC* ac, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1601f23(TC* ac, T0* C);
extern T1 T1601f23ot1(TC* ac, T0* a1);
/* ET_RETRY_INSTRUCTION.reset */
extern void T1068f24(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T361f21(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T361f21p1(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T361f21p0(TC* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T361f22(TC* ac, T0* C);
extern T1 T361f22ot1(TC* ac, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T529f14(TC* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1845f14(TC* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T1276f13(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1630f64p1(TC* ac, T0* C);
extern T1 T1630f64p1ot1(TC* ac, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1629f59(TC* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1629f59p1(TC* ac, T0* C);
extern T1 T1629f59p1ot1(TC* ac, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1628f57(TC* ac, T0* C);
extern T1 T1628f57ot1(TC* ac, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1627f65(TC* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1627f65p1(TC* ac, T0* C);
extern T1 T1627f65p1ot1(TC* ac, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1626f60(TC* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1626f60p1(TC* ac, T0* C);
extern T1 T1626f60p1ot1(TC* ac, T0* a1);
/* ET_ITERATION_CURSOR.reset */
extern void T1625f29(TC* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1624f33(TC* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1623f37(TC* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1622f29(TC* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1621f33(TC* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T1050f62(TC* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T1058f63(TC* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T1071f157(TC* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1620f29(TC* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T1619f30(TC* ac, T0* C);
extern T1 T1619f30ot1(TC* ac, T0* a1);
extern T1 T1619f30ot2(TC* ac, T0* a1);
/* ET_INFIX_EXPRESSION.reset */
extern void T1616f33(TC* ac, T0* C);
extern T1 T1616f33ot1(TC* ac, T0* a1);
extern T1 T1616f33ot2(TC* ac, T0* a1);
extern T1 T1616f33ot3(TC* ac, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1618f44(TC* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1617f44(TC* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1615f29(TC* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1614f29(TC* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1613f29(TC* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1612f29(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1611f34(TC* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T1611f35(TC* ac, T0* C);
extern T1 T1611f35ot1(TC* ac, T0* a1);
/* ET_CLASS_ASSERTION.reset */
extern void T1595f9(TC* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1571f56(TC* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1570f55(TC* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1569f48(TC* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1568f48(TC* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1566f51(TC* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1565f51(TC* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1564f68(TC* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1563f68(TC* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1562f68(TC* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1561f68(TC* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1560f55(TC* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1559f51(TC* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T1558f54(TC* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1557f52(TC* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T1353f37(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1350f38(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1350f38p1(TC* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T1350f39(TC* ac, T0* C);
extern T1 T1350f39ot1(TC* ac, T0* a1);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T1337f46(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset */
extern void T1337f46p1(TC* ac, T0* C);
/* ET_QUANTIFIER_EXPRESSION.reset_unfolded_form */
extern void T1337f47(TC* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T1315f30(TC* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T1287f38(TC* ac, T0* C);
extern T1 T1287f38ot1(TC* ac, T0* a1);
/* ET_INSPECT_EXPRESSION.reset */
extern void T1260f32(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION_LIST.reset */
extern void T1378f12(TC* ac, T0* C);
/* ET_WHEN_EXPRESSION.reset */
extern void T1375f11(TC* ac, T0* C);
/* ET_IF_EXPRESSION.reset */
extern void T1244f35(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T1193f12(TC* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T1190f12(TC* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T1320f8(TC* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T489f14(TC* ac, T0* C);
/* ET_PARENT.reset */
extern void T488f12(TC* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T495f10(TC* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T494f9(TC* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T1222f13(TC* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1581f9(TC* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T493f10(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T642f34(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T264f11(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1590f95(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1590f96(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1590f116(TC* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T261f15(TC* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T78f333(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T642f35(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1576f97(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T958f94(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1598f97(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T260f134(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T2026f28(TC* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T246f35(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T248f91(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T76f142(TC* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T500f23(TC* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T2025f25(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1600f92(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1599f97(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T499f94(TC* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1590f97(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T521f86(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T521f87(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T521f106(TC* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T521f88(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1589f89(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1589f90(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1589f112(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1589f91(TC* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1589f91p1(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T524f87(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T524f88(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T524f109(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T524f89(TC* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T524f89p1(TC* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T263f15(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f97(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f97p1(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T259f98(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T259f119(TC* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T259f99(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1587f88(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1587f88p1(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1587f89(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1587f109(TC* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1587f90(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1586f91(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1586f91p1(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1586f92(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1586f115(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1586f93(TC* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1586f93p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T531f89(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T531f89p1(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T531f90(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T531f112(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T531f91(TC* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T531f91p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T453f89(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T453f89p1(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T453f90(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T453f107(TC* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T453f91(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T451f88(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T451f88p1(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T451f89(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T451f104(TC* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T451f90(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T442f90(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T442f90p1(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T442f91(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T442f112(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T442f92(TC* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T442f92p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T443f85(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T443f85p1(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T443f86(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T443f100(TC* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T443f87(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T491f73(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T513f29(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T491f72(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T513f28(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T491f71(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T491f70(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T870f91(TC* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T515f4(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T505f184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T505f185(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T505f185ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T505f185ac2(TC* ac, T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T78f263(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T505f189(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1652f15(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1933f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1933f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1652f18(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1652f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1935f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1652f16(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1652f19(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1935f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1935f7(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T505f188(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T870f97(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T854f14(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1835c17(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T2123f35(TC* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1835f11(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T2123c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T2123f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T2123f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T2123f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T2123f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T2123f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T2123f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T2123f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T2123f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T2123f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T2172f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T2169c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T2172c2(TC* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1835c16(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T2123f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T2123f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T2123f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T2123f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T2123f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T2123f41(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T2123f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T2123f50(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T2123f49(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T2123f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T2123f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T2169f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T2169f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T2123f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T2123f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T2172f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T2169f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T2169f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T2123f39(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern void T2156f20(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_DFA_WILDCARD.compile */
extern T0* T2156c20(TC* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T2176c38(TC* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T2176f41(TC* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T2176f47(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T2183f6(TC* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T2176f46(TC* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T2222f7(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].value */
extern T0* T2272f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_item */
extern T0* T2272f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].position_of_key */
extern T6 T2272f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_item */
extern T6 T2272f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_item */
extern T6 T2272f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].hash_position */
extern T6 T2272f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_item */
extern T6 T2272f23(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T2214f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T2183f11(TC* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T2176f45(TC* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T2222f9(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].force_new */
extern void T2272f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_put */
extern void T2272f52(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_put */
extern void T2272f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T2269f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T2268f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T2268f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_put */
extern void T2272f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_put */
extern void T2272f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].resize */
extern void T2272f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].clashes_resize */
extern void T2272f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].special_integer_ */
extern T0* T2272f34(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].key_storage_resize */
extern void T2272f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].item_storage_resize */
extern void T2272f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T2269f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T2268f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].slots_resize */
extern void T2272f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_modulus */
extern T6 T2272f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_capacity */
extern T6 T2272f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].unset_found_item */
extern void T2272f42(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].replace_found_item */
extern void T2272f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].found */
extern T1 T2272f20(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search */
extern void T2272f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].search_position */
extern void T2272f47(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T2217f4(TC* ac, T0* C, T6 a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T2256f4(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T2176f37(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T2214f17(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T2216f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T2214f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T2215f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T2215f17(TC* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T2214f14(TC* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T2214f9(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T2214c16(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T2214f16ot1(TC* ac, T0* a1);
/* LX_RULE.set_useful */
extern void T2200f22(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T2183f17(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T2261f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T2261f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T2261f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T2183f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T2279f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].detachable_less_than */
extern T1 T2279f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].attached_less_than */
extern T1 T2279f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T2200f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T2183f10(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T2214f7(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T2261c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T2279c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T2215f25(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T2259f3(TC* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T2259f4(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T2259f5(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T2215f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T2282f1(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].detachable_less_than */
extern T1 T2282f2(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].attached_less_than */
extern T1 T2282f3(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T2225f9(TC* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T2214f8(TC* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T2259c2(TC* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T2282c4(TC* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T2215f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T2215f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T2183f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T2233f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T2213f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T2213f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T2183f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T2233f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T2213f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T2183f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T2183f8(TC* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T2225f6(TC* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T2225f8(TC* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T2225f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T2215f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T2215f23(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T2265f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T2263f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T2263f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T2215f28(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T2265f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T2263f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T2215f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T2215f11(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T2183c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T2183f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T2183f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T2234c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T2233f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T2213f7(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T2213c7(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T2233c3(TC* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T2222c8(TC* ac, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_map */
extern T0* T2272c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_with_equality_testers */
extern void T2272f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_sparse_container */
extern void T2272f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].set_internal_cursor */
extern void T2272f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].new_cursor */
extern T0* T2272f27(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_DFA_STATE, INTEGER_32].make */
extern T0* T2291c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_slots */
extern void T2272f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_clashes */
extern void T2272f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_key_storage */
extern void T2272f39(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_DFA_STATE, INTEGER_32].make_item_storage */
extern void T2272f38(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T2269f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T2268c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T2269c3(TC* ac);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T2214f13(TC* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T2214f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T2215f20(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].target */
extern T0* T2253f2(TC* ac, T0* C);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].target */
extern T0* T2252f2(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].target */
extern T0* T2249f1(TC* ac, T0* C);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2253f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2252f3(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.has */
extern T1 T2187f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.added */
extern T1 T2187f17(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.index_in_chunk */
extern T6 T2187f12(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk */
extern T0* T2187f11(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.chunk_index */
extern T6 T2187f14(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.masks */
extern T0* T2187f10(TC* ac, T0* C);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2249f2(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T2215f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T2215c19(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T2215f26(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T2215f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T2266c9(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T2265f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T2263c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T2265c3(TC* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T2217f8(TC* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T2214f18(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T2253f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2217f13(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T2217f13p1(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T2257f7(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T2257f6(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T2257f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T2257f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force */
extern void T357f86(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T2252f5(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2217f12(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T2217f12p1(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T2249f4(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2217f11(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T2217f11p1(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.new_lower */
extern T6 T2217f9(TC* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T2257f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T2257f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T2257f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T2217f7(TC* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T2217f6(TC* ac, T0* C);
/* LX_FULL_DFA.resize */
extern void T2176f50(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T2216f10(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T2217f5(TC* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T2256f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T2216f7(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T2217c10(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T2217f10p1(TC* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T2256f7(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2256c6(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T2256f8(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T2258c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T2258f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T2258f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T2258f6(TC* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T2257c4(TC* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T2176f40(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T2183f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T2183f18(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T2183f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T2234f5(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T2183f20(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T2183f19(TC* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T2200c14(TC* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T2200f11(TC* ac, T0* C);
/* LX_ACTION.make */
extern T0* T2255c2(TC* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T2200f12(TC* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T2198c6(TC* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T2215f21(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T2215f27(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T2215f31(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T2266f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T2215f30(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T2225f11(TC* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T2249c3(TC* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T2225c10(TC* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T2176f39(TC* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T2176f44(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T2176f49(TC* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T2198f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T2215f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T2223f7(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T2184f9(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T2176f48(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T2225f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T2224f35(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T2224f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T2224f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T2224f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T2224f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T2224f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T2224f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T2224f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T2224f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T2224f31(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T2224f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T2224f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T2197f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T2199f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T2224f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T2224f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T2224f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T2224f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T2224f39(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T2197f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T2199f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T2199f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T2224f36(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T671f1(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T2224f38(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T2224f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T2224f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T2224f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T2224c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T2224f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T2224f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T2224f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T2224f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T2275c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T2224f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T2224f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T2224f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T2224f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T2197f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T2199c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T2197c3(TC* ac);
/* KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T671c2(TC* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T2216c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T2216f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T2216f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T2270c3(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T2202f6(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T2202f5(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T2202f4(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T2202f3(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.new_lower */
extern T6 T2202f7(TC* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T2176f43(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].put */
extern void T2219f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_RULE].make_filled */
extern T0* T2219c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_RULE].make_filled_area */
extern void T2219f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].make_filled */
extern T0* T2220c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_RULE].fill_with */
extern void T2220f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_RULE].extend */
extern void T2220f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_RULE].make_empty */
extern void T2220f6(TC* ac, T0* C, T6 a1);
/* LX_FULL_DFA.build_rules */
extern void T2176f42(TC* ac, T0* C, T0* a1);
/* ARRAY [LX_RULE].put */
extern void T2212f5(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T2212c4(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T2212f6(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T2213c5(TC* ac, T0* a1, T6 a2);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T2218f1(TC* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T2212c8(TC* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T2212f10(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T2271f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T2271c4(TC* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T2271f6(TC* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T2212c7(TC* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T2212f9(TC* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T2218c2(TC* ac);
/* LX_START_CONDITIONS.names */
extern T0* T2184f7(TC* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T2184f6(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T2235f1(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T33c11(TC* ac, T0* a1);
/* ARRAY [STRING_8].set_area */
extern void T33f13(TC* ac, T0* C, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T2289f5(TC* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T2289c4(TC* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T2289f6(TC* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T33c10(TC* ac);
/* ARRAY [STRING_8].make_empty_area */
extern void T33f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T2184f11(TC* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T2235c2(TC* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T2174f247(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T2174f251(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T2174f264(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T2174f263(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T2174f262(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.twin */
extern T0* T2187f21(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.copy */
extern void T2187f30(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].twin */
extern T0* T740f7(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.chunk_of_ones */
extern T0* T2187f20(TC* ac, T0* C);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_filled */
extern T0* T2244c5(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].fill_with */
extern void T2244f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].extend */
extern void T2244f9(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].make_empty */
extern void T2244f8(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.remove_symbol_class */
extern void T2187f29(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.add_symbol_class */
extern void T2187f28(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].filled_with */
extern T1 T740f6(TC* ac, T0* C, T11 a1, T6 a2, T6 a3);
/* LX_SYMBOL_CLASS.attached_other_sets */
extern T0* T2187f19(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T2174f188(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_SYMBOL_CLASS.add_symbol */
extern void T2187f26(TC* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.attached_chunk */
extern T0* T2187f18(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T2174f304(TC* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T2232c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T2174f209(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2195f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T2196f4(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T2174f187(TC* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T2174f186(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.make */
extern T0* T2187c25(TC* ac, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.set_negated */
extern void T2187f27(TC* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force */
extern void T2190f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_put */
extern void T2190f47(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_32].force */
extern void T2193f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [STRING_32].fill_with */
extern void T2194f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_32].extend */
extern void T2194f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_put */
extern void T2190f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_put */
extern void T2190f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_item */
extern T6 T2190f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_item */
extern T6 T2190f30(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].hash_position */
extern T6 T2190f22(TC* ac, T0* C, T0* a1);
/* STRING_32.hash_code */
extern T6 T18f21(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].resize */
extern void T2190f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].clashes_resize */
extern void T2190f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].special_integer_ */
extern T0* T2190f32(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_resize */
extern void T2190f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].aliased_resized_area */
extern T0* T2193f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_32].aliased_resized_area */
extern T0* T2194f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_resize */
extern void T2190f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].key_storage_item */
extern T0* T2190f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].slots_resize */
extern void T2190f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_modulus */
extern T6 T2190f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_capacity */
extern T6 T2190f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_put */
extern void T2190f43(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search_position */
extern void T2190f42(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_32].test */
extern T1 T2191f1(TC* ac, T0* C, T0* a1, T0* a2);
/* STRING_32.is_equal */
extern T1 T18f20(TC* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].unset_found_item */
extern void T2190f41(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force_new */
extern void T2189f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_put */
extern void T2189f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_put */
extern void T2189f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_put */
extern void T2189f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_item */
extern T6 T2189f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].hash_position */
extern T6 T2189f19(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.hash_code */
extern T6 T2187f22(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_item */
extern T6 T2189f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].resize */
extern void T2189f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].clashes_resize */
extern void T2189f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2189f30(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_resize */
extern void T2189f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_resize */
extern void T2189f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2189f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2189f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].slots_resize */
extern void T2189f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_modulus */
extern T6 T2189f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_capacity */
extern T6 T2189f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].unset_found_item */
extern void T2189f44(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found_item */
extern T0* T2189f24(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].found */
extern T1 T2189f26(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search */
extern void T2189f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].search_position */
extern void T2189f46(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].test */
extern T1 T2240f1(TC* ac, T0* C, T0* a1, T0* a2);
/* LX_SYMBOL_CLASS.is_equal */
extern T1 T2187f24(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.same_symbol_class */
extern T1 T2187f23(TC* ac, T0* C, T0* a1);
/* SPECIAL [NATURAL_64].same_items */
extern T1 T740f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* DS_HASH_SET [LX_SYMBOL_CLASS].key_equality_tester */
extern T0* T2189f27(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T2195f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T2196f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T2196f10(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T2174f184(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T2174f238(TC* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T2198c12(TC* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T2252c4(TC* ac, T0* a1, T0* a2);
/* DS_HASH_SET [LX_SYMBOL_CLASS].force */
extern void T2189f39(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_utf8_character_class */
extern T0* T2174f240(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_nfa_from_unions_of_concatenations_of_symbol_classes */
extern T0* T2174f244(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].item */
extern T0* T2231f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].first */
extern T0* T2231f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].item */
extern T0* T2230f10(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].force_new */
extern void T2186f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_put */
extern void T2186f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_put */
extern void T2186f43(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].force */
extern void T2242f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].fill_with */
extern void T2239f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].extend */
extern void T2239f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_put */
extern void T2186f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_put */
extern void T2186f41(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_item */
extern T6 T2186f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].hash_position */
extern T6 T2186f28(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_item */
extern T6 T2186f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].resize */
extern void T2186f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].clashes_resize */
extern void T2186f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].special_integer_ */
extern T0* T2186f31(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_resize */
extern void T2186f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_resize */
extern void T2186f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2242f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].aliased_resized_area */
extern T0* T2239f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].key_storage_item */
extern T0* T2186f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].slots_resize */
extern void T2186f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_modulus */
extern T6 T2186f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_capacity */
extern T6 T2186f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].unset_found_item */
extern void T2186f39(TC* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].is_empty */
extern T1 T2230f6(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_n_byte_character_class */
extern void T2174f313(TC* ac, T0* C, T0* a1, T6 a2, T0* a3, T0* a4);
/* DS_HASH_SET [INTEGER_32].new_iterator */
extern T0* T357f39(TC* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_equal */
extern T1 T357f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].same_equality_tester */
extern T1 T357f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].any_ */
extern T0* T357f40(TC* ac, T0* C);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].put */
extern void T2228f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].item */
extern T0* T2228f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2228c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable DS_HASH_SET [INTEGER_32]].make_filled_area */
extern void T2228f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_filled */
extern T0* T2229c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].fill_with */
extern void T2229f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].extend */
extern void T2229f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_HASH_SET [INTEGER_32]].make_empty */
extern void T2229f6(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_concatenations_of_symbol_classes_from_utf8_2_byte_character_class */
extern void T2174f312(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [detachable LX_SYMBOL_CLASS].put */
extern void T2226f6(TC* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_SYMBOL_CLASS].item */
extern T0* T2226f4(TC* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2226c5(TC* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_SYMBOL_CLASS].make_filled_area */
extern void T2226f7(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_filled */
extern T0* T2227c4(TC* ac, T0* a1, T6 a2);
/* SPECIAL [detachable LX_SYMBOL_CLASS].fill_with */
extern void T2227f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable LX_SYMBOL_CLASS].extend */
extern void T2227f8(TC* ac, T0* C, T0* a1);
/* SPECIAL [detachable LX_SYMBOL_CLASS].make_empty */
extern void T2227f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force_last */
extern void T2230f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].force */
extern void T2286f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].fill_with */
extern void T2285f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extend */
extern void T2285f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].resize */
extern void T2230f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2286f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].aliased_resized_area */
extern T0* T2285f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_capacity */
extern T6 T2230f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].extendible */
extern T1 T2230f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].put_last */
extern void T2231f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].make */
extern T0* T2231c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2231f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2231f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2288c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T2195f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T2196c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T2195c3(TC* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2230c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].set_internal_cursor */
extern void T2230f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].new_cursor */
extern T0* T2230f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2287c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make */
extern T0* T2286f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].make_empty */
extern T0* T2285c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]].default_create */
extern T0* T2286c3(TC* ac);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found_item */
extern T0* T2186f33(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].item_storage_item */
extern T0* T2186f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].found */
extern T1 T2186f21(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search */
extern void T2186f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].search_position */
extern void T2186f38(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T2174f183(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].force_new */
extern void T2190f39(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found_item */
extern T0* T2190f28(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].item_storage_item */
extern T0* T2190f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].found */
extern T1 T2190f34(TC* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].search */
extern void T2190f38(TC* ac, T0* C, T0* a1);
/* LX_NFA.build_optional */
extern void T2198f11(TC* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T2225f12(TC* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T2198f5(TC* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T2198f10(TC* ac, T0* C);
/* LX_NFA.build_closure */
extern void T2198f9(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T2174f182(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T2174f239(TC* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T2198c13(TC* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T2253c4(TC* ac, T6 a1, T0* a2);
/* STRING_32.append_integer */
extern void T18f41(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T2174f181(TC* ac, T0* C, T6 a1, T0* a2);
/* STRING_8.item_code */
extern T6 T17f47(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T2174f179(TC* ac, T0* C);
/* DS_ARRAYED_STACK [BOOLEAN].item */
extern T1 T2192f5(TC* ac, T0* C);
/* LX_NFA.build_concatenation */
extern void T2198f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T2215f24(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T2215f29(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T2266f12(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T2215f33(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T2215f34(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T2266f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T2215f35(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T2266f4(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T2215f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T2266f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T2266f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T2215f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T2266f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T2266f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T2266f8(TC* ac, T0* C);
/* LX_NFA.build_union */
extern void T2198f7(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T2174f279(TC* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T2203c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T2174f278(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T2184f13(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.add_nfa */
extern void T2221f7(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITION.put_nfa */
extern void T2221f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T2223f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T2223f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T2223f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T2223f8(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITION.put_bol_nfa */
extern void T2221f8(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T2184f15(TC* ac, T0* C, T0* a1, T1 a2);
/* LX_START_CONDITIONS.is_empty */
extern T1 T2184f8(TC* ac, T0* C);
/* LX_DESCRIPTION.set_bol_needed */
extern void T2175f40(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T2175f39(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T2200f21(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T2200f20(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T2200f19(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T2200f18(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T2200f17(TC* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T2200f16(TC* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T2200f15(TC* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T2198f14(TC* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T2225f13(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.check_options */
extern void T2174f277(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T2174f296(TC* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T2210c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T2174f295(TC* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T2209c8(TC* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T2174f294(TC* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T2208c8(TC* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T2174f276(TC* ac, T0* C);
/* LX_DESCRIPTION.set_equiv_classes */
extern void T2175f38(TC* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T2187f33(TC* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T2202f9(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T2202f8(TC* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T2202f12(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].forth */
extern void T2201f11(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_forth */
extern void T2189f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].add_traversing_cursor */
extern void T2189f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_next_cursor */
extern void T2201f14(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_position */
extern void T2201f13(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].remove_traversing_cursor */
extern void T2189f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].set_after */
extern void T2201f12(TC* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T2202f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].item */
extern T0* T2201f5(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_item */
extern T0* T2189f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].after */
extern T1 T2201f7(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].start */
extern void T2201f10(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_start */
extern void T2189f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].cursor_off */
extern T1 T2189f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].off */
extern T1 T2201f8(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].is_empty */
extern T1 T2189f33(TC* ac, T0* C);
/* DS_HASH_SET [LX_SYMBOL_CLASS].new_cursor */
extern T0* T2189f25(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [LX_SYMBOL_CLASS].make */
extern T0* T2201c9(TC* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T2202c10(TC* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T2202f13(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_maximum_symbol_equivalence_class */
extern void T2174f275(TC* ac, T0* C);
/* LX_SYMBOL_CLASS.set_maximum_symbol_equivalence_class */
extern void T2187f32(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable SPECIAL [NATURAL_64]].upper */
extern T6 T2244f4(TC* ac, T0* C);
/* LX_DESCRIPTION.set_maximum_symbol */
extern void T2175f37(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T2174f261(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T2174f260(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T2174f258(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T2174f274(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T2174f273(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T2174f257(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T2174f272(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.character_text */
extern T0* T2174f208(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.unicode_text_item */
extern T3 T2174f221(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T2174f241(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.substring */
extern T0* T1554f14(TC* ac, T0* C, T6 a1, T6 a2);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T2174f227(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T2174f293(TC* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T2207c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T2174f292(TC* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T2206c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_unicode_character */
extern void T2174f291(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_character */
extern void T2174f299(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_invalid_character_error */
extern void T2174f282(TC* ac, T0* C, T0* a1);
/* LX_INVALID_UNICODE_CHARACTER_ERROR.make */
extern T0* T2204c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T2174f301(TC* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T2211c8(TC* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.process_hexadecimal_character */
extern void T2174f290(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_octal_character */
extern void T2174f289(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T2174f288(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T2174f287(TC* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T2205c8(TC* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_single_character */
extern void T2174f286(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T2174f201(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T2174f285(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T2174f298(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.character_class_with_name */
extern T0* T2174f195(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.unicode_text */
extern T0* T2174f194(TC* ac, T0* C);
/* KL_UNICODE_CHARACTER_BUFFER.unicode_substring */
extern T0* T1554f13(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.unicode_substring */
extern T0* T1522f10(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.append_unicode_substring_to_string */
extern void T1522f19(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* STRING_32.append_substring_general */
extern void T18f42(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T2174f284(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T2174f271(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T2174f283(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T2174f165(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T2174f270(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T2174f267(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.fill */
extern void T1717f15(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_index */
extern void T1717f13(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T2174f164(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T2174f163(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T2174f269(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T38f9(TC* ac, T0* C, T2 a1);
/* KL_STDERR_FILE.console */
extern T0* T38f1(TC* ac, T0* C);
/* STD_FILES.error */
extern T0* T470f2(TC* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T993c21(TC* ac, T0* a1);
/* KL_STDERR_FILE.io */
extern T0* T38f3(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.std */
extern T0* T2174f189(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.report_invalid_unicode_character_error */
extern void T2174f268(TC* ac, T0* C, T10 a1);
/* LX_WILDCARD_PARSER.yy_at_beginning_of_line */
extern T6 T2174f132(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T2174f129(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T2174f256(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T2174f265(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T2174f280(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T2174f297(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T2174f300(TC* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T2199f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T2199f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T2196f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T2196f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].keep_head */
extern void T2194f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].set_count */
extern void T2194f9(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T2174f259(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T2174f250(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T2174f255(TC* ac, T0* C);
/* YY_UNICODE_BUFFER.set_position */
extern void T1717f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* LX_WILDCARD_PARSER.new_unicode_string_buffer */
extern T0* T2174f147(TC* ac, T0* C, T0* a1);
/* YY_UNICODE_BUFFER.make */
extern T0* T1717c12(TC* ac, T0* a1);
/* YY_UNICODE_BUFFER.make_from_buffer */
extern void T1717f16(TC* ac, T0* C, T0* a1);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_string */
extern void T1554f22(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_UNICODE_CHARACTER_BUFFER.fill_from_substring */
extern void T1554f23(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_UNICODE_BUFFER.new_default_buffer */
extern T0* T1717f11(TC* ac, T0* C, T6 a1);
/* KL_UNICODE_CHARACTER_BUFFER.make */
extern T0* T1554c15(TC* ac, T6 a1);
/* STRING_32.make_filled */
extern T0* T18c37(TC* ac, T3 a1, T6 a2);
/* STRING_32.fill_character */
extern void T18f40(TC* ac, T0* C, T3 a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T2174c246(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2186c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_with_equality_testers */
extern void T2186f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_sparse_container */
extern void T2186f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2186f54(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].new_cursor */
extern T0* T2186f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make */
extern T0* T2243c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_slots */
extern void T2186f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_clashes */
extern void T2186f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_key_storage */
extern void T2186f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]], LX_SYMBOL_CLASS].make_item_storage */
extern void T2186f50(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make */
extern T0* T2242f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].make_empty */
extern T0* T2239c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [DS_ARRAYED_LIST [LX_SYMBOL_CLASS]]].default_create */
extern T0* T2242c3(TC* ac);
/* KL_EQUALITY_TESTER [LX_SYMBOL_CLASS].default_create */
extern T0* T2240c2(TC* ac);
/* LX_ACTION_FACTORY.make */
extern T0* T2185c1(TC* ac);
/* LX_START_CONDITIONS.make */
extern void T2184f12(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T2184c12(TC* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T2184f16(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T2184f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T2238c4(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T2237f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T2236c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T2237c2(TC* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T2174f249(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T2174f254(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T2174f178(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T2174f232(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T2174f177(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T2174f176(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T2174f174(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T2174f173(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T2174f172(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T2174f171(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T2174f169(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T2174f160(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T2174f159(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T2174f303(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T2174f314(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T2174f245(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T2174f302(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T2174f253(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [STRING_32].make */
extern T0* T2193f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_32].make_empty */
extern T0* T2194c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_32].default_create */
extern T0* T2193c3(TC* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T2174f248(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [BOOLEAN].force */
extern void T2192f9(TC* ac, T0* C, T1 a1);
/* DS_ARRAYED_STACK [BOOLEAN].resize */
extern void T2192f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].new_capacity */
extern T6 T2192f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].extendible */
extern T1 T2192f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [BOOLEAN].make */
extern T0* T2192c8(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern void T2189f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make */
extern T0* T2189c36(TC* ac, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].set_internal_cursor */
extern void T2189f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_slots */
extern void T2189f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_clashes */
extern void T2189f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_key_storage */
extern void T2189f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_item_storage */
extern void T2189f40(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_key_equality_tester */
extern void T2190f36(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_32_equality_tester */
extern T0* T2174f143(TC* ac, T0* C);
/* KL_EQUALITY_TESTER [STRING_32].default_create */
extern T0* T2191c2(TC* ac);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_map */
extern T0* T2190c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_with_equality_testers */
extern void T2190f40(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_sparse_container */
extern void T2190f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].set_internal_cursor */
extern void T2190f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].new_cursor */
extern T0* T2190f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_32].make */
extern T0* T2248c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_slots */
extern void T2190f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_clashes */
extern void T2190f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_key_storage */
extern void T2190f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_32].make_item_storage */
extern void T2190f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [LX_SYMBOL_CLASS].make_equal */
extern T0* T2189c35(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_key_equality_tester */
extern void T2188f21(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T2174f126(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_map */
extern T0* T2188c20(TC* ac, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_with_equality_testers */
extern void T2188f22(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_sparse_container */
extern void T2188f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].set_internal_cursor */
extern void T2188f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_cursor */
extern T0* T2188f17(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_32, STRING_8].make */
extern T0* T2246c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].unset_found_item */
extern void T2188f28(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_slots */
extern void T2188f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].new_modulus */
extern T6 T2188f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_clashes */
extern void T2188f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_key_storage */
extern void T2188f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_32, STRING_8].make_item_storage */
extern void T2188f24(TC* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T2174f252(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2174f266(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T2174f266p1(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T2174f281(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T2174f218(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T2174f242(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T2174f217(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T2174f216(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T2174f311(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T2174f315(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T2174f215(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T2174f214(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T2174f213(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template_3 */
extern void T2174f310(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_2 */
extern void T2174f309(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_chk_template_1 */
extern void T2174f308(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T2174f212(TC* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template_3 */
extern void T2174f307(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_2 */
extern void T2174f306(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_nxt_template_1 */
extern void T2174f305(TC* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T2174f139(TC* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T2175f36(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T2175f35(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T2175f34(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T2175f33(TC* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T2175c32(TC* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T2184c14(TC* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T2184f17(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T2184f18(TC* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T2184f21(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T2238f5(TC* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T2184f20(TC* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T2237f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T2236f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T2236f7(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T2184f19(TC* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T2221c6(TC* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T2223c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T2223f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T2223f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T2273c3(TC* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T139c12(TC* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T139f6(TC* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T2156f22(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1835f13(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1835f15(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1835f14(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1835f12(TC* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1835f10(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T505f62(TC* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T151c43(TC* ac, T0* a1);
/* ST_SPLITTER.make */
extern T0* T2030c11(TC* ac);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T505f187(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T505f187ac1(TC* ac, T0* a1, T0* a2);
extern T1 T505f187ot1(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T870f96(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T854f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T192f199(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T216f13(TC* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T193f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T63f288(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T505f193(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.full_name */
extern T0* T46f134(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T217f103(TC* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T217f104(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T634f100(TC* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T634f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.full_name */
extern T0* T921f100(TC* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T921f103(TC* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.full_name */
extern T0* T63f162(TC* ac, T0* C, T2 a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T59f603(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T2018c26(TC* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T59f188(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T41f603(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T41f188(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T870f100(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T870f95(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T870f94(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T854f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1652f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1934f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1933f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1933f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1652f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1934f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1933f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1652f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1652f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T870f98(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T854f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T854c9(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1652c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1652f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1652f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1935c5(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1934f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1933c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1934c3(TC* ac);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T870f62(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_overridden_group */
extern void T870f86(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_provider_groups */
extern void T870f82(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_visible_classes */
extern void T870f81(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_options */
extern void T870f78(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_options */
extern void T870f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_mappings */
extern void T870f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_renamings */
extern void T870f79(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_classname_prefix */
extern void T870f72(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T870f88(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_hidden */
extern void T870f71(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_read_only */
extern void T870f73(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T870f85(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T870f103(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_recursive */
extern void T870f74(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T870f102(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.make_relative */
extern T0* T870c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.is_less_equal */
extern T1 T52f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T870f37(TC* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T870f87(TC* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T854f10(TC* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T131f5(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T410f19(TC* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T131f19(TC* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T130f5(TC* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T130f21(TC* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T870f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T857f3(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T857f3ac1(TC* ac, T0* a1);
/* PREDICATE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2148f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T879f10(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T879f10ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T879f10ac2(TC* ac, T0* a1);
/* PREDICATE [TUPLE [RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2181f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T84f306(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1667f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1667f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1655f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1655f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T870f54(TC* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T870f40p1(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T505f186(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T505f192(TC* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T1005f28(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T505f192p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T505f192p0(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T505f192p2(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T505f61(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T505f191(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T505f198(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T505f204(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T505f116(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T505f199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T505f202(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.unicode_text_item */
extern T3 T505f113(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.utf8_text_substring */
extern T0* T505f111(TC* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.append_utf8_text_substring_to_string */
extern void T505f205(TC* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T505f201(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T505f109(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T505f108(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T505f107(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T505f106(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T505f105(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T505f104(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T505f100(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T505f203(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T505f197(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T505f200(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T505f92(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T505f196(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T505f142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T505f91(TC* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T505f90(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T505f195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.report_invalid_unicode_character_error */
extern void T505f194(TC* ac, T0* C, T10 a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T505f60(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_at_beginning_of_line */
extern T6 T505f72(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T505f140(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T505f58(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T505f129(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T505f190(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T192f119(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T192f119ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T192f119ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T192f119ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T192f120(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f164(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f164ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f164ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T63f164ac3(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T63f165(TC* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T46f136(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T46f136ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T46f136ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T46f136ac3(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T46f137(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T491f86(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T491f88(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T491f87(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T505f57(TC* ac, T0* C);
/* DS_CELL [detachable ET_CLASS].put */
extern void T2138f3(TC* ac, T0* C, T0* a1);
/* DS_CELL [detachable ET_CLASS].make */
extern T0* T2138c2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T870f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T870f39p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T870f55(TC* ac, T0* C, T0* a1);
/* KL_DIRECTORY.reset */
extern void T410f37(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T505f56(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T505f127(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T505f55(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T505f126(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T505f125(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T505f124(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T505f112(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T505f103(TC* ac, T0* C);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T870f99(TC* ac, T0* C, T1 a1);
/* ET_CLUSTERS.do_all */
extern void T485f4(TC* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T59f592(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T870f65(TC* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T192f113(TC* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T921f98(TC* ac, T0* C);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T41f592(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T921f154(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T921f154p1(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T921f154p1ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T921f154p1ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T921f154p1ac3(TC* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T921f154p1ac4(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T217f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T634f154(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T633f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1474f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1679f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1680f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1680f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1474f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1679f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1680f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1474f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1474f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T192f197(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T216f11(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T921f168(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T63f285(TC* ac, T0* C, T0* a1, T0* a2);
/* PREDICATE [TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T913f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T217f93(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T634f93(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T911f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T911f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T911f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T911f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T911f19(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T911f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T911f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T911f26(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T911f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T911f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T911f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T911f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T911f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T911f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T911f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T911f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T911f40(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T911f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T911f24(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T911f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T63f235(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac4(TC* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac5(TC* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac6(TC* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac7(TC* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac8(TC* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac9(TC* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac10(TC* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac11(TC* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac12(TC* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac13(TC* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac14(TC* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac15(TC* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac16(TC* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac17(TC* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac18(TC* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac19(TC* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac20(TC* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac21(TC* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac22(TC* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac23(TC* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac24(TC* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac25(TC* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac26(TC* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac27(TC* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac28(TC* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac29(TC* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac30(TC* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T63f235ac31(TC* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T938f6(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T938f8(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T938f10(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1694f11(TC* ac, T0* C);
/* DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T1025f73(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T491f36(TC* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T491f35(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T938f9(TC* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T938f7(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T938f4(TC* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T78f307(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T937f8(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T937f10(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T937f13(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1693f3(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T937f12(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T937f11(TC* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1692f6(TC* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1692f7(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T937f9(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T937f6(TC* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T78f306(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T936f7(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T936f9(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T936f12(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T936f13(TC* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1691f3(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T936f11(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T936f10(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T936f8(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T936f5(TC* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T78f305(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T935f7(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T935f9(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T935f11(TC* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1690f3(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T935f10(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T935f8(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T935f5(TC* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T78f304(TC* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T78f159(TC* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T78f292(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T264f13(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T263f17(TC* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T78f291(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T642f37(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T958f89(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_renames */
extern void T642f36(TC* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_renames */
extern void T1576f91(TC* ac, T0* C);
/* ET_CLASS_TYPE.reset_renames */
extern void T76f148(TC* ac, T0* C);
/* ET_TUPLE_TYPE.reset_renames */
extern void T260f137(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reset_renames */
extern void T248f93(TC* ac, T0* C);
/* ET_LIKE_CURRENT.reset_renames */
extern void T499f98(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_renames */
extern void T1600f99(TC* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_renames */
extern void T1599f104(TC* ac, T0* C);
/* ET_LIKE_FEATURE.reset_renames */
extern void T1598f106(TC* ac, T0* C);
/* ET_TYPE_CONSTRAINT_LIST.reset_renames */
extern void T1364f17(TC* ac, T0* C);
/* ET_TYPE_RENAME_CONSTRAINT.reset_renames */
extern void T1577f10(TC* ac, T0* C);
/* ET_CLASS.reset_renames */
extern void T78f339(TC* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_renames */
extern void T958f88(TC* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T264f12(TC* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T263f16(TC* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T78f290(TC* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T491f64(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T491f79(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T491f78(TC* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T938c5(TC* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T938f3(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T937c7(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1693c2(TC* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1692c5(TC* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1692f4(TC* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T937f7p1(TC* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T937f5(TC* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T936c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1691c2(TC* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T936f6p1(TC* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T936f4(TC* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T935c6(TC* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1690c2(TC* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T935f6p1(TC* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T935f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T63f243(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T63f243ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T46f202(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T217f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T217f161p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T634f161(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T634f161p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T192f191(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if */
extern void T921f162(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T63f281(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T63f242(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T63f242ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T63f150(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f150ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f150ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f150ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T63f150ac4(TC* ac, T0* a1);
/* PREDICATE [TUPLE].set_rout_disp_final */
extern void T1528f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PREDICATE [TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1527f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T1524f2(TC* ac, T0* C, T0* a1, T0* a2);
/* UT_TRISTATE.set_true */
extern void T1523f4(TC* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1523f2(TC* ac, T0* C);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T63f245(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T63f245ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T63f245ac2(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T46f205(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T217f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T634f165(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T192f195(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T921f166(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T63f284(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if */
extern void T46f204(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T231f61(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T217f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T634f164(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T192f194(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T921f165(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T63f283(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T63f142(TC* ac, T0* C);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T1524c1(TC* ac);
/* UT_TRISTATE.make_false */
extern T0* T1523c3(TC* ac);
/* UT_TRISTATE.set_false */
extern void T1523f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T63f234(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T63f234ac1(TC* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T63f234ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T63f234ac3(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T63f233(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f233ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f233ac2(TC* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f233ac3(TC* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T63f233ac4(TC* ac, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T193f8(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T193f8ac1(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T192f187(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T192f187ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T971f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T971f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T971f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T971f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T971f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T971f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T971f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T971f27(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T971f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T971f45(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1702f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1703f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T971f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T971f17(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T971f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T971f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T971f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T971f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T971f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1702f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1703f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1703f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T971f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T971f25(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T971f36(TC* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T971f18(TC* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T921f158(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T921f158ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T971f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T971c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T971f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T971f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1701c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T971f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T971f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T971f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T971f32(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1702f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1703c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1702c3(TC* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T216f7(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T216f7ac1(TC* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T217f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T217f157ac1(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T911f29(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T634f157(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T634f157ac1(TC* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T518f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T217f153(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T518f6(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T634f153(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T633f2(TC* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T633f3(TC* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T911f32(TC* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T633c5(TC* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1474c12(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1474f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1474f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1807c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1679f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1680c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1679c3(TC* ac);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T911c30(TC* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T911f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T911f17(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1678c4(TC* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T911f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T911f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T911f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T911f33(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T216f3(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_6 */
extern void T265f60(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_6_metrics */
extern void T265f72(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile */
extern void T69f57(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T69f57ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_PROCESSOR.compile */
extern T0* T69f57ac2(TC* ac, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_marked_classes */
extern void T69f69(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T69f83(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T69f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T69f103(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T69f104(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T69f105(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T69f40(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T69f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T69f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T69f102(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T69f101(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T69f82(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T69f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T69f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T69f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T69f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T69f88(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T69f87(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T69f86(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T69f81(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T69f85(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T69f84(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T69f100(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T69f99(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T69f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T69f97(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].keep_first */
extern void T513f18(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].replace */
extern void T513f17(TC* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T78f180(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T69f96(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T69f43(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T69f67(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile */
extern void T265f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T265f59ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM_MULTIPROCESSOR.compile */
extern T0* T265f59ac2(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_marked_classes */
extern void T265f71(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_3 */
extern void T265f83(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_3_metrics */
extern void T265f98(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_metrics */
extern void T265f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics_recursive */
extern void T265f107(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.report_processor_metrics */
extern void T265f108(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_processed_class_count_stack */
extern void T265f109(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count */
extern T6 T265f42(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].item */
extern T0* T666f7(TC* ac, T0* C, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.total_processed_class_count_recursive */
extern T6 T265f41(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_implementation_internal_error */
extern void T265f97(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T265f96(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern T0* T265f96ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_implementation_validity */
extern void T265f96p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.reset_processed_class_count */
extern void T265f105(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.reset_total_processed_class_count */
extern void T265f104(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_4 */
extern void T265f82(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_4_metrics */
extern void T265f95(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_interface_internal_error */
extern void T265f94(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.check_interface_validity */
extern void T265f93(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flattening_internal_error */
extern void T265f92(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.flatten_features */
extern void T265f91(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ancestors_internal_error */
extern void T265f90(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.build_ancestors */
extern void T265f89(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5 */
extern void T265f81(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.check_provider_validity */
extern void T265f88(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_degree_5_2 */
extern void T265f87(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_MULTIPROCESSOR.report_degree_5_2_metrics */
extern void T265f103(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_syntax_internal_error */
extern void T265f102(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T265f101(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern T0* T265f101ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_classes */
extern void T265f101p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.remove_unmarked_classes */
extern void T265f100(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T265f99(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern T0* T265f99ac1(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM_MULTIPROCESSOR.parse_marked_classes */
extern void T265f99p1(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.nested_benchmark_start_time */
extern T0* T265f45(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.compile_classes */
extern void T265f69(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.tokens */
extern T0* T265f40(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T68f92(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T68f90(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T68f90ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.mark_all_features */
extern void T68f94(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T63f226(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T63f226ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T63f226ac2(TC* ac, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T46f200(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T217f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T634f159(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T192f189(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_until */
extern void T921f160(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T63f280(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T69f55(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T69f55ac1(TC* ac, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern void T265f57(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_MULTIPROCESSOR.compile_all */
extern T0* T265f57ac1(TC* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T68f87(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T74c101(TC* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T272c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T272f35(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T272f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T272f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T272f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T673c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T272f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T272f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T272f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T272f43(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T74f83(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T74f92(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T74f72(TC* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T74f108(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T74f108p1(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T68f86(TC* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T68f85(TC* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T25f45(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T68f84(TC* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T25f44(TC* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T68f83(TC* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T68c82(TC* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T68f82ac1(TC* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T236c14(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T232c33(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_with_equality_testers */
extern void T232f36(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_sparse_container */
extern void T232f44(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].set_internal_cursor */
extern void T232f53(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].new_cursor */
extern T0* T232f29(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make */
extern T0* T654c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_slots */
extern void T232f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_clashes */
extern void T232f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_key_storage */
extern void T232f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_PRIMARY_TYPE, STRING_8].make_item_storage */
extern void T232f49(TC* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T68f89(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T69f54(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T69f66(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode */
extern void T265f56(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_dbc_mode_only */
extern void T265f68(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T69f53(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T69f65(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode */
extern void T265f55(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_flat_mode_only */
extern void T265f67(TC* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T25f43(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T69f44(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.benchmark_start_time */
extern T0* T265f46(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown */
extern void T69f52(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_metrics_shown_only */
extern void T69f64(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown */
extern void T265f54(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_metrics_shown_only */
extern void T265f66(TC* ac, T0* C, T1 a1);
/* GEC.is_metrics */
extern T1 T25f42(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown */
extern void T69f51(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_nested_benchmark_shown_only */
extern void T69f63(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown */
extern void T265f53(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_nested_benchmark_shown_only */
extern void T265f65(TC* ac, T0* C, T1 a1);
/* GEC.is_nested_benchmark */
extern T1 T25f41(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown */
extern void T69f50(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_benchmark_shown_only */
extern void T69f62(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown */
extern void T265f52(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_benchmark_shown_only */
extern void T265f64(TC* ac, T0* C, T1 a1);
/* GEC.is_silent */
extern T1 T25f32(TC* ac, T0* C);
/* GEC.is_no_benchmark */
extern T1 T25f40(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T69f49(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T69f61(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T69f80(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version */
extern void T265f51(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_ise_version_only */
extern void T265f63(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_default_keyword_usage_only */
extern void T265f80(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_ecma_version_only */
extern void T265f79(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_detachable_keyword_only */
extern void T265f78(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attached_keyword_only */
extern void T265f77(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_reference_keyword_only */
extern void T265f76(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_note_keyword_only */
extern void T265f75(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_use_attribute_keyword_only */
extern void T265f74(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T69f48(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T69f60(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler */
extern void T265f50(TC* ac, T0* C, T0* a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_error_handler_only */
extern void T265f62(TC* ac, T0* C, T0* a1);
/* GEC.thread_count */
extern T6 T25f39(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_verbose */
extern void T59f191(TC* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.set_verbose */
extern void T41f191(TC* ac, T0* C, T1 a1);
/* GEC.is_verbose */
extern T1 T25f38(TC* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T59f190(TC* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T41f190(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T42f63(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T42f65(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T42f21(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T42f70(TC* ac, T0* C, T14 a1);
/* GEC.parse_ecf_file */
extern void T25f67(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T748f68(TC* ac, T0* C);
/* UC_STRING.to_boolean */
extern T1 T329f68(TC* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f45(TC* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T748f66(TC* ac, T0* C);
/* UC_STRING.is_boolean */
extern T1 T329f67(TC* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f44(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T62f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T61f221(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T61f221ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T61f221ac2(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* PROCEDURE [TUPLE [XM_ELEMENT, detachable XM_POSITION_TABLE, STRING_8]].set_rout_disp_final */
extern void T176f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.build_system */
extern void T61f224(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T61f224ac1(TC* ac);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T213f35(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T192f127(TC* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T921f167(TC* ac, T0* C, T1 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T168f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T181f36(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T181f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T181f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T181f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T181f42(TC* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T563f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T563f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T181f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T181f40(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T566f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T566f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T179f44(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T179f55(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T179f54(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T179f53(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T179f52(TC* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T559f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T559f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T179f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T179f50(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T558f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T558f9(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T61f228(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T181f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T181f51(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T181f50(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T567f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T563f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T563f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T181f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T181f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T181f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T181f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T181f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T181f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T181f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T181f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T181f54(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T567f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T563f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T181f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T181f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T181f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T181f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T181f21(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T167f2(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T217c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T217f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T217f110(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T217f152(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T217f151(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T217f150(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T217f149(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T217f148(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T217f147(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T217f146(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T217f145(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T217f144(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T217f143(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T217f142(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T217f141(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T217f140(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T217f139(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T217f138(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T217f137(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T217f136(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T217f135(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T217f134(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T217f133(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T217f132(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T217f131(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T217f130(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T217f129(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T217f128(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T217f127(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T217f126(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T217f125(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T217f124(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T217f123(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T217f122(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T217f121(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T217f120(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T217f119(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T217f118(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T217f117(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T217f116(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T217f115(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T217f114(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T217f113(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T217f112(TC* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T491f53(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1003f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1003f23(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1003f30(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1003f29(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1003f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T217f111(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T217f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T217f90(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T217f108(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T217f107(TC* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T217f89(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T219f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T181f24(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T181f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T181f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T181f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T181f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T61f26(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T61f27(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T61f19(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T61f18(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T61f34(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T219f22(TC* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T216f2(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_class_mappings */
extern void T64f58(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T63f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T491f80(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T192f182(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_iterator */
extern T0* T220f44(TC* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T64f57(TC* ac, T0* C, T0* a1);
extern T1 T64f57ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T63f251(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T63f250(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T192f181(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_iteration_mode */
extern void T63f249(TC* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_iteration_mode */
extern void T192f180(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T63f248(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T192f179(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T64f30(TC* ac, T0* C);
/* ET_ECF_OPTIONS.value */
extern T0* T479f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_capabilities */
extern void T64f64(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T63f263(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T63f262(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_scoop_mode */
extern void T63f261(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T63f260(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T64f31(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.support_value */
extern T0* T66f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.use_value */
extern T0* T66f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found_item */
extern T0* T227f32(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_item */
extern T0* T227f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].found */
extern T1 T227f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search */
extern void T227f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].search_position */
extern void T227f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].hash_position */
extern T6 T227f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_item */
extern T0* T227f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_item */
extern T6 T227f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_item */
extern T6 T227f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_settings */
extern void T64f63(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_inlining_size */
extern void T63f259(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_inlining_mode */
extern void T63f258(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_line_generation_mode */
extern void T63f257(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_total_order_on_reals_mode */
extern void T63f256(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T63f255(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_check_for_void_target_mode */
extern void T63f254(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T63f253(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.fill_root */
extern void T64f62(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T885f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T63f277(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T63f276(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T886f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T63f278(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T179f43(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T179f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T179f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T558f11(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T179f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T179f25(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T179f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T179f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T179f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T179f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T179f29(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T558f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T179f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T179f48(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T179f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T558f7(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T179f23(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T61f227(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T61f227ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_library */
extern void T61f231(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T212f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T61f32(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T179f46(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T179f61(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T179f60(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T562f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T559f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T559f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T179f59(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T179f58(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T179f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T179f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T179f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T179f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T179f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T179f67(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T179f66(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T562f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T559f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T179f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T179f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T179f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T179f36(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T61f232(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f232ot1(TC* ac, T0* a1);
extern T1 T61f232ot2(TC* ac, T0* a1);
/* ET_ECF_LIBRARY.set_library_target */
extern void T192f129(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T190f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_library_target */
extern void T63f224(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T62f37(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T62f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T62f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T62f32p1(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T62f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T221f9(TC* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T221f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T221f6(TC* ac, T0* C);
/* ET_ECF_ERROR.string_ */
extern T0* T221f8(TC* ac, T0* C);
/* ET_ECF_ERROR.make_eltm */
extern T0* T221c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T221f14(TC* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T221f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T221f116(TC* ac, T0* C, T0* a1);
extern T1 T221f116ot1(TC* ac, T0* a1);
/* ET_ECF_TARGET.parent_path */
extern T0* T64f32(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].put_last */
extern void T977f16(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].force */
extern void T1709f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].fill_with */
extern void T1708f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET_PARENT].extend */
extern void T1708f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern void T977f13(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make */
extern T0* T977c13(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T977f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T977f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET_PARENT].make */
extern T0* T1710c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].make */
extern T0* T1709f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET_PARENT].make_empty */
extern T0* T1708c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].default_create */
extern T0* T1709c3(TC* ac);
/* ET_ECF_ERROR.add_parent_path */
extern void T221f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].item */
extern T0* T977f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].force_last */
extern void T977f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].resize */
extern void T977f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1709f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1708f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T977f6(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].extendible */
extern T1 T977f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].make_default */
extern T0* T977c11(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T977f8(TC* ac, T0* C);
/* ET_ECF_LIBRARY.library */
extern T0* T192f12(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T190f3(TC* ac, T0* C);
/* ET_ECF_SYSTEM.universe */
extern T0* T63f14(TC* ac, T0* C);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T208f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T208f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T974f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_etam_error */
extern void T62f36(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_etam */
extern T0* T221c104(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.is_empty */
extern T1 T208f5(TC* ac, T0* C);
/* ET_ECF_TARGETS.count */
extern T6 T208f3(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T482f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T962f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T962f19(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T482f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T962f20(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T482f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_LIBRARY.set_uuid */
extern void T192f128(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T190f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T63f223(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T62f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatb */
extern T0* T221c103(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T61f53(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T174f2(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T966f11(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T967f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T967f13(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T966f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T967f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T966f12(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T966f10(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T967f11(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T966f13(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T967f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T966f7(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T966f6(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T966f9(TC* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T967f10(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T967f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T966c8(TC* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T174f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T61f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T190f18(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_read_only */
extern void T63f222(TC* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T61f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_targets */
extern void T192f126(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T190f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_targets */
extern void T63f221(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T61f48(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ECF_TARGETS.put_last */
extern void T208f9(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T974f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T627f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T625f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T625f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T974f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T627f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T625f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T974f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T974f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T167f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T208c8(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T974f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T974c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T974f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T974f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1704c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T627f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T625c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T627c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T61f80(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T61f80ot1(TC* ac, T0* a1);
extern T1 T61f80ot2(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_notes */
extern void T64f55(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_post_compile_actions */
extern void T64f54(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_pre_compile_actions */
extern void T64f53(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_resources */
extern void T64f52(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_objects */
extern void T64f51(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_makes */
extern void T64f50(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_linker_flags */
extern void T64f49(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T64f48(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T64f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_cflags */
extern void T64f46(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_namespaces */
extern void T64f45(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_class_mappings */
extern void T64f44(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T64f43(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T64f42(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T64f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T64f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T61f253(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T61f255(TC* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T479f15(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T479f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T65f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T61f252(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T61f76(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T66f14(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T66f15(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].force_last */
extern void T227f42(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_put */
extern void T227f50(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_put */
extern void T227f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_put */
extern void T227f48(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].resize */
extern void T227f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].clashes_resize */
extern void T227f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].special_integer_ */
extern T0* T227f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].key_storage_resize */
extern void T227f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_resize */
extern void T227f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].slots_resize */
extern void T227f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_modulus */
extern T6 T227f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_capacity */
extern T6 T227f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].item_storage_put */
extern void T227f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].unset_found_item */
extern void T227f44(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T66f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T61f62(TC* ac, T0* C);
/* ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T66f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T66f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T66f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_abstract */
extern void T64f39(TC* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.set_version */
extern void T64f38(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T61f126(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VERSION.set_copyright */
extern void T869f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_company */
extern void T869f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_product */
extern void T869f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.make_major */
extern T0* T869c11(TC* ac, T6 a1);
/* ET_ECF_VERSION.make_major_minor */
extern T0* T869c10(TC* ac, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T62f39(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eats */
extern T0* T221c107(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VERSION.make_major_minor_release */
extern T0* T869c9(TC* ac, T6 a1, T6 a2, T6 a3);
/* ET_ECF_VERSION.make */
extern T0* T869c8(TC* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T62f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eati */
extern T0* T221c106(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T61f251(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T67f21(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T67f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T61f250(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T65f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T64f37(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T61f122(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T885f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T885f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T167f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T885c4(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T167f25(TC* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T886c1(TC* ac);
/* ET_ECF_TARGET.set_precompiled_library */
extern void T64f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T61f120(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T61f120ac1(TC* ac, T0* a1);
extern T1 T61f120ot1(TC* ac, T0* a1);
extern T1 T61f120ot2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T884f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T867f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T867f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T867f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T867f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].do_all */
extern void T881f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_item */
extern T0* T881f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_item */
extern T6 T881f28(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_options */
extern void T867f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T867f24(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T867f23(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T867f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T867f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T61f150(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].force_last */
extern void T882f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].force */
extern void T1673f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].fill_with */
extern void T1674f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].extend */
extern void T1674f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].resize */
extern void T882f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1673f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1674f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T882f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T882f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T167f44(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].make */
extern T0* T882c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T882f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T882f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1675c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].make */
extern T0* T1673f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T1674c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T1673c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T61f182(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T889f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T889f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T889f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T167f47(TC* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.make */
extern T0* T889c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T61f148(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T61f256(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T62f47(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatd */
extern T0* T221c115(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T167f43(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T167f55(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_options */
extern T0* T61f146(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_options */
extern T0* T167f42(TC* ac, T0* C);
/* ET_ECF_OPTIONS.make */
extern T0* T479c14(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T479f14ac1(TC* ac, T0* a1);
/* FUNCTION [TUPLE [STRING_8], INTEGER_32].set_rout_disp_final */
extern void T224f8(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T220f51(TC* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T222c3(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T479f10(TC* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T479f9(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T867f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T61f145(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].force_last */
extern void T881f37(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_put */
extern void T881f46(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_put */
extern void T881f45(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_put */
extern void T881f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_item */
extern T6 T881f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].hash_position */
extern T6 T881f23(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].resize */
extern void T881f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].clashes_resize */
extern void T881f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].special_integer_ */
extern T0* T881f31(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_resize */
extern void T881f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_resize */
extern void T881f49(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1671f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1668f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].key_storage_item */
extern T0* T881f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].slots_resize */
extern void T881f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_modulus */
extern T6 T881f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_capacity */
extern T6 T881f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].item_storage_put */
extern void T881f42(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].force */
extern void T1671f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].fill_with */
extern void T1668f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_OPTIONS].extend */
extern void T1668f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search_position */
extern void T881f40(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].unset_found_item */
extern void T881f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found_item */
extern T0* T881f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].found */
extern T1 T881f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].search */
extern void T881f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_class_options */
extern T0* T167f41(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_key_equality_tester */
extern void T881f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_map */
extern T0* T881c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_with_equality_testers */
extern void T881f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_sparse_container */
extern void T881f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].set_internal_cursor */
extern void T881f56(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].new_cursor */
extern T0* T881f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_OPTIONS, STRING_8].make */
extern T0* T1672c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_slots */
extern void T881f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_clashes */
extern void T881f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_key_storage */
extern void T881f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_OPTIONS, STRING_8].make_item_storage */
extern void T881f52(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].make */
extern T0* T1671f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_OPTIONS].make_empty */
extern T0* T1668c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_OPTIONS].default_create */
extern T0* T1671c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T61f143(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T61f143ot1(TC* ac, T0* a1);
extern T1 T61f143ot2(TC* ac, T0* a1);
/* ET_ECF_ORED_CONDITIONS.put_last */
extern void T887f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].force_last */
extern void T1676f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].force */
extern void T1972f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T1973f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].extend */
extern void T1973f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].resize */
extern void T1676f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1972f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1973f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T1676f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T1676f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T167f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.make */
extern T0* T887c6(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].put_last */
extern void T1676f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1676c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T1676f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T1676f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1974c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1972f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T1973c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T1972c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T61f181(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f181ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T61f199(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T62f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T221c114(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T900c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T899c7(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T62f45(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T221c113(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T62f44(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T221c112(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T62f43(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T221c111(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T62f42(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T221c110(TC* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor_revision */
extern T0* T52c21(TC* ac, T6 a1, T6 a2, T6 a3);
/* UT_VERSION.make_major_minor */
extern T0* T52c18(TC* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T52c17(TC* ac, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T61f198(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T62f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatn */
extern T0* T221c109(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T167f54(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T897c9(TC* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T897c8(TC* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T62f40(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatx */
extern T0* T221c108(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T61f196(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T167f49(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T892c18(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T892c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T61f194(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T167f53(TC* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T896c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T61f192(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T167f52(TC* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T895c5(TC* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T61f190(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T167f51(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T894c13(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T894c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_void_safety_condition */
extern T0* T61f188(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_void_safety_condition */
extern T0* T167f50(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_VOID_SAFETY_CONDITION.make */
extern T0* T893c18(TC* ac, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.make_excluded */
extern T0* T893c17(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T61f186(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.put_last */
extern void T888f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].force_last */
extern void T1677f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].force */
extern void T1975f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].fill_with */
extern void T1976f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION_ITEM].extend */
extern void T1976f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].resize */
extern void T1677f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1975f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1976f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T1677f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].extendible */
extern T1 T1677f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T61f184(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T167f48(TC* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T891c8(TC* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T891c7(TC* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T167f46(TC* ac, T0* C);
/* ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T888c6(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].make */
extern T0* T1677c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T1677f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T1677f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION_ITEM].make */
extern T0* T1977c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].make */
extern T0* T1975f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T1976c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION_ITEM].default_create */
extern T0* T1975c3(TC* ac);
/* ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T167f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T867c19(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T867f30(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T867f18(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T77f241(TC* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T921c106(TC* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T921f107(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_kernel_types */
extern void T921f111(TC* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T921f153(TC* ac, T0* C);
/* ET_LIBRARY.tokens */
extern T0* T921f95(TC* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T921f152(TC* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T921f151(TC* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T921f150(TC* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T921f149(TC* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T921f148(TC* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T921f147(TC* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T921f146(TC* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T921f145(TC* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T921f144(TC* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T921f143(TC* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T921f142(TC* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T921f141(TC* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T921f140(TC* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T921f139(TC* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T921f138(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T921f137(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T921f136(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T921f135(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T921f134(TC* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T921f133(TC* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T921f132(TC* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T921f131(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T921f130(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T921f129(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T921f128(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T921f127(TC* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T921f126(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T921f125(TC* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_8_type */
extern void T921f124(TC* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T921f123(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T921f122(TC* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T921f121(TC* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T921f120(TC* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T921f119(TC* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T921f118(TC* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T921f117(TC* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T921f116(TC* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T921f115(TC* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T921f114(TC* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T921f113(TC* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T921f112(TC* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T921f110(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T921f91(TC* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T921f109(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T921f108(TC* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T921f108p1(TC* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T921f90(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T867f17(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T61f117(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].force_last */
extern void T866f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].force */
extern void T1664f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].fill_with */
extern void T1665f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ACTION].extend */
extern void T1665f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].resize */
extern void T866f12(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1664f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ACTION].aliased_resized_area */
extern T0* T1665f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_capacity */
extern T6 T866f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].extendible */
extern T1 T866f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_actions */
extern T0* T167f23(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].make */
extern T0* T866c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].set_internal_cursor */
extern void T866f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ACTION].new_cursor */
extern T0* T866f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ACTION].make */
extern T0* T1666c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].make */
extern T0* T1664f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ACTION].make_empty */
extern T0* T1665c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ACTION].default_create */
extern T0* T1664c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T61f141(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f141ot1(TC* ac, T0* a1);
extern T1 T61f141ot2(TC* ac, T0* a1);
/* ET_ECF_ACTION.set_conditions */
extern void T880f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_working_directory */
extern void T880f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_must_succeed */
extern void T880f8(TC* ac, T0* C, T1 a1);
/* ET_ECF_ACTION.set_description */
extern void T880f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_action */
extern T0* T167f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.make */
extern T0* T880c6(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_options */
extern void T61f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T61f249ot1(TC* ac, T0* a1);
extern T1 T61f249ot2(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_description */
extern void T479f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_warning */
extern void T61f263(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_warning_value */
extern void T479f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_warning_value */
extern T0* T479f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_1_21_0 */
extern T0* T61f67(TC* ac, T0* C);
/* ET_ECF_LIBRARY.ecf_version */
extern T0* T192f4(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T190f5(TC* ac, T0* C);
/* ET_ECF_SYSTEM.ecf_version */
extern T0* T63f125(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.add_debug */
extern void T61f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_debug_value */
extern void T479f18(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_debug_value */
extern T0* T479f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T61f261(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T61f261ot1(TC* ac, T0* a1);
/* ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T479f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T479f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T61f114(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T61f254(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T167f22(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T61f112(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T855f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1653f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T1937f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1936f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1936f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1653f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1937f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1936f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1653f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1653f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T167f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T855c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1653f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1653c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1653f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1653f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1938c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1937f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1936c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1937c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T61f140(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T61f140ac1(TC* ac, T0* a1);
extern T1 T61f140ot1(TC* ac, T0* a1);
extern T1 T61f140ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T213f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T213f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T213f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T213f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T213f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_options */
extern void T213f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T213f26(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T213f25(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T213f24(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T213f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T167f38(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T213c22(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T213f33(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T213f18(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T213f17(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T61f110(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T167f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T854c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1652f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T61f139(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T61f139ac1(TC* ac, T0* a1);
extern T1 T61f139ot1(TC* ac, T0* a1);
extern T1 T61f139ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_conditions */
extern void T870f83(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T870f76(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T870f75(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T61f170(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T61f257(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T167f45(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T61f177(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_description */
extern void T870f70(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T167f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.make */
extern T0* T870c69(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T61f108(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_FILE_RULES.put_last */
extern void T857f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1655f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T1942f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T1943f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T1943f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1655f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1942f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1943f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1655f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1655f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T167f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T857c4(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1655f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1655c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1655f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1655f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T1944c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T1942f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T1943c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T1942c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T61f138(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f138ot1(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.set_description */
extern void T879f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULE.set_conditions */
extern void T879f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T167f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T879c11(TC* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T879f7(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T266f14(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1667f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1969f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1970f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1970f7(TC* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T84f307(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T266f6(TC* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T879f8(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T266f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1667c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1667f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1667f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1971c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1969f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1970c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1969c2(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T61f106(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T865f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T1663f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].force */
extern void T1966f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T1967f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T1967f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T1663f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1966f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1967f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T1663f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T1663f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T167f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T865c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T1663f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1663c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T1663f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T1663f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1968c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1966f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T1967c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T1966c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T61f137(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f137ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T878f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T878f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T167f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T878c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T61f104(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T864f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1662f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T1963f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1964f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1964f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1662f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1963f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1964f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1662f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1662f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T167f18(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T864c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1662f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1662c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1662f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1662f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1965c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1963f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1964c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1963c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T61f136(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f136ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T877f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T877f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T167f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T877c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T61f102(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_MAKES.put_last */
extern void T863f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].force_last */
extern void T1661f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].force */
extern void T1960f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T1961f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].extend */
extern void T1961f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].resize */
extern void T1661f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1960f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1961f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T1661f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T1661f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T167f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKES.make */
extern T0* T863c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].put_last */
extern void T1661f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1661c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T1661f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T1661f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1962c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1960f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T1961c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T1960c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T61f135(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f135ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T876f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_description */
extern void T876f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_make */
extern T0* T167f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.make */
extern T0* T876c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T61f100(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T862f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T1660f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T1957f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T1958f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T1958f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T1660f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1957f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1958f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T1660f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T1660f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T167f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T862c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T1660f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1660c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T1660f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T1660f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1959c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1957f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T1958c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T1957c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T61f134(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f134ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T875f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T875f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T167f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T875c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T61f98(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T861f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1659f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1954f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1955f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1955f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1659f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1954f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1955f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1659f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1659f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T167f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T861c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1659f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1659c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1659f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1659f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1956c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1954f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1955c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1954c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T61f133(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f133ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T874f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T874f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T167f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T874c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T61f96(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T860f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1658f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1951f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1952f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1952f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1658f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1951f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1952f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1658f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1658f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T167f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T860c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1658f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1658c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1658f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1658f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1953c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1951f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1952c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1951c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T61f132(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f132ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T873f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T873f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T167f31(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T873c9(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T61f94(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T859f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T1657f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].force */
extern void T1948f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T1949f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].extend */
extern void T1949f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].resize */
extern void T1657f15(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1948f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1949f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T1657f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T1657f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T167f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T859c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T1657f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1657c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T1657f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T1657f9(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1950c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1948f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T1949c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T1948c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T61f131(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f131ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T872f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T872f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T167f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T872c5(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_namespaces */
extern T0* T61f92(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_NAMESPACES.put_last */
extern void T858f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].force_last */
extern void T1656f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].force */
extern void T1945f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NAMESPACE].fill_with */
extern void T1946f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NAMESPACE].extend */
extern void T1946f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].resize */
extern void T1656f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].aliased_resized_area */
extern T0* T1945f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NAMESPACE].aliased_resized_area */
extern T0* T1946f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].new_capacity */
extern T6 T1656f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].extendible */
extern T1 T1656f6(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_namespaces */
extern T0* T167f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACES.make */
extern T0* T858c3(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].put_last */
extern void T1656f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].make */
extern T0* T1656c9(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].set_internal_cursor */
extern void T1656f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NAMESPACE].new_cursor */
extern T0* T1656f8(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NAMESPACE].make */
extern T0* T1947c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].make */
extern T0* T1945f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_NAMESPACE].make_empty */
extern T0* T1946c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NAMESPACE].default_create */
extern T0* T1945c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_namespace */
extern T0* T61f130(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f130ot1(TC* ac, T0* a1);
extern T1 T61f130ot2(TC* ac, T0* a1);
/* ET_ECF_NAMESPACE.set_notes */
extern void T871f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_class_renamings */
extern void T871f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_classname_prefix */
extern void T871f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.set_description */
extern void T871f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_namespace */
extern T0* T167f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_NAMESPACE.make */
extern T0* T871c6(TC* ac, T0* a1);
/* ET_ECF_TARGET.set_description */
extern void T64f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T61f90(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T61f129(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T61f129ac1(TC* ac, T0* a1);
extern T1 T61f129ot1(TC* ac, T0* a1);
extern T1 T61f129ot2(TC* ac, T0* a1);
/* ET_ECF_CLUSTER.set_notes */
extern void T870f84(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T61f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T61f248ot1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T61f87(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T856f6(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1654f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1940f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1939f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1939f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1654f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1940f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1939f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1654f8(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1654f7(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T167f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T856c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1654f11(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1654c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1654f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1654f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1941c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1940f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1939c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1940c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T61f128(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T61f128ac1(TC* ac, T0* a1);
extern T1 T61f128ot1(TC* ac, T0* a1);
extern T1 T61f128ot2(TC* ac, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T219f36(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T219f35(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T219f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T219f33(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_options */
extern void T219f32(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T219f31(TC* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T219f30(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T219f29(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T219f28(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T219f27(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T219f26(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T219f25(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T167f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T219c24(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T219f37(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T219f20(TC* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T77f242(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T634c105(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T634f106(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T634f110(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T634f152(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T634f151(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T634f150(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T634f149(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T634f148(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T634f147(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T634f146(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T634f145(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T634f144(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T634f143(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T634f142(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T634f141(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T634f140(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T634f139(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T634f138(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T634f137(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T634f136(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T634f135(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T634f134(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T634f133(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T634f132(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T634f131(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T634f130(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T634f129(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T634f128(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T634f127(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T634f126(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T634f125(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T634f124(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_8_type */
extern void T634f123(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T634f122(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T634f121(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T634f120(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T634f119(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T634f118(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T634f117(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T634f116(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T634f115(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T634f114(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T634f113(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T634f112(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T634f111(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T634f109(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T634f90(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T634f108(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T634f107(TC* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T634f89(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T219f19(TC* ac, T0* C);
/* ET_ECF_TARGET.set_parent */
extern void T64f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T64f29(TC* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T67f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET_PARENT.make */
extern T0* T205c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.set_secondary_options */
extern void T479f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T66f17(TC* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_secondary_settings */
extern void T65f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T167f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.make */
extern T0* T64c33(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.make */
extern T0* T66c13(TC* ac);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.make */
extern T0* T66f13ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_hash_function */
extern void T227f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.string_ */
extern T0* T66f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_key_equality_tester */
extern void T227f40(TC* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T66f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_map */
extern T0* T227c39(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_with_equality_testers */
extern void T227f43(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_sparse_container */
extern void T227f51(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].set_internal_cursor */
extern void T227f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_cursor */
extern T0* T227f28(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].make */
extern T0* T640c10(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_slots */
extern void T227f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_clashes */
extern void T227f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_key_storage */
extern void T227f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].make_item_storage */
extern void T227f56(TC* ac, T0* C, T6 a1);
/* ET_ECF_SETTINGS.make */
extern T0* T65c7(TC* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T65f7ac1(TC* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T65f3(TC* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T65f5(TC* ac, T0* C);
/* ET_ECF_VARIABLES.make */
extern T0* T67c20(TC* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T67f20ac1(TC* ac, T0* a1);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T67f4(TC* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T67f3(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_notes */
extern void T192f125(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T190f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_notes */
extern void T63f220(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T61f46(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].force_last */
extern void T480f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].force */
extern void T994f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].fill_with */
extern void T995f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].extend */
extern void T995f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].resize */
extern void T480f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T994f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T995f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T480f7(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T480f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_notes */
extern T0* T167f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern void T480f10(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make */
extern T0* T480c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T480f12(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T480f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_NOTE_ELEMENT].make */
extern T0* T996c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].make */
extern T0* T994f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T995c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T994c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T61f79(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T61f79ot1(TC* ac, T0* a1);
extern T1 T61f79ot2(TC* ac, T0* a1);
/* ET_ECF_NOTE_ELEMENT.set_content */
extern void T853f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_element */
extern void T853f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T853f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_note */
extern T0* T167f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.make */
extern T0* T853c7(TC* ac, T0* a1);
/* Creation of agent #1 in feature ET_ECF_NOTE_ELEMENT.make */
extern T0* T853f7ac1(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T480c14(TC* ac);
/* DS_ARRAYED_LIST [ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T480f9(TC* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T853f6(TC* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T853f5(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T220c94(TC* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T220f46(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_description */
extern void T192f124(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_description */
extern void T190f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_description */
extern void T63f219(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T173f14(TC* ac, T0* C);
extern T1 T173f14ot1(TC* ac, T0* a1);
/* XM_ELEMENT.string_ */
extern T0* T173f15(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T61f20(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T482f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T482f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T962f14(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T962f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T482f9(TC* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T173f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T962f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T482c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T61f43(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T61f78(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T61f247(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T61f246(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T61f245(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T61f244(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T61f243(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T61f242(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_21_0 */
extern void T61f241(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_22_0 */
extern void T61f240(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T61f260(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T61f77(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T61f75(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T61f74(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T61f73(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T61f72(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T61f71(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T61f70(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T61f69(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_21_0 */
extern T0* T61f68(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_22_0 */
extern T0* T61f66(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_22_0 */
extern T0* T61f65(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T61f42(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T61f64(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T61f239(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T61f238(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T61f237(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T61f236(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T61f259(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T61f63(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T61f61(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T61f60(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T61f59(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T61f58(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T61f41(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T61f57(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T61f235(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_20_0 */
extern void T61f234(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T61f258(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_20_0 */
extern T0* T61f56(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_20_0 */
extern T0* T61f55(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T61f40(TC* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T52c20(TC* ac);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T192f123(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T190f14(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T63f218(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T61f39(TC* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T192f122(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T190f13(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T63f217(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T62f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eate */
extern T0* T221c102(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T61f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T179f27(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T179f22(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T179f45(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T179f56(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T62f33(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eatm */
extern T0* T221c101(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T167f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T192c121(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T192f130(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T192f131(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T192f135(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T192f177(TC* ac, T0* C);
/* ET_ECF_LIBRARY.tokens */
extern T0* T192f102(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T192f176(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T192f175(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T192f174(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T192f173(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T192f172(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T192f171(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T192f170(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T192f169(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T192f168(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T192f167(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T192f166(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T192f165(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T192f164(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T192f163(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T192f162(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T192f161(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T192f160(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T192f159(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T192f158(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T192f157(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T192f156(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T192f155(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T192f154(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T192f153(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T192f152(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T192f151(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T192f150(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T192f149(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_8_type */
extern void T192f148(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T192f147(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T192f146(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T192f145(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T192f144(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T192f143(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T192f142(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T192f141(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T192f140(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T192f139(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T192f138(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T192f137(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T192f136(TC* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T192f134(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T192f103(TC* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T192f133(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T192f132(TC* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T192f132p1(TC* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T192f116(TC* ac, T0* C);
/* XM_ELEMENT.attribute_by_name */
extern T0* T173f5(TC* ac, T0* C, T0* a1);
extern T1 T173f5ot1(TC* ac, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T482f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T962f16(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T482f16(TC* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T173f7(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T173f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T173f9(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T210f11(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T209f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].add_traversing_cursor */
extern void T209f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_next_cursor */
extern void T210f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_position */
extern void T210f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_traversing_cursor */
extern void T209f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].set_after */
extern void T210f13(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_item */
extern T6 T209f29(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T62f30(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eadp */
extern T0* T221c100(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T888f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T888f3p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T897f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T896f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T895f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T894f6(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T1 T893f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T893f4ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_VOID_SAFETY_CONDITION.is_capability_supported */
extern T0* T893f4ac2(TC* ac, T0* a1);
/* PROCEDURE [TUPLE [STRING_8]].set_rout_disp_final */
extern void T1818f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_HASH_SET [STRING_8].go_after */
extern void T73f80(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T73f83(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].put_last */
extern void T73f79(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T73f82(TC* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T73f84(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_LINKED_LIST [STRING_8].do_all */
extern void T157f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].append_last */
extern void T73f78(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extend_last */
extern void T73f81(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].extendible */
extern T1 T73f37(TC* ac, T0* C, T6 a1);
/* ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T893f8(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.supported_void_safety_capability_values */
extern T0* T893f8ac1(TC* ac, T0* a1);
/* DS_HASH_SET [STRING_8].set_hash_function */
extern void T73f77(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.string_ */
extern T0* T893f6(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T893f7(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T892f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T892f4ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T892f4ac2(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T892f8(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T892f8ac1(TC* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T892f6(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T892f7(TC* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T891f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T900f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T899f4(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T897f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T896f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T895f2(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T894f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.is_capability_aware */
extern T1 T893f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T892f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T891f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T900f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T899f3(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION_ITEM].item */
extern T0* T1677f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T887f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ECF_ANDED_CONDITIONS].item */
extern T0* T1676f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T887f3p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T66f9(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found_item */
extern T0* T1821f24(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_item */
extern T0* T1821f27(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].found */
extern T1 T1821f25(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search */
extern void T1821f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].search_position */
extern void T1821f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].hash_position */
extern T6 T1821f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_item */
extern T0* T1821f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_item */
extern T6 T1821f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_item */
extern T6 T1821f23(TC* ac, T0* C, T6 a1);
/* ET_ECF_CAPABILITIES.capability_order */
extern T0* T66f12(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.capability_order */
extern T0* T66f12ac1(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].put_last */
extern void T1821f36(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_put */
extern void T1821f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_put */
extern void T1821f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_put */
extern void T1821f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].compress */
extern void T1821f41(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].slots_wipe_out */
extern void T1821f50(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].clashes_wipe_out */
extern void T1821f49(TC* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].key_storage_keep_head */
extern void T1821f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_keep_head */
extern void T1821f47(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].keep_head */
extern void T2062f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].set_count */
extern void T2062f8(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].move_all_cursors */
extern void T1821f46(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_position */
extern void T2066f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].item_storage_put */
extern void T1821f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].force */
extern void T2065f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].fill_with */
extern void T2062f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].extend */
extern void T2062f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].unset_found_item */
extern void T1821f39(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_last */
extern void T1820f39(TC* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].compress */
extern void T1820f47(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_wipe_out */
extern void T1820f57(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_wipe_out */
extern void T1820f56(TC* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_keep_head */
extern void T1820f55(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_keep_head */
extern void T1820f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].move_all_cursors */
extern void T1820f53(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].set_position */
extern void T2061f6(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_hash_function */
extern void T1820f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_hash_function */
extern void T1821f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_key_equality_tester */
extern void T1821f34(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_map */
extern T0* T1821c32(TC* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_with_equality_testers */
extern void T1821f37(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_sparse_container */
extern void T1821f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].set_internal_cursor */
extern void T1821f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_cursor */
extern T0* T1821f30(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make */
extern T0* T2066c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_slots */
extern void T1821f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].new_modulus */
extern T6 T1821f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_clashes */
extern void T1821f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_key_storage */
extern void T1821f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [INTEGER_32, STRING_8], STRING_8].make_item_storage */
extern void T1821f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].make */
extern T0* T2065f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [INTEGER_32, STRING_8]].make_empty */
extern T0* T2062c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [INTEGER_32, STRING_8]].default_create */
extern T0* T2065c2(TC* ac);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].key */
extern T0* T210f8(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_key */
extern T0* T209f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_item */
extern T0* T209f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T210f4(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_iterator */
extern T0* T209f23(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T210f12(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T209f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_off */
extern T1 T209f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].off */
extern T1 T210f9(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].is_empty */
extern T1 T209f35(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T209f25(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T210c10(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T61f28(TC* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T61f28ac1(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T61f37(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T61f36(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].force_last */
extern void T209f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_put */
extern void T209f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_put */
extern void T209f51(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_put */
extern void T209f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_item */
extern T6 T209f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].hash_position */
extern T6 T209f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].resize */
extern void T209f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clashes_resize */
extern void T209f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].special_integer_ */
extern T0* T209f30(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_resize */
extern void T209f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_resize */
extern void T209f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T630f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T631f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].slots_resize */
extern void T209f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_modulus */
extern T6 T209f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].new_capacity */
extern T6 T209f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_put */
extern void T209f48(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T630f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T631f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T631f9(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].search_position */
extern void T209f47(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].unset_found_item */
extern void T209f46(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T61f35(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_hash_function */
extern void T209f43(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_key_equality_tester */
extern void T209f42(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_equality_tester */
extern void T629f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T61f14(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_map */
extern T0* T209c41(TC* ac, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_equality_testers */
extern void T209f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_sparse_container */
extern void T209f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T209f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_slots */
extern void T209f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_clashes */
extern void T209f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_key_storage */
extern void T209f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].make_item_storage */
extern void T209f58(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T630f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T631c6(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T630c3(TC* ac);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T62f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T221c99(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T213f34(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T62f28(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T221c98(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T213f20(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T193f2(TC* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T193f3(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T212c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.build_ise_eiffel_to_gobo_uuid_mappings */
extern void T61f230(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T220f50(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T61f31(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.uuid_from_ecf_file */
extern T0* T61f31ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_config */
extern void T61f233(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_redirection_config */
extern T0* T61f54(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_version */
extern void T484f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_ecf_namespace */
extern void T484f11(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_message */
extern void T484f10(TC* ac, T0* C, T0* a1);
/* ET_ECF_REDIRECTION_CONFIG.set_uuid */
extern void T484f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_redirection_config */
extern T0* T167f7(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_REDIRECTION_CONFIG.make */
extern T0* T484c8(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system_config */
extern T0* T167f3(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_CONFIG.make */
extern T0* T190c12(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_CELL [detachable ET_ECF_CONFIG].put */
extern void T475f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T61f29(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_CELL [detachable ET_ECF_CONFIG].make */
extern T0* T475c2(TC* ac, T0* a1);
/* ET_ECF_SYSTEM.make */
extern T0* T63c166(TC* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T63f167(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T63f172(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T63f214(TC* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T63f154(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T63f213(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T63f212(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T63f211(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T63f210(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T63f209(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T63f208(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T63f207(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T63f206(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T63f205(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T63f204(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T63f203(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T63f202(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T63f201(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T63f200(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T63f199(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T63f198(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T63f197(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T63f196(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T63f195(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T63f194(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T63f193(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T63f192(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T63f191(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T63f190(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T63f189(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T63f188(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T63f187(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T63f186(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_8_type */
extern void T63f185(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T63f184(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T63f183(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T63f182(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T63f181(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T63f180(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T63f179(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T63f178(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T63f177(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T63f176(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T63f175(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T63f174(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T63f173(TC* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T63f171(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T63f145(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T63f170(TC* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T63f169(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.initialize */
extern void T63f168(TC* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T63f168p1(TC* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T63f149(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T61f25(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.select_target */
extern void T61f226(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T61f226ac1(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T61f229(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T206f3(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_universe */
extern void T64f56(TC* ac, T0* C, T0* a1, T0* a2);
extern T1 T64f56ot1(TC* ac, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T862f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T862f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T1867f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T875f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T875f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T875f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T888f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T897f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T897f5ac1(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T157f16(TC* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T897f7(TC* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T897f6(TC* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T896f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T895f4(TC* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T894f7(TC* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T2156c19(TC* ac, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T894f8(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T1 T893f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_VOID_SAFETY_CONDITION.is_enabled */
extern T0* T893f5ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities */
extern T0* T893f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_0_0 */
extern T0* T893f16(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_0_0 */
extern void T893f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_11_0 */
extern void T893f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_13_0 */
extern void T893f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_1_16_0 */
extern void T893f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.set_default_capabilities_latest */
extern void T893f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_11_0 */
extern T0* T893f15(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_11_0 */
extern T0* T893f14(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_13_0 */
extern T0* T893f13(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_13_0 */
extern T0* T893f12(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.default_capabilities_1_16_0 */
extern T0* T893f11(TC* ac, T0* C);
/* ET_ECF_VOID_SAFETY_CONDITION.ecf_1_16_0 */
extern T0* T893f10(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T892f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T892f5ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities */
extern T0* T892f9(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_0_0 */
extern T0* T892f16(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_0_0 */
extern void T892f22(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_11_0 */
extern void T892f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_13_0 */
extern void T892f20(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_1_16_0 */
extern void T892f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.set_default_capabilities_latest */
extern void T892f23(TC* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_11_0 */
extern T0* T892f15(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_11_0 */
extern T0* T892f14(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_13_0 */
extern T0* T892f13(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_13_0 */
extern T0* T892f12(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.default_capabilities_1_16_0 */
extern T0* T892f11(TC* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.ecf_1_16_0 */
extern T0* T892f10(TC* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T891f5(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T891f5ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T891f6(TC* ac, T0* C);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T900f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T900f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T899f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T899f6(TC* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T887f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T1660f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T1660f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T859f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T859f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T1860f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T872f8(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T872f9(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T872f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T1657f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T1657f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T863f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T863f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T1869f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T876f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T876f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T876f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T876f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T876f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T876f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T876f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].do_all */
extern void T1661f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_MAKE].item */
extern T0* T1661f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T865f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T865f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T1873f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T878f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T878f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T878f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T878f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T878f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T878f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T878f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T1663f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T1663f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T861f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T861f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T1865f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T874f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T874f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T874f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T874f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T874f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T874f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T874f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1659f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1659f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T864f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T864f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T1871f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T877f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T877f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T877f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T877f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T877f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T877f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T877f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1662f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1662f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T860f5(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T860f5ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T1863f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T873f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T873f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T873f5(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T873f8(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T873f7(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T873f6(TC* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T873f4(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1658f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1658f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T63f247(TC* ac, T0* C, T1 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T216f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T632f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1472f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1471f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1471f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T632f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1472f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1471f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T632f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T632f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T219f21(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T856f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1654f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T856f3(TC* ac, T0* C);
/* ET_ECF_STATE.is_dotnet */
extern T1 T188f3(TC* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T193f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T616f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1467f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1466f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1466f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T616f14(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1467f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1466f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T616f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T616f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T213f19(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T855f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1653f9(TC* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T855f3(TC* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T870f93(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T870f93ac1(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T1809f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T854f12(TC* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T857f7(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T857f7ac1(TC* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T857f7ac2(TC* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T879f9(TC* ac, T0* C, T0* a1);
/* PROCEDURE [TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2146f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1655f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_file_rules */
extern void T64f69(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T857c6(TC* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T870f92(TC* ac, T0* C, T0* a1);
/* ET_CLUSTERS.put_last */
extern void T485f5(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T997f12(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1712f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1711f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1711f8(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T997f13(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1712f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1711f4(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T997f9(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T997f8(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T870f67(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T854f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T854f3(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T62f27(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR.make_epcd */
extern T0* T221c97(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T62f26(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_epcl */
extern T0* T221c96(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T62f25(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_epcr */
extern T0* T221c95(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T62f24(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadq */
extern T0* T221c94(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].before */
extern T1 T204f42(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_before */
extern T1 T204f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].before */
extern T1 T624f8(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].back */
extern void T204f48(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_back */
extern void T204f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].add_traversing_cursor */
extern void T204f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_next_cursor */
extern void T624f11(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_position */
extern void T624f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].remove_traversing_cursor */
extern void T204f66(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_before */
extern void T624f13(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_item */
extern T6 T204f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].finish */
extern void T204f47(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_finish */
extern void T204f59(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_off */
extern T1 T204f37(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].off */
extern T1 T624f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].is_empty */
extern T1 T204f36(TC* ac, T0* C);
/* ET_ECF_TARGET_PARENT.set_target */
extern void T205f5(TC* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T62f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epcy */
extern T0* T221c93(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_for_iteration */
extern T0* T204f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_item */
extern T0* T204f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_item */
extern T0* T204f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].forth */
extern void T204f46(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_forth */
extern void T204f58(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].set_after */
extern void T624f10(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_for_iteration */
extern T0* T204f35(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_key */
extern T0* T204f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_item */
extern T0* T204f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].after */
extern T1 T204f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_after */
extern T1 T204f26(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].after */
extern T1 T624f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].start */
extern void T204f45(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].cursor_start */
extern void T204f57(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].has */
extern T1 T204f20(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].search_position */
extern void T204f49(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].hash_position */
extern T6 T204f22(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_item */
extern T6 T204f24(TC* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T62f22(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_internal */
extern T0* T221c92(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T62f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epud */
extern T0* T221c91(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.library_target */
extern T0* T192f10(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T190f11(TC* ac, T0* C);
/* ET_ECF_SYSTEM.library_target */
extern T0* T63f103(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T62f20(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_epul */
extern T0* T221c90(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T62f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epur */
extern T0* T221c89(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.targets */
extern T0* T192f7(TC* ac, T0* C);
/* ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T190f8(TC* ac, T0* C);
/* ET_ECF_SYSTEM.targets */
extern T0* T63f102(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T62f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epfe */
extern T0* T221c88(TC* ac, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found_item */
extern T0* T203f25(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_item */
extern T0* T203f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].found */
extern T1 T203f28(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search */
extern void T203f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].search_position */
extern void T203f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].hash_position */
extern T6 T203f24(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_item */
extern T0* T203f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_item */
extern T6 T203f33(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_item */
extern T6 T203f26(TC* ac, T0* C, T6 a1);
/* DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T206c2(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].force_last */
extern void T204f44(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_put */
extern void T204f56(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_put */
extern void T204f55(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_put */
extern void T204f54(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].resize */
extern void T204f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].clashes_resize */
extern void T204f65(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].special_integer_ */
extern T0* T204f39(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].key_storage_resize */
extern void T204f64(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_resize */
extern void T204f63(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].slots_resize */
extern void T204f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_modulus */
extern T6 T204f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_capacity */
extern T6 T204f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].item_storage_put */
extern void T204f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].unset_found_item */
extern void T204f51(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_default */
extern T0* T204c43(TC* ac);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make */
extern void T204f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_with_equality_testers */
extern void T204f61(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_sparse_container */
extern void T204f68(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].set_internal_cursor */
extern void T204f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].new_cursor */
extern T0* T204f41(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_TARGET, STRING_8].make */
extern T0* T624c9(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_slots */
extern void T204f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_clashes */
extern void T204f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_key_storage */
extern void T204f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].make_item_storage */
extern void T204f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_TARGET, STRING_8].default_capacity */
extern T6 T204f40(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].force_last */
extern void T203f35(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_put */
extern void T203f44(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_put */
extern void T203f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_put */
extern void T203f42(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].resize */
extern void T203f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].clashes_resize */
extern void T203f49(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].special_integer_ */
extern T0* T203f29(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].key_storage_resize */
extern void T203f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_resize */
extern void T203f47(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T622f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T620f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].slots_resize */
extern void T203f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_modulus */
extern T6 T203f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_capacity */
extern T6 T203f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].item_storage_put */
extern void T203f40(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].force */
extern void T622f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T620f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].extend */
extern void T620f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].unset_found_item */
extern void T203f38(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_default */
extern T0* T203c34(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern void T203f37(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_with_equality_testers */
extern void T203f45(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_sparse_container */
extern void T203f50(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].set_internal_cursor */
extern void T203f55(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].new_cursor */
extern T0* T203f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_SYSTEM_CONFIG, STRING_8].make */
extern T0* T623c4(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_slots */
extern void T203f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_clashes */
extern void T203f53(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_key_storage */
extern void T203f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].make_item_storage */
extern void T203f51(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].make */
extern T0* T622f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T620c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T622c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_SYSTEM_CONFIG, STRING_8].default_capacity */
extern T6 T203f27(TC* ac, T0* C);
/* ET_ECF_LIBRARY.select_target */
extern void T192f178(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.select_target */
extern void T63f216(TC* ac, T0* C, T0* a1);
/* ET_ECF_STATE.make */
extern T0* T188c4(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_etnu_error */
extern void T62f11(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_etnu */
extern T0* T221c81(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T61f17(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.target_with_name */
extern T0* T63f152(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target */
extern T0* T208f4(TC* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T61f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T167f1(TC* ac, T0* C, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_TARGET]].set_rout_disp_final */
extern void T170f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.override_target */
extern void T61f223(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_variables */
extern void T64f61(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_capabilities */
extern void T64f60(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].forth */
extern void T640f11(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_forth */
extern void T227f62(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].add_traversing_cursor */
extern void T227f65(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_next_cursor */
extern void T640f15(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_position */
extern void T640f14(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].remove_traversing_cursor */
extern void T227f64(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].set_after */
extern void T640f13(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].item */
extern T0* T640f5(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_item */
extern T0* T227f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].key */
extern T0* T640f6(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_key */
extern T0* T227f36(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].after */
extern T1 T640f4(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].new_iterator */
extern T0* T227f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].start */
extern void T640f12(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_start */
extern void T227f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].cursor_off */
extern T1 T227f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_IDENTIFIER, STRING_8].off */
extern T1 T640f9(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_IDENTIFIER, STRING_8].is_empty */
extern T1 T227f37(TC* ac, T0* C);
/* ET_ECF_TARGET.override_settings */
extern void T64f59(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_settings */
extern T0* T64f59ac1(TC* ac, T0* a1);
/* ET_ECF_TARGET.override_all_assertions */
extern void T64f65(TC* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T64f65ac1(TC* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T64f65ac2(TC* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_TARGET.override_all_assertions */
extern T0* T64f65ac3(TC* ac, T0* a1, T0* a2);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T1815f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* PROCEDURE [TUPLE [ET_ECF_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T1813f7(TC* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_TARGET.override_all_assertions_in_cluster */
extern void T64f67(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_cluster */
extern T0* T64f67ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern void T64f68(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_adapted_group */
extern T0* T64f68ac1(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.class_options */
extern T0* T219f13(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.class_options */
extern T0* T213f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.class_options */
extern T0* T867f11(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.options */
extern T0* T219f12(TC* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.options */
extern T0* T213f9(TC* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.options */
extern T0* T867f10(TC* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T856f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.do_adapted */
extern void T855f7(TC* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_explicit */
extern void T854f8(TC* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.override_all_assertions_in_option */
extern void T64f66(TC* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_TARGET.override_all_assertions_in_option */
extern T0* T64f66ac1(TC* ac, T0* a1, T0* a2);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].do_all */
extern void T629f9(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].forth */
extern void T2117f7(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_forth */
extern void T629f12(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].item */
extern T0* T2117f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_item */
extern T0* T629f6(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].after */
extern T1 T2117f3(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].start */
extern void T2117f6(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].cursor_start */
extern void T629f11(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor */
extern T0* T629f4(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T2117c5(TC* ac, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].keys */
extern T0* T209f37(TC* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].make */
extern T0* T629c7(TC* ac, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].set_internal_cursor */
extern void T629f10(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [detachable RX_REGULAR_EXPRESSION, STRING_8].new_cursor_with_table_cursor */
extern T0* T629f5(TC* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [detachable RX_REGULAR_EXPRESSION, STRING_8].make_with_table_cursor */
extern T0* T2117c8(TC* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.do_all */
extern void T208f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].do_all */
extern void T974f15(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T61f225(TC* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T183f120(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T183f114(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T571f6(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T183f118(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T183f88(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T572f7(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T572f4(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T572f3(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T571f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T1440f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1440f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T1440c4(TC* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T571c7(TC* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T571f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T571f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1441c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T572f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1442f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1442c3(TC* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T572c5(TC* ac);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T608f59(TC* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T569c5(TC* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T611f61(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T609f59(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T568f70(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T62f17(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_syntax */
extern T0* T221c87(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T184f5(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T62f16(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T221c86(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T62f15(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadf */
extern T0* T221c85(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T62f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadi */
extern T0* T221c84(TC* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T61f30(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T62f13(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadh */
extern T0* T221c83(TC* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T62f12(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadg */
extern T0* T221c82(TC* ac, T0* a1, T0* a2);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T184f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T183f90(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T183f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T183f213(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T183f219(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T612f29(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T200f10(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T200f10p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T187f15(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_finish */
extern void T573f3(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T183f218(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T183f228(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T183f227(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T183f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T183f256(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T578f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T588f5(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T587f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T589f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T588f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T183f168(TC* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T588c3(TC* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T183f255(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T574f38(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T574f52(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T574f51(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1447f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1443f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1443f10(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T574f50(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T574f49(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T574f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T574f27(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T574f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T574f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T574f57(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T574f33(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T574f56(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T574f55(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1447f1(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1443f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T574f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T574f54(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T574f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T574f24(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T574f43(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T574f31(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T574f40(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T611c214(TC* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T611f216(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T576c3(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T611f217(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T611f219(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T611f222(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T611f219p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T611f219p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T611f219p2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T611f219p3(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T611f218(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T611f221(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T611f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T611f220(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T611f220p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T611f223(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T611f54(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T611f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T611f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T611f279(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T611f60(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T611f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T611f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T611f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T611f52(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T611f73(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T611f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T611f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T611f68(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T611f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T611f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T611f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T611f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T611f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T611f57(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T611f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T611f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T611f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T611f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T611f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T611f55(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T611f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T611f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T611f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T611f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T611f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T611f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T611f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T611f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T611f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T611f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T611f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T611f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T611f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T611f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T611f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T611f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T611f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T611f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T611f97(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T611f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T611f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T611f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T611f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T611f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T611f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T611f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T611f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T611f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T611f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T611f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T611f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T611f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T611f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T611f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T611f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T611f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T611f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T611f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T611f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T611f56(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T611f53(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1438c8(TC* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T611f215(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T183f167(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T608c213(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T608f214(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T608f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T608f216p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T608f216p0(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T608f216p2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T608f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T608f218(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T608f220(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T608f217(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T608f217p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T608f219(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T608f52(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T608f56(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T608f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T608f275(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T608f58(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T608f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T608f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T608f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T608f50(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T608f71(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T608f227(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T608f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T608f66(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T608f225(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T608f224(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T608f223(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T608f222(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T608f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T608f55(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T608f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T608f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T608f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T608f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T608f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T608f53(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T608f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T608f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T608f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T608f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T608f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T608f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T608f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T608f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T608f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T608f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T608f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T608f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T608f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T608f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T608f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T608f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T608f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T608f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T608f94(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T608f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T608f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T608f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T608f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T608f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T608f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T608f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T608f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T608f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T608f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T608f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T608f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T608f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T608f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T608f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T608f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T608f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T608f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T608f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T608f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T608f70(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T608f60(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T183f254(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T578f7(TC* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T183f253(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T183f166(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T608c212(TC* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T608f281(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T608f290(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T608f277(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T608f63(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T611f285(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T611f295(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T611f281(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T611f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T609f209(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T609f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T609f212(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T609f53(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T609f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T568f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T568f218(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T568f226(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T568f46(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T568f54(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T597f26(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T597f25(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T597f24(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T597f23(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T599f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T601f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T600f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1456f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1456f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1456c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T183f163(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T600f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T183f177(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T600c10(TC* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T600f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T600f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1455c8(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T599f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T601f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T601f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T597f22(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T597f27(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T597f11(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T597f21(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T597f20(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T597f19(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T597f18(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T597f17(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T597f16(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T597f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T183f162(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T596f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T598f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T597c12(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T596f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T598f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T598f10(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T597f14(TC* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T597f10(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T597f9(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T597f8(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T597f7(TC* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T597f13(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T593f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T595f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T595f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T593f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T595f4(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T594f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1454f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1454f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1454c4(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T183f160(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T594c7(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T594f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T594f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1453c8(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T183f252(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1453f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T594f11(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T594f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1453f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T594f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1453f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T183f262(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T578f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1453f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1453f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T594f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T594f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1453f7(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T591f11(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T591c10(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T591f21(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T591f19(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T591f16(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T591f22(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T591f12(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T591f20(TC* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1452c6(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1452f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1452f5(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1801c3(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T591c9(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1452f8(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1802f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1802f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1802c4(TC* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T591c8(TC* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1452f7(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T183f155(TC* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T591c15(TC* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T183f251(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T591f14(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T591f13(TC* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T591c7(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T591f18(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T590f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T592f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T592f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T590f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T592f4(TC* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T591c6(TC* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T591f17(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T183f250(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T578f6(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T183f249(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T612f36(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1457f14(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T220f96(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1804f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T612f37(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_error */
extern void T573f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T200f17(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T200f17p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T187f22(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1457f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T612f41(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1461f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_QUEUE [detachable STRING_8].force */
extern void T1460f7(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].put_right */
extern void T1806f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [detachable STRING_8].make */
extern T0* T1806c3(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1457f13(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1457f7(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T612f9(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T612f23(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T612f26(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T612f22(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T612f10(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T573f10(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T585f30(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T585f33(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T585f24(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T582f16(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T582f17(TC* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T600f8(TC* ac, T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1450f1(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T585f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T585f29(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T585f23(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T585f17(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T585f25(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T584f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T586f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T586f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T584f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T586f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T585f32(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T585f39(TC* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T585f38(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T585f37(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T585f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T585f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T585f28(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T585f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T585f46(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T585f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T585f20(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T585f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T585f35(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T183f148(TC* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T585c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1450c2(TC* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T585f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T585f44(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T585f21(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1451c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T585f43(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T585f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T585f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T585f40(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T581f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T583c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T581c3(TC* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T183f248(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T612f35(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1457f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1804f10(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T2016f5(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T2016f6(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T2016c4(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1457f8(TC* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T220f95(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1457f9(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T573f9(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T183f247(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T612f34(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1457f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1804f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1804f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T2016f7(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1804f13(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1805f13(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1805f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1804f12(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1804f15(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1457f3(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T612f34p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T200f16(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T200f16p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T187f21(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T173f10(TC* ac, T0* C);
extern T1 T173f10ot1(TC* ac, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T173f11(TC* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T197f8(TC* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T197f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1457f2(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1805f11(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1804f18(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1804f19(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1804f20(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1805f14(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1805f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1804f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1805f15(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1804f7(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T1805f7(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1805f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1805f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1804f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1804f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1805c8(TC* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1457f6(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T573f8(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T582f11(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1455f10(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T600f15(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T600f16(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1455f12(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T600f17(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1455f11(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1455f6(TC* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1455f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T600f14(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T600f9(TC* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1455f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T582f10(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T582f9(TC* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T600f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T582f8(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T582f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T582f18(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T582c18(TC* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T582f15(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T582f14(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T183f246(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T612f33(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T612f33p1(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T200f15(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T200f15p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T187f20(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T612f14(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T612f40(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T612f44(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1461f7(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1461f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].remove */
extern void T1460f8(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].wipe_out */
extern void T1460f9(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T612f19(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T612f25(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T612f18(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T612f17(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T612f16(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T612f24(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T200f18(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T200f18p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T187f23(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T187f24(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T174f5(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T967f9(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1877f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1877c3(TC* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T968c3(TC* ac, T0* a1, T0* a2);
/* XM_ATTRIBUTE.make_last */
extern T0* T201c5(TC* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ELEMENT.force_last */
extern void T173f20(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T962f13(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T962f13p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T1828f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T1828c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T962f18(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T173f22(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1545f4(TC* ac, T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1544f6(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1543f5(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T173f17(TC* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T201f6(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T197f14(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T973f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T617f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T617f18(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T973f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T617f23(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T973f15(TC* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T973f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T617f16(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T617f22(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T973f17(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1469f6(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1469f4(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T617f21(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1469f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T617f20(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T617f26(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T973f18(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T617f24(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T617f27(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T973f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T617f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T617f19(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T617f25(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T973f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T617f9(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T973f8(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T973f11(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T617f15(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T617f8(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T973f9(TC* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T197f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T617f5(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T973c10(TC* ac, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T173f21(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T482f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T962f17(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T962f24(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T482f18(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T1828f6(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T962f23(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T1828f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T962f22(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T962f27(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T962f25(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T962f28(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T482f7(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T962f10(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T962f21(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T962f26(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T482f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T962f9(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.parent */
extern T0* T1545f2(TC* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.parent */
extern T0* T1544f3(TC* ac, T0* C);
/* XM_COMMENT.parent */
extern T0* T1543f2(TC* ac, T0* C);
/* XM_ELEMENT.parent */
extern T0* T173f3(TC* ac, T0* C);
/* XM_ATTRIBUTE.parent */
extern T0* T201f4(TC* ac, T0* C);
/* XM_ELEMENT.last */
extern T0* T173f13(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T962f8(TC* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T173f12(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T962f7(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T187f8(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T615f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T615f44(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T615f43(TC* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T615f22(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T615f20(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T481f6(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T615f42(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T615f48(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T615f29(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T615f47(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T615f46(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1464f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1465f4(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T615f28(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T615f18(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T615f26(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T615f45(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T615f21(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T615f19(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T615f41(TC* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1464f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1465f7(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1465f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T615f40(TC* ac, T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1462f1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.is_equal */
extern T1 T481f4(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T481f5(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T615f25(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T615f37(TC* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T481f3(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T615f17(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T615f30(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE.make */
extern void T481f8(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T481c8(TC* ac, T0* a1, T0* a2);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1461f4(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].item */
extern T0* T1460f5(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T612f12(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].is_empty */
extern T1 T1460f4(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T200f14(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T200f14p1(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T187f19(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T173c19(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T197f15(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T197f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T617f12(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T617f12p1(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1469c3(TC* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T617f14(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T197f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T197f6(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T617f7(TC* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T197f5(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T617f6(TC* ac, T0* C);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T197f16(TC* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T973f14(TC* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T617f28(TC* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T962c11(TC* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T962f12(TC* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T173c18(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1457f5(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T573f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T582f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T582f13(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T183f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T608f283(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T576f2(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T611f287(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T609f211(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T568f209(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T609c205(TC* ac);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T609f205p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T609f214(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T609f214p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T609f214p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T609f213(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T609f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T609f226(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T609f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T609f224p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T609f229(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T609f199(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T609f202(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T609f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T609f284(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T609f204(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T609f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T609f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T609f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T609f198(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T609f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T609f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T609f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T609f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T609f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T609f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T609f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T609f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T609f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T609f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T609f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T609f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T609f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T609f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T609f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T609f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T609f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T609f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T609f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T609f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T609f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T609f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T609f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T609f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T609f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T609f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T609f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T609f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T609f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T609f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T609f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T609f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T609f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T609f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T609f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T609f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T609f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T609f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T609f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T609f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T609f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T609f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T609f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T609f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T609f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T609f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T609f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T609f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T609f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T609f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T609f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T609f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T609f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T609f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T609f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T609f52(TC* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T572f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T183f112(TC* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T576f1(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T183f261(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T576f5(TC* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T576f4(TC* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T587f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T589f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T589f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T183f244(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T578f5(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T183f243(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T578f4(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T604f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T604f8(TC* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T604f11(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T603f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T605f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T605f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T603f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T605f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T604c7(TC* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T604f10(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T183f287(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T612f45(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T200f19(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T187f25(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T573f12(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T183f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T608f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T969f31(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T611f286(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T609f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T568f208(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T608f62(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T969f16(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T969f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T611f64(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T609f51(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T568f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T183f241(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T612f32(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T200f13(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T200f13p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T187f18(TC* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1545c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T573f6(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T183f240(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T578f3(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T183f239(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T612f31(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T200f12(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T200f12p1(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T187f17(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1544c5(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1544c4(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T573f5(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T183f238(TC* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T578f2(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T183f237(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T612f30(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T200f11(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T200f11p1(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T187f16(TC* ac, T0* C, T0* a1);
/* XM_COMMENT.make_last_in_document */
extern T0* T1543c4(TC* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1543c3(TC* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_comment */
extern void T573f4(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T183f138(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T183f191(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T183f198(TC* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f79(TC* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T576f6(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T969f30(TC* ac, T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T745f3(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T183f203(TC* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T969c29(TC* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1699c5(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T574f21(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T574f35(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T183f137(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T183f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T183f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T183f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T183f173(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T183f193(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T183f201(TC* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T183f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T608f280(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1552f11(TC* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1552f7(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T611f284(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T609f208(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T568f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T183f126(TC* ac, T0* C, T0* a1);
/* STRING_8.string */
extern T0* T17f40(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T10 T183f186(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T183f185(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T183f181(TC* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T748c72(TC* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T748f93(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T330f25(TC* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8_substring */
extern T1 T330f26(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T330f32(TC* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T330f28(TC* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T330f27(TC* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T183f184(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T183f182(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T183f124(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T183f180(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T183f135(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T183f190(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T183f189(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T183f197(TC* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T748c82(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T581f4(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T583f8(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T583f10(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T581f2(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T583f4(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T183f235(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T582f19(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T582f12(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T183f134(TC* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T582c20(TC* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T183f225(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T183f224(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T183f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T183f233(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T183f221(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T183f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T183f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T608f276(TC* ac, T0* C);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T330f51(TC* ac, T0* C, T0* a1);
extern T1 T330f51ot1(TC* ac, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T608f69(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T608f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T611f280(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T611f71(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T611f288(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T608f64(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T608f67(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T611f66(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T611f69(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T183f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T183f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T608f61(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T611f63(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T609f69(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T568f72(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_value */
extern T0* T608f10(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_value */
extern T0* T611f10(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_value */
extern T0* T609f2(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_value */
extern T0* T568f2(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.last_token */
extern T6 T608f45(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.last_token */
extern T6 T611f47(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.last_token */
extern T6 T609f1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.last_token */
extern T6 T568f1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T608f279(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T608f279p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T608f289(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1438f10(TC* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T85f21(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1438f7(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1438f3(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1438f6(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1438f2(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1438f5(TC* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T326f30(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1438f4(TC* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1438f9(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T608f204(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T608f184(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T608f183(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T608f165(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T608f211(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T608f124(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T608f124p1(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T608f294(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T608f108(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T608f293(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T608f292(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T608f288(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T608f291(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T608f102(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T608f287(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T608f101(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T608f100(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T608f286(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T608f89(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T611f283(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T611f283p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T611f283p0(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T611f294(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T611f207(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T611f187(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T611f186(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T611f168(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T611f213(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T611f127(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T611f127p1(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T611f298(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T611f111(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T611f297(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T611f296(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T611f293(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T611f105(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T611f292(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T611f104(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T611f103(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.report_invalid_unicode_character_error */
extern void T611f291(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_at_beginning_of_line */
extern T6 T611f92(TC* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T611f290(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T609f207(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T609f207p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T609f222(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T609f187(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T609f167(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T609f166(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T609f148(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T609f201(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T609f110(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T609f228(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T609f84(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T609f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T609f221(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T609f72(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T609f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T609f71(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T609f70(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T609f219(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.report_invalid_unicode_character_error */
extern void T609f218(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_at_beginning_of_line */
extern T6 T609f62(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T609f217(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T609f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.read_token */
extern void T568f205(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T568f217(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T568f185(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T568f165(TC* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T568f164(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T568f146(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T568f199(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T568f105(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T568f225(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T568f79(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T568f224(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T568f223(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T568f216(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T568f222(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T568f67(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T568f215(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T568f221(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T568f66(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T568f65(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T568f214(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.report_invalid_unicode_character_error */
extern void T568f213(TC* ac, T0* C, T10 a1);
/* XM_EIFFEL_SCANNER.yy_at_beginning_of_line */
extern T6 T568f50(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T183f97(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T183f220(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T183f229(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T183f257(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T183f263(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T183f264(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T605f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T605f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T601f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T601f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T598f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T598f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T595f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T595f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T592f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T592f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T589f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T589f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T586f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T586f9(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T583f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T583f9(TC* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T183f223(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T183f217(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T612f28(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T200f9(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T200f9p1(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T187f14(TC* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T187f12(TC* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T615c31(TC* ac, T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1462c2(TC* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T615f32(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T615f38(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T615f24(TC* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1463c4(TC* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T615f36(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T615f35(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T615f34(TC* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T615f33(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1464f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1465c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1464c3(TC* ac);
/* XM_DOCUMENT.make */
extern T0* T197c10(TC* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T197f11(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.make */
extern T0* T173c16(TC* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T617c11(TC* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T617f13(TC* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T197f3(TC* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T481c7(TC* ac);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T612f39(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T612f43(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T612f21(TC* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1461c5(TC* ac);
/* XM_NAMESPACE_RESOLVER.new_detachable_string_queue */
extern T0* T612f20(TC* ac, T0* C);
/* DS_LINKED_QUEUE [detachable STRING_8].make */
extern T0* T1460c6(TC* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1457c10(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1804c8(TC* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T1804f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T573f2(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T183f216(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T608f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T608f285(TC* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T1005f14(TC* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T608f285p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T608f72(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T611f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T611f289(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T611f289p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T611f74(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T609f206(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T609f215(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T609f215p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T609f58(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T568f204(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T568f212(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T568f212p1(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T568f220(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T568f48(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.reset */
extern void T183f212(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T574f37(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T574f47(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T574f46(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T574f45(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T574f44(TC* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1443f6(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1443f9(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T574f42(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1446f8(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1446f7(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T183f210(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T568c203(TC* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T568f211(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T568f211p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T568f211p0(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T568f210(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T568f219(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T568f219p1(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T568f227(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T568f197(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T568f200(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T568f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T568f282(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T568f202(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T568f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T568f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T568f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T568f196(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T568f195(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T568f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T568f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T568f194(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T568f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T568f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T568f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T568f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T568f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T568f193(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T568f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T568f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T568f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T568f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T568f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T568f192(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T568f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T568f264(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T568f263(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T568f262(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T568f261(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T568f260(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T568f259(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T568f258(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T568f257(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T568f256(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T568f255(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T568f254(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T568f253(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T568f252(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T568f251(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T568f250(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T568f249(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T568f248(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T568f191(TC* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T568f247(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T568f246(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T568f245(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T568f244(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T568f243(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T568f242(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T568f241(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T568f240(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T568f239(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T568f238(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T568f237(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T568f236(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T568f235(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T568f234(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T568f233(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T568f232(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T568f231(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T568f230(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T568f229(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T568f228(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T568f45(TC* ac, T0* C);
/* DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T168c2(TC* ac, T0* a1);
/* GEC.target_name */
extern T0* T25f36(TC* ac, T0* C);
/* AP_STRING_OPTION.parameter */
extern T0* T50f15(TC* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_override_variables */
extern void T61f220(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_capabilities */
extern void T61f219(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_override_settings */
extern void T61f218(TC* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T61c217(TC* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T61f222(TC* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T187f10(TC* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T174c4(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T967c7(TC* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T967f8(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T183f207(TC* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T184c10(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T184f9(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T200f8(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T612f42(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T187f13(TC* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T613f4(TC* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T187c9(TC* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T187f11(TC* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T187f7(TC* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T573c1(TC* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T184f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T200c5(TC* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T200f6(TC* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T200f7(TC* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T200f4(TC* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T184f6(TC* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T612c27(TC* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T612f38(TC* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T612f13(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T183f206(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T183c205(TC* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T183f85(TC* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T574f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T574c36(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T574f41(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T574f53(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T574f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T574f63(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T574f34(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1446c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T574f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T574f61(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T574f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T574f59(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1447f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1443c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1447c3(TC* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T574f30(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T183f211(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T183f215(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T183f121(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T183f178(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T183f285(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T183f286(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T183f204(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T183f284(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T183f283(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T183f282(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T183f119(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T183f281(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T183f280(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T183f279(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T183f278(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T183f117(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T183f115(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T183f277(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T183f276(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T183f275(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T183f113(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T183f105(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T183f274(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T183f273(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T183f272(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T183f98(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T183f93(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T183f271(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T183f270(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T183f269(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T183f89(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T183f268(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T183f267(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T183f87(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T183f266(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T183f265(TC* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T183f214(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T603f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T605c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T603c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T599f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T601c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T599c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T596f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T598c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T596c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T593f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T595c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T593c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T590f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T592c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T590c3(TC* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T587f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T589c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T587c3(TC* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T584f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T586c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T584c3(TC* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T183f209(TC* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T183f86(TC* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T578c1(TC* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T183f84(TC* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T181f35(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T181c34(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T181f39(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T181f52(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T181f61(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T181f31(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T566c6(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T181f60(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T181f59(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T181f58(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T181f57(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T567f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T563c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T567c3(TC* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T179f41(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T179c40(TC* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T179f47(TC* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T179f62(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T179f73(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T179f37(TC* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T558c8(TC* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T179f72(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T179f71(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T179f70(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T179f69(TC* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T562f2(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T559c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T562c3(TC* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T61f222p1(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T61f15(TC* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T167c56(TC* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T62c10(TC* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T62f7(TC* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.make_null */
extern T0* T62c9(TC* ac);
/* ET_ECF_ERROR_HANDLER.null_output_stream */
extern T0* T62f6(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T42f14(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T42f27(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T42f62(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T42f67(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T42f67p1(TC* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T42f25(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T42f16(TC* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T145f8(TC* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T145f6(TC* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T42f61(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T42c61(TC* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T42f61p1(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T42f66(TC* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T42f66p1(TC* ac, T0* C, T0* a1);
/* AP_FLAG.was_found */
extern T1 T45f9(TC* ac, T0* C);
/* GEC.parse_arguments */
extern void T25f66(TC* ac, T0* C, T0* a1);
/* GEC.set_new_instance_types */
extern void T25f77(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].force */
extern void T73f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T73c38(TC* ac, T6 a1);
/* GEC.set_split_size */
extern void T25f76(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_variables */
extern void T25f75(TC* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].forth */
extern void T156f10(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_forth */
extern void T155f15(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_position */
extern void T156f12(TC* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable STRING_8].add_traversing_cursor */
extern void T155f18(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_next_cursor */
extern void T156f14(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable STRING_8].remove_traversing_cursor */
extern void T155f17(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].item */
extern T0* T156f5(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_item */
extern T0* T155f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].after */
extern T1 T156f7(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].new_iterator */
extern T0* T155f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].start */
extern void T156f11(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable STRING_8].cursor_start */
extern void T155f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].set_after */
extern void T156f13(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].off */
extern T1 T156f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable STRING_8].before */
extern T1 T156f8(TC* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T89f17(TC* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T129f10(TC* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T129f8(TC* ac, T0* C, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T533f35(TC* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1436f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1436f7(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T533f22(TC* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T538f5(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T134f6(TC* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T533f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T533f37(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T533f38(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T533f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T533f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T533f40(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T533f39(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T533f43(TC* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T533f45(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T533f31(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T533f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T533f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T533f44(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T533c34(TC* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1436c4(TC* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T533f20(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T533f19(TC* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T533f36(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T533f26(TC* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T20f12(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T533f25(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T20f11(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T20c13(TC* ac, T0* a1);
extern T1 T20f13ot1(TC* ac, T0* a1);
extern T1 T20f13ot2(TC* ac, T0* a1);
/* STRING_32.to_string_32 */
extern T0* T18f11(TC* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T20f19(TC* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T20f18(TC* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T129f6(TC* ac, T0* C);
/* GEC.execution_environment */
extern T0* T25f52(TC* ac, T0* C);
/* GEC.set_override_capabilities */
extern void T25f74(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_override_settings */
extern void T25f73(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.set_ise_version */
extern void T25f72(TC* ac, T0* C, T0* a1, T0* a2);
/* GEC.report_usage_message */
extern void T25f71(TC* ac, T0* C, T0* a1);
/* GEC.report_version_number */
extern void T25f70(TC* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.force_last */
extern void T49f14(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].put_right */
extern void T153f4(TC* ac, T0* C, T0* a1);
/* DS_LINKABLE [AP_OPTION].make */
extern T0* T153c3(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T54f28(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T54f27(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T54c26(TC* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T54f30(TC* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T54f29(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T54f29p1(TC* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T54f29p0(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T53f28(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T53f27(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T53f32(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T157f21(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T157f10(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T157f7(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T157f8(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T157f6(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T157f11(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T157f12(TC* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T157f20(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T53f26(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T53c25(TC* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T53f30(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T53f29(TC* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T157f19(TC* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T53f14(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T53f29p1(TC* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T53f29p0(TC* ac, T0* C);
/* AP_STRING_OPTION.set_default_parameter */
extern void T50f27(TC* ac, T0* C, T0* a1);
/* UT_VERSION.out */
extern T0* T52f10(TC* ac, T0* C);
/* GEC.ise_latest */
extern T0* T25f46(TC* ac, T0* C);
/* AP_FLAG.make_with_long_form */
extern T0* T45c17(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_parameter_description */
extern void T50f26(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T50f25(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T50c24(TC* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T50f29(TC* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T50f28(TC* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T50f28p1(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_ise_variables */
extern void T44f18(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_ise_c_compiler_variable */
extern void T44f22(TC* ac, T0* C);
/* UT_ISE_VARIABLES.string_ */
extern T0* T44f11(TC* ac, T0* C);
/* UT_ISE_VARIABLES.file_system */
extern T0* T44f10(TC* ac, T0* C);
/* UT_ISE_VARIABLES.unix_file_system */
extern T0* T44f16(TC* ac, T0* C);
/* UT_ISE_VARIABLES.windows_file_system */
extern T0* T44f15(TC* ac, T0* C);
/* UT_ISE_VARIABLES.operating_system */
extern T0* T44f14(TC* ac, T0* C);
/* UT_ISE_VARIABLES.ise_c_compiler_value */
extern T0* T44f9(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_ise_platform_variable */
extern void T44f21(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_eiffel_library_variable */
extern void T44f20(TC* ac, T0* C);
/* UT_ISE_VARIABLES.ise_eiffel_value */
extern T0* T44f2(TC* ac, T0* C);
/* UT_ISE_VARIABLES.eiffel_library_value */
extern T0* T44f5(TC* ac, T0* C);
/* UT_ISE_VARIABLES.set_ise_library_variable */
extern void T44f19(TC* ac, T0* C);
/* UT_ISE_VARIABLES.ise_library_value */
extern T0* T44f1(TC* ac, T0* C);
/* GEC.ise_variables */
extern T0* T25f35(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.set_gobo_variables */
extern void T43f15(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.set_zig_variable */
extern void T43f19(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.file_system */
extern T0* T43f7(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.unix_file_system */
extern T0* T43f13(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.windows_file_system */
extern T0* T43f12(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.operating_system */
extern T0* T43f11(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.set_boehm_gc_variable */
extern void T43f18(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.set_gobo_library_variable */
extern void T43f17(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.gobo_library_value */
extern T0* T43f5(TC* ac, T0* C);
/* UT_GOBO_VARIABLES.set_gobo_variable */
extern void T43f16(TC* ac, T0* C);
/* GEC.gobo_variables */
extern T0* T25f34(TC* ac, T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T32f7(TC* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T41c189(TC* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T41f189p1(TC* ac, T0* C);
/* ET_ERROR_HANDLER.std */
extern T0* T41f24(TC* ac, T0* C);
/* KL_ARGUMENTS.to_array */
extern T0* T32f5(TC* ac, T0* C);
/* KL_ARGUMENTS.argument_count */
extern T6 T32f2(TC* ac, T0* C);
/* GEC.arguments */
extern T0* T25f53(TC* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T35f2(TC* ac, T0* C, T6 a1);
/* KL_EXCEPTIONS.exceptions_die */
extern void T35f3(TC* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T25f37(TC* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T38f6(TC* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.string_ */
extern T0* T38f2(TC* ac, T0* C);
/* KL_STANDARD_FILES.error */
extern T0* T37f1(TC* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T38c5(TC* ac);
/* GEC.std */
extern T0* T25f33(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T21f16(TC* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* NO_MORE_MEMORY.set_type_name */
extern void T104f16(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T128f13(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T102f13(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T109f21(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T127f13(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T126f17(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T125f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T108f15(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T107f17(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T124f13(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T123f13(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T122f13(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T121f13(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T120f13(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T119f13(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T110f16(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T106f15(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T118f13(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T117f13(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T116f13(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T100f17(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T115f13(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T105f15(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T114f13(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T113f13(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T112f13(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T98f13(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T104f15(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T128f12(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T102f12(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T109f20(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T127f12(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T126f16(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T125f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T108f14(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T107f16(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T124f12(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T123f12(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T122f12(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T121f12(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T120f12(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T119f12(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T110f15(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T106f14(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T118f12(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T117f12(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T116f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T100f16(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T115f12(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T105f14(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T114f12(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T113f12(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T112f12(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T98f12(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T104f11(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T128f10(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T102f10(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T109f18(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T127f10(TC* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T126f14(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T125f10(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T108f12(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T107f14(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T124f10(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T123f10(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T122f10(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T121f10(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T120f10(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T119f10(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T110f13(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T106f12(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T118f10(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T117f10(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T116f10(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T100f14(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T115f10(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T105f12(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T114f10(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T113f10(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T112f10(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T98f10(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T21f10(TC* ac, T0* C);
extern T1 T21f10ot1(TC* ac, T0* a1);
extern T1 T21f10ot2(TC* ac, T0* a1);
extern T1 T21f10ot3(TC* ac, T0* a1);
extern T1 T21f10ot4(TC* ac, T0* a1);
extern T1 T21f10ot5(TC* ac, T0* a1);
extern T1 T21f10ot6(TC* ac, T0* a1);
extern T1 T21f10ot7(TC* ac, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T104f14(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T128f11(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T102f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T109f19(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T127f11(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T125f11(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T108f13(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T107f15(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T124f11(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T123f11(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T122f11(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T121f11(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T120f11(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T119f11(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T110f14(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T106f13(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T118f11(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T117f11(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T116f11(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T100f15(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T115f11(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T105f13(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T114f11(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T113f11(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T112f11(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T98f11(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_information */
extern void T109f17(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T109f12(TC* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f29(TC* ac, volatile T6* C);
/* INTEGER_32.to_hex_character */
extern T2 T6f31(TC* ac, volatile T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T109f16(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T108f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T107f13(TC* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T106f11(TC* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T105f11(TC* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T100f12(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T100f11(TC* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T104f13(TC* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T128f9(TC* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T102f9(TC* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T109f15(TC* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T127f9(TC* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T125f9(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T108f10(TC* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T107f12(TC* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T124f9(TC* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T123f9(TC* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T122f9(TC* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T121f9(TC* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T120f9(TC* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T119f9(TC* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T110f12(TC* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T106f10(TC* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T118f9(TC* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T117f9(TC* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T116f9(TC* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T100f13(TC* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T115f9(TC* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T105f10(TC* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T114f9(TC* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T113f9(TC* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T112f9(TC* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T98f9(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T21f12(TC* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T128c8(TC* ac);
/* OLD_VIOLATION.default_create */
extern T0* T102c8(TC* ac);
/* COM_FAILURE.default_create */
extern T0* T109c14(TC* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T127c8(TC* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T125c8(TC* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T108c9(TC* ac);
/* IO_FAILURE.set_code */
extern void T107f11(TC* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T107c10(TC* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T124c8(TC* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T123c8(TC* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T122c8(TC* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T121c8(TC* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T120c8(TC* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T119c8(TC* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T110f11(TC* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T110f9(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T110c10(TC* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T106c9(TC* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T118c8(TC* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T117c8(TC* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T116c8(TC* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T100c10(TC* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T115c8(TC* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T105c9(TC* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T114c8(TC* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T113c8(TC* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T112c8(TC* ac);
/* NO_MORE_MEMORY.set_code */
extern void T104f12(TC* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T104f9(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T21f7(TC* ac, T0* C);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T29c2(TC* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T104c10(TC* ac);
/* VOID_TARGET.default_create */
extern T0* T98c8(TC* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T21f11(TC* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T28f2(TC* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T28c2(TC* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T21f6(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T21f15(TC* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T21f1(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T21f14(TC* ac, T0* C);
/* CELL [NO_MORE_MEMORY].do_nothing */
extern void T29f3(TC* ac, T0* C);
/* CELL [detachable EXCEPTION].do_nothing */
extern void T26f3(TC* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].do_nothing */
extern void T28f3(TC* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T21f5(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T27f37(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T27f22(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T27f21(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T27f39(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T27f40(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T27f44(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T27f43(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T27f42(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T27f41(TC* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T27f45(TC* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T27f47(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T27f31(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T27f29(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T27f28(TC* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T27f46(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T27f20(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T27f19(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T27f38(TC* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T21f4(TC* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].do_nothing */
extern void T27f36(TC* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T410f32(TC* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T385f28(TC* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T144f9(TC* ac, T0* C);
/* MUTEX.dispose */
extern void T138f9(TC* ac, T0* C);
/* MUTEX.destroy */
extern void T138f13(TC* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T138f16(TC* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T42f60(TC* ac, T0* C);
/* PLATFORM.is_mac */
extern T1 T56s4(TC* ac);
/* PLATFORM.is_64_bits */
extern T1 T56s3(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T1816s2(TC* ac);
/* Creation of agent #1 in feature ET_ECF_OPTION_DEFAULTS.valid_assertions_latest */
extern T0* T1816s2ac1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.boolean_option_value_regexp */
extern T0* T1816s8(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.string_ */
extern T0* T1816s7(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.case_insensitive_string_equality_tester */
extern T0* T1816s6(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions */
extern T0* T1816s1(TC* ac, T0* a1);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_0_0 */
extern T0* T1816s5(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.valid_assertions_1_2_0 */
extern T0* T1816s4(TC* ac);
/* ET_ECF_OPTION_DEFAULTS.ecf_1_2_0 */
extern T0* T1816s3(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_last_known */
extern T0* T2155s1(TC* ac);
/* UT_SHARED_ECF_VERSIONS.ecf_1_23_0 */
extern T0* T2155s2(TC* ac);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T330s58(TC* ac, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T330s32(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T330s28(TC* ac, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T330s27(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T330s42(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T330s44(TC* ac, T2 a1, T2 a2);
/* UC_UNICODE_CONSTANTS.bom_character */
extern T3 T749s6(TC* ac);
/* UC_UTF8_ROUTINES.append_substring_to_utf8 */
extern void T330s56(TC* ac, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_ROUTINES.append_natural_32_code_to_utf8 */
extern void T330s57(TC* ac, T0* a1, T10 a2);
/* UC_UTF8_ROUTINES.four_byte_character_code */
extern T10 T330s50(TC* ac, T2 a1, T2 a2, T2 a3, T2 a4);
/* UC_UTF8_ROUTINES.three_byte_character_code */
extern T10 T330s49(TC* ac, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.two_byte_character_code */
extern T10 T330s48(TC* ac, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T330s3(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.unicode_character_count */
extern T6 T330s40(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.unicode_substring_character_count */
extern T6 T330s43(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.is_string_8 */
extern T1 T330s52(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.is_string_32 */
extern T1 T330s53(TC* ac, T0* a1);
/* ET_ADAPTED_BASE_CLASS_CHECKER.reset_context_if_multiple_constraints */
extern void T301s11(TC* ac, T1 a1, T0* a2, T0* a3);
/* ET_ADAPTED_BASE_CLASS_CHECKER.tokens */
extern T0* T301s7(TC* ac);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_natural_32_code */
extern T1 T326s1(TC* ac, T10 a1);
/* UC_UTF8_ROUTINES.string_to_utf8 */
extern T0* T330s1(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.substring_to_utf8 */
extern T0* T330s10(TC* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T330s2(TC* ac, T0* a1, T6 a2, T6 a3);
extern T1 T330s2ot1(TC* ac, T0* a1);
extern T1 T330s2ot2(TC* ac, T0* a1);
extern T1 T330s2ot3(TC* ac, T0* a1);
/* UC_UTF8_ROUTINES.character_32_byte_count */
extern T6 T330s15(TC* ac, T3 a1);
/* UC_UTF8_ROUTINES.natural_32_code_byte_count */
extern T6 T330s20(TC* ac, T10 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T330s14(TC* ac);
/* UC_UTF8_ROUTINES.character_8_byte_count */
extern T6 T330s13(TC* ac, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T330s11(TC* ac);
/* EXECUTION_ENVIRONMENT.available_cpu_count */
extern T10 T129s7(TC* ac);
/* PLATFORM.is_thread_capable */
extern T1 T56s1(TC* ac);
/* THREAD_CONTROL.join_all */
extern void T465s1(TC* ac);
/* EXECUTION_ENVIRONMENT.sleep */
extern void T129s11(TC* ac, T7 a1);
/* EXECUTION_ENVIRONMENT.eif_sleep */
extern void T129s12(TC* ac, T7 a1);
/* PLATFORM.is_windows */
extern T1 T56s2(TC* ac);
/* ET_SYSTEM_PROCESSOR_FACTORY.new_system_processor */
extern T0* T72s1(TC* ac, T6 a1);
/* ISE_RUNTIME.check_assert */
extern T1 T747s1(TC* ac, T1 a1);
/* UTF_CONVERTER.escaped_utf_32_string_to_utf_8_string_8 */
extern T0* T39s3(TC* ac, T0* a1);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T39s15(TC* ac, T0* a1, T0* a2);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T39s6(TC* ac, T0* a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T39s7(TC* ac);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T39s5(TC* ac, T0* a1);
/* EXCEPTIONS.exception_trace */
extern T0* T36s1(TC* ac);
/* EXCEPTIONS.exception_manager */
extern T0* T36s2(TC* ac);
/* SERIALIZATION_FAILURE.trace */
extern T0* T128f7(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.trace */
extern T0* T127f7(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.trace */
extern T0* T126f7(TC* ac, T0* C);
/* MISMATCH_FAILURE.trace */
extern T0* T125f7(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.trace */
extern T0* T124f7(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.trace */
extern T0* T123f7(TC* ac, T0* C);
/* EXTERNAL_FAILURE.trace */
extern T0* T122f7(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.trace */
extern T0* T121f7(TC* ac, T0* C);
/* RESUMPTION_FAILURE.trace */
extern T0* T120f7(TC* ac, T0* C);
/* RESCUE_FAILURE.trace */
extern T0* T119f7(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.trace */
extern T0* T118f7(TC* ac, T0* C);
/* VARIANT_VIOLATION.trace */
extern T0* T117f7(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.trace */
extern T0* T116f7(TC* ac, T0* C);
/* CHECK_VIOLATION.trace */
extern T0* T115f7(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.trace */
extern T0* T114f7(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.trace */
extern T0* T113f7(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.trace */
extern T0* T112f7(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.trace */
extern T0* T110f8(TC* ac, T0* C);
/* COM_FAILURE.trace */
extern T0* T109f13(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.trace */
extern T0* T108f7(TC* ac, T0* C);
/* IO_FAILURE.trace */
extern T0* T107f9(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.trace */
extern T0* T106f7(TC* ac, T0* C);
/* INVARIANT_VIOLATION.trace */
extern T0* T105f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.trace */
extern T0* T104f8(TC* ac, T0* C);
/* OLD_VIOLATION.trace */
extern T0* T102f7(TC* ac, T0* C);
/* ROUTINE_FAILURE.trace */
extern T0* T100f9(TC* ac, T0* C);
/* VOID_TARGET.trace */
extern T0* T98f7(TC* ac, T0* C);
/* NO_MORE_MEMORY.original */
extern T0* T104f7(TC* ac, T0* C);
/* SERIALIZATION_FAILURE.original */
extern T0* T128f6(TC* ac, T0* C);
/* OLD_VIOLATION.original */
extern T0* T102f6(TC* ac, T0* C);
/* COM_FAILURE.original */
extern T0* T109f11(TC* ac, T0* C);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.original */
extern T0* T127f6(TC* ac, T0* C);
/* DEVELOPER_EXCEPTION.original */
extern T0* T126f6(TC* ac, T0* C);
/* MISMATCH_FAILURE.original */
extern T0* T125f6(TC* ac, T0* C);
/* OPERATING_SYSTEM_FAILURE.original */
extern T0* T108f8(TC* ac, T0* C);
/* IO_FAILURE.original */
extern T0* T107f8(TC* ac, T0* C);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.original */
extern T0* T124f6(TC* ac, T0* C);
/* VOID_ASSIGNED_TO_EXPANDED.original */
extern T0* T123f6(TC* ac, T0* C);
/* EXTERNAL_FAILURE.original */
extern T0* T122f6(TC* ac, T0* C);
/* CREATE_ON_DEFERRED.original */
extern T0* T121f6(TC* ac, T0* C);
/* RESUMPTION_FAILURE.original */
extern T0* T120f6(TC* ac, T0* C);
/* RESCUE_FAILURE.original */
extern T0* T119f6(TC* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.original */
extern T0* T110f7(TC* ac, T0* C);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.original */
extern T0* T106f8(TC* ac, T0* C);
/* LOOP_INVARIANT_VIOLATION.original */
extern T0* T118f6(TC* ac, T0* C);
/* VARIANT_VIOLATION.original */
extern T0* T117f6(TC* ac, T0* C);
/* BAD_INSPECT_VALUE.original */
extern T0* T116f6(TC* ac, T0* C);
/* ROUTINE_FAILURE.original */
extern T0* T100f8(TC* ac, T0* C);
/* CHECK_VIOLATION.original */
extern T0* T115f6(TC* ac, T0* C);
/* INVARIANT_VIOLATION.original */
extern T0* T105f8(TC* ac, T0* C);
/* FLOATING_POINT_FAILURE.original */
extern T0* T114f6(TC* ac, T0* C);
/* POSTCONDITION_VIOLATION.original */
extern T0* T113f6(TC* ac, T0* C);
/* PRECONDITION_VIOLATION.original */
extern T0* T112f6(TC* ac, T0* C);
/* VOID_TARGET.original */
extern T0* T98f6(TC* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T69c47(TC* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T77f149(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T507c1063(TC* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T507f1065(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T507f1068(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T507f684(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T507f748(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_44 */
extern void T507f1185(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T507f1257(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T507f754(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_43 */
extern void T507f1184(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_42 */
extern void T507f1183(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_41 */
extern void T507f1182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_40 */
extern void T507f1181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_39 */
extern void T507f1180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_38 */
extern void T507f1179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T507f1178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T507f1177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T507f1176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T507f1175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T507f1174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T507f1173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T507f1172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T507f1171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T507f1170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T507f1169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T507f1168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T507f1167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T507f1166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T507f1165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T507f1164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T507f1163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T507f1162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T507f1161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T507f1160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T507f1159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T507f1158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T507f1157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T507f1156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T507f1155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T507f1154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T507f1153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T507f1152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T507f1151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T507f1150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T507f1149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T507f1148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T507f1147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T507f1146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T507f1145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T507f1144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T507f1143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T507f1142(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T507f770(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_44 */
extern void T507f1141(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_43 */
extern void T507f1140(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_42 */
extern void T507f1139(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_41 */
extern void T507f1138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_40 */
extern void T507f1137(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_39 */
extern void T507f1136(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_38 */
extern void T507f1135(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_37 */
extern void T507f1134(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T507f1133(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T507f1132(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T507f1131(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T507f1130(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T507f1129(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T507f1128(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T507f1127(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T507f1126(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T507f1125(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T507f1124(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T507f1123(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T507f1122(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T507f1121(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T507f1120(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T507f1119(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T507f1118(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T507f1117(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T507f1116(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T507f1115(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T507f1114(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T507f1113(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T507f1112(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T507f1111(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T507f1110(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T507f1109(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T507f1108(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T507f1107(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T507f1106(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T507f1105(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T507f1104(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T507f1103(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T507f1102(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T507f1101(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T507f1100(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T507f1099(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T507f1098(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T507f764(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T507f1097(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T507f1096(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T507f762(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_10 */
extern void T507f1095(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T507f1094(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T507f1093(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T507f1092(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T507f1091(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T507f1090(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T507f1089(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T507f1088(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T507f1087(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T507f1086(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T507f760(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T507f1085(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T507f1084(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T507f757(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_10 */
extern void T507f1083(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T507f1082(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T507f1081(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T507f1080(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T507f1079(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T507f1078(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T507f1077(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T507f1076(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T507f1075(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T507f1074(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T507f755(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T507f745(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_10 */
extern void T507f1253(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T507f1252(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T507f1251(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T507f1250(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T507f1249(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T507f1248(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T507f1247(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T507f1246(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T507f1245(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T507f1244(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T507f742(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T507f1238(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T507f1237(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T507f1236(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T507f1235(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T507f1234(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T507f738(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T507f1230(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T507f1229(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T507f1067(TC* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1386f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1387c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1386c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1383f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1385c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1383c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1380f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1382c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1380c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].make */
extern T0* T1377f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION_LIST].make_empty */
extern T0* T1379c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION_LIST].default_create */
extern T0* T1377c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].make */
extern T0* T1374f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_EXPRESSION].make_empty */
extern T0* T1376c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_EXPRESSION].default_create */
extern T0* T1374c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1371f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1373c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1371c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1369f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1370c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1369c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1366f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1368c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1366c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].make */
extern T0* T1363f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_LIST].make_empty */
extern T0* T1365c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_LIST].default_create */
extern T0* T1363c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].make */
extern T0* T1360f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT_ITEM].make_empty */
extern T0* T1362c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT_ITEM].default_create */
extern T0* T1360c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].make */
extern T0* T1357f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_CONSTRAINT].make_empty */
extern T0* T1359c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_CONSTRAINT].default_create */
extern T0* T1357c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T1355f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE].make_empty */
extern T0* T1356c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T1355c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1352f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1354c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1352c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1349f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1351c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1349c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].make */
extern T0* T1346f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REPEAT_INSTRUCTION].make_empty */
extern T0* T1348c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REPEAT_INSTRUCTION].default_create */
extern T0* T1346c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1344f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1345c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1344c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1341f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1343c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1341c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T1339f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T1340c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T1339c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].make */
extern T0* T1336f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUANTIFIER_EXPRESSION].make_empty */
extern T0* T1338c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUANTIFIER_EXPRESSION].default_create */
extern T0* T1336c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1333f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1335c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1333c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T1331f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T1332c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T1331c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T1329f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T1330c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T1329c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1326f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1328c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1326c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1324f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1325c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1324c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1322f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1323c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1322c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T1319f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T1321c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T1319c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1317f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1318c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1317c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1314f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1316c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1314c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1311f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1313c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1311c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].make */
extern T0* T1308f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_LIST].make_empty */
extern T0* T1310c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_LIST].default_create */
extern T0* T1308c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].make */
extern T0* T1305f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM_ITEM].make_empty */
extern T0* T1307c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM_ITEM].default_create */
extern T0* T1305c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].make */
extern T0* T1303f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_TERM].make_empty */
extern T0* T1304c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_TERM].default_create */
extern T0* T1303c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].make */
extern T0* T1300f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_ITEM].make_empty */
extern T0* T1302c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_ITEM].default_create */
extern T0* T1300c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].make */
extern T0* T1297f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_NOTE_LIST].make_empty */
extern T0* T1299c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_NOTE_LIST].default_create */
extern T0* T1297c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1295f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1296c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1295c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1292f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1294c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1292c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1289f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1291c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1289c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1286f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1288c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1286c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1283f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1285c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1283c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1281f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1282c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1281c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1278f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1280c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1278c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1275f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1277c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1275c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1272f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1274c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1272c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1270f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1271c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1270c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1267f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1269c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1267c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1265f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1266c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1265c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1262f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1264c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1262c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].make */
extern T0* T1259f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_EXPRESSION].make_empty */
extern T0* T1261c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_EXPRESSION].default_create */
extern T0* T1259c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].make */
extern T0* T1257f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_INSTRUCTION].make_empty */
extern T0* T1258c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_INSTRUCTION].default_create */
extern T0* T1257c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].make */
extern T0* T1255f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENTS].make_empty */
extern T0* T1256c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENTS].default_create */
extern T0* T1255c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make */
extern T0* T1253f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].make_empty */
extern T0* T1254c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_ITEM].default_create */
extern T0* T1253c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].make */
extern T0* T1251f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT].make_empty */
extern T0* T1252c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT].default_create */
extern T0* T1251c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T1249f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T1250c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T1249c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1246f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1248c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1246c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T1243f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T1245c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T1243c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1241f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1242c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1241c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1238f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1240c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1238c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1236f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1237c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1236c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1234f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1235c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1234c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1231f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1233c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1231c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1229f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1230c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1229c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1226f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1228c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1226c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1224f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1225c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1224c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1221f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1223c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1221c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1218f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1220c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1218c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1215f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1217c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1215c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1212f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1214c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1212c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1210f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1211c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1210c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T1208f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T1209c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T1208c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T1206f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T1207c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T1206c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1204f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1205c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1204c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1201f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1203c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1201c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1198f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1200c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1198c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1195f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1197c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1195c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T1192f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T1194c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T1192c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T1189f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T1191c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T1189c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1186f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1188c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1186c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1183f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1185c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1183c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1180f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1182c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1180c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T1177f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T1179c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T1177c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1175f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1176c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1175c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1172f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1174c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1172c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1169f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1171c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1169c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1166f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1168c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1166c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1163f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1165c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1163c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].make */
extern T0* T1160f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_RENAME_LIST].make_empty */
extern T0* T1162c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_RENAME_LIST].default_create */
extern T0* T1160c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1157f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1159c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1157c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1154f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1156c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1154c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1151f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1153c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1151c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T1149f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T1150c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T1149c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T1146f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T1148c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T1146c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T1144f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T1145c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T1144c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T1141f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T1143c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T1141c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T1139f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T1140c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T1139c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T1137f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T1138c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T1137c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T1134f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T1136c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T1134c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T1131f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T1133c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T1131c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T1128f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T1130c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T1128c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T1125f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T1127c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T1125c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T1122f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T1124c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T1122c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1120f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T1121c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T1120c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T1117f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T1119c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T1117c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T1114f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T1116c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T1114c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T1111f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T1113c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T1111c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].make */
extern T0* T1109f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME_LIST].make_empty */
extern T0* T1110c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME_LIST].default_create */
extern T0* T1109c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T1106f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T1108c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T1106c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T1104f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T1105c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T1104c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T1101f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T1103c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T1101c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1098f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T1100c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1098c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T1096f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T1097c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T1096c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T1094f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1095c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1094c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1092f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1093c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1092c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T1090f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T1091c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T1090c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T1087f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T1089c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T1087c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T1084f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T1086c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T1084c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T1081f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T1083c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T1081c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T1079f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T1080c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T1079c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T1076f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T1078c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T1076c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T1073f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T1075c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T1073c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T1070f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T1072c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T1070c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T1067f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T1069c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T1067c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T1065f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T1066c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T1065c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T1062f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T1064c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T1062c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T1060f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T1061c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T1060c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T1057f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T1059c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T1057c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T1054f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T1056c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T1054c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].make */
extern T0* T1052f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IDENTIFIER].make_empty */
extern T0* T1053c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IDENTIFIER].default_create */
extern T0* T1052c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T1049f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T1051c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T1049c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T1047f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T1048c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T1047c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T1044f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T1046c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T1044c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T1041f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T1043c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T1041c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T1038f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T1040c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T1038c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T1036f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T1037c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T1036c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T1034f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T1035c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T1034c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T1031f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T1033c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T1031c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T1028f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T1030c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T1028c3(TC* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T1026f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T1027c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T1026c3(TC* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T507f1064(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T507f1066(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T507f1069(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T507f1069p1(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T507f1071(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T507f743(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T507f749(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_5 */
extern void T507f1243(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T507f1258(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_4 */
extern void T507f1242(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T507f1241(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T507f1240(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T507f1239(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T507f741(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T507f1233(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T507f1232(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T507f1231(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T507f739(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T507f737(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_6 */
extern void T507f1228(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_5 */
extern void T507f1227(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_4 */
extern void T507f1226(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_3 */
extern void T507f1225(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T507f1224(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T507f1223(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T507f714(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T507f1222(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T507f1221(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T507f1220(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T507f712(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T507f1219(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T507f1218(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T507f1217(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T507f710(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_17 */
extern void T507f1216(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_16 */
extern void T507f1215(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T507f1214(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T507f1213(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T507f1212(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T507f1211(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T507f1210(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T507f1209(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T507f1208(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T507f1207(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T507f1206(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T507f1205(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T507f1204(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T507f1203(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T507f1202(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T507f1201(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T507f1200(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T507f708(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T507f1199(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T507f1198(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T507f1197(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T507f1196(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T507f1195(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T507f1194(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T507f1193(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T507f1192(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T507f1191(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T507f1190(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T507f1189(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T507f1188(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T507f1187(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T507f1186(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T507f740(TC* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1024c10(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T1024f13(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T1024f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1733c5(TC* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T1023c11(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T1023f16(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T1023f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1732c5(TC* ac, T0* a1);
/* DS_ARRAYED_STACK [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1022c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1728f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1729c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1728c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1021c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make */
extern T0* T1727f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].make_empty */
extern T0* T1726c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INLINE_SEPARATE_ARGUMENT_LIST].default_create */
extern T0* T1727c3(TC* ac);
/* DS_ARRAYED_STACK [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1020c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1724f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1725c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1724c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1019c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].make */
extern T0* T1723f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ITERATION_COMPONENT_LIST].make_empty */
extern T0* T1722c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ITERATION_COMPONENT_LIST].default_create */
extern T0* T1723c3(TC* ac);
/* DS_ARRAYED_STACK [ET_OBJECT_TEST_LIST].make */
extern T0* T1018c9(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].make */
extern T0* T1720f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1721c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST_LIST].default_create */
extern T0* T1720c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1017c10(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1719f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1718c5(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1719c3(TC* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T1016c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T1015c8(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1014c9(TC* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1013c9(TC* ac, T6 a1);
/* YY_UNICODE_FILE_BUFFER.make_with_size */
extern T0* T1011c22(TC* ac, T0* a1, T6 a2);
/* YY_UNICODE_FILE_BUFFER.new_default_buffer */
extern T0* T1011f21(TC* ac, T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T37f3(TC* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T1006c12(TC* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T507f766(TC* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T507f1063p1(TC* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T506c7(TC* ac, T0* a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T506f4(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T505c136(TC* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T505f137(TC* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T505f138(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T505f139(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T505f139p1(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T505f141(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T505f87(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T505f96(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T505f173(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T505f183(TC* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T505f102(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T505f172(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T505f171(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T505f170(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T505f85(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T505f169(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T505f168(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T505f167(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T505f80(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T505f74(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_6 */
extern void T505f166(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_5 */
extern void T505f165(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_4 */
extern void T505f164(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_3 */
extern void T505f163(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T505f162(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T505f161(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T505f71(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_6 */
extern void T505f160(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_5 */
extern void T505f159(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_4 */
extern void T505f158(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T505f157(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T505f156(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T505f155(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T505f63(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T505f154(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T505f153(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T505f152(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T505f59(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T505f151(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T505f150(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T505f149(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T505f148(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T505f147(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T505f146(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T505f145(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T505f144(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T505f143(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T505f94(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T505f182(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T505f181(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T505f180(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T505f179(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T505f178(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T505f177(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T505f176(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T505f175(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T505f174(TC* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T505f83(TC* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T505f95(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make */
extern T0* T265c49(TC* ac, T6 a1);
/* ET_SYSTEM_MULTIPROCESSOR.make_single */
extern void T265f61(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.make_null_single */
extern void T265f73(TC* ac, T0* C);
/* ET_SYSTEM_MULTIPROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T265f86(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_unknown_builtin_reported_only */
extern void T265f85(TC* ac, T0* C, T1 a1);
/* ET_SYSTEM_MULTIPROCESSOR.set_preparse_shallow_mode_only */
extern void T265f84(TC* ac, T0* C);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].put_last */
extern void T666f9(TC* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].force */
extern void T1489f3(TC* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].fill_with */
extern void T1488f6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYSTEM_PROCESSOR].extend */
extern void T1488f7(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].make */
extern T0* T666c8(TC* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].set_internal_cursor */
extern void T666f10(TC* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_SYSTEM_PROCESSOR].new_cursor */
extern T0* T666f6(TC* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_SYSTEM_PROCESSOR].make */
extern T0* T1490c3(TC* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].make */
extern T0* T1489f1(TC* ac, T0* C, T6 a1);
/* SPECIAL [ET_SYSTEM_PROCESSOR].make_empty */
extern T0* T1488c4(TC* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYSTEM_PROCESSOR].default_create */
extern T0* T1489c2(TC* ac);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove */
extern void T209f67(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].remove_position */
extern void T209f69(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].key_storage_keep_head */
extern void T209f79(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].item_storage_keep_head */
extern void T209f78(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].keep_head */
extern void T631f10(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].set_count */
extern void T631f12(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_cursors_forth */
extern void T209f77(TC* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].internal_set_key_equality_tester */
extern void T209f76(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].twin */
extern T0* T209f38(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T209f68(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].copy */
extern void T209f68p1(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_clashes */
extern void T209f75(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_slots */
extern void T209f74(TC* ac, T0* C);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_key_storage */
extern void T209f73(TC* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T34f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T34f13(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T34f15(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T34f14(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T34f17(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T34f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].clone_item_storage */
extern void T209f72(TC* ac, T0* C);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].resized_area */
extern T0* T631f5(TC* ac, T0* C, T6 a1);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].copy_data */
extern void T631f11(TC* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].force */
extern void T631f14(TC* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].move_data */
extern void T631f13(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].overlapping_move */
extern void T631f16(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable RX_REGULAR_EXPRESSION].non_overlapping_move */
extern void T631f15(TC* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].valid_cursor */
extern T1 T209f39(TC* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, STRING_8].move_all_cursors_after */
extern void T209f70(TC* ac, T0* C);
/* Call to STRING_8.to_integer */
extern T6 T17x2228289(TC* ac, T0* C);
/* Call to STRING_8.is_integer */
extern T1 T17x2228255(TC* ac, T0* C);
/* Call to STRING_8.hash_code */
extern T6 T17x655361(TC* ac, T0* C);
/* Call to STRING_8.count */
extern T6 T17x2228263(TC* ac, T0* C);
/* Call to STRING_8.is_empty */
extern T1 T17x2228241(TC* ac, T0* C);
/* Call to STRING_8.item */
extern T2 T17x2572289T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.twin */
extern T0* T17x229387(TC* ac, T0* C);
/* Call to STRING_8.has */
extern T1 T17x2211867T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.as_lower */
extern T0* T17x2228285(TC* ac, T0* C);
/* Call to STRING_8.substring */
extern T0* T17x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to STRING_8.ends_with */
extern T1 T17x2211869T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.code */
extern T10 T17x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.alias "+" */
extern T0* T17x2211872T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.starts_with */
extern T1 T17x2211868T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.same_string */
extern T1 T17x2211860T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.has_substring */
extern T1 T17x2228268T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.to_boolean */
extern T1 T17x2228301(TC* ac, T0* C);
/* Call to STRING_8.is_boolean */
extern T1 T17x2228252(TC* ac, T0* C);
/* Call to STRING_8.as_upper */
extern T0* T17x2228286(TC* ac, T0* C);
/* Call to STRING_8.same_type */
extern T1 T17x229380T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.occurrences */
extern T6 T17x2211855T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.index_of */
extern T6 T17x2211845T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to EXCEPTION.original */
extern T0* T22x1753096(TC* ac, T0* C);
/* Call to EXCEPTION.trace */
extern T0* T22x1753094(TC* ac, T0* C);
/* Call to ANY.same_type */
extern T1 T23x229380T0(TC* ac, T0* C, T0* a1);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T40x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T40x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T40x2228225T6(TC* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.is_empty */
extern T1 T40x2228241(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.as_string_8 */
extern T0* T40x2228280(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring_index */
extern T6 T40x2228274T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.as_string_32 */
extern T0* T40x2228283(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.to_string_32 */
extern T0* T40x2228284(TC* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T40x2228304T6T6(TC* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.same_string */
extern T1 T40x2228269T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T47x6078465T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T47x6193157(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T47x6193160(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T47x6193159(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T47x6193154(TC* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T57x5586952(TC* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T57x5586947(TC* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T57x5586945(TC* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T57x5586949(TC* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T57x5586955(TC* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T57x5586948(TC* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T57x5586958(TC* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T57x5586954(TC* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T57x5586957(TC* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T57x5586951(TC* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T57x5586950(TC* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T57x5586961(TC* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T57x5586956(TC* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T57x5586946(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T75x22740995(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T75x22167561T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T75x22708237T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T75x15466503T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T75x22708280T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T75x22708305(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T75x15466506T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_attached */
extern T1 T75x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_expanded */
extern T1 T75x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T75x22708245T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T75x22167556(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T75x22708230T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.adapted_base_class_with_named_feature */
extern T0* T75x22708229T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T75x22708258T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T75x22740996(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T75x22708235T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T75x22167564(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T75x22708241T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T75x22708272T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_seeded_feature */
extern T0* T75x22740998T6(TC* ac, T0* C, T6 a1);
/* Call to ET_BASE_TYPE.context_adapted_base_class_with_named_feature */
extern T0* T75x22740997T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T75x22167568(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_attached */
extern T1 T75x22167569(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.is_controlled */
extern T1 T75x22708263(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T75x22708232T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T75x22708256T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T75x22708296T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_separate_with_type_mark */
extern T1 T75x22708252T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T75x22708254T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T75x22708260T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T75x22708297T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T75x22708295T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T75x22708234T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T75x22708277T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T75x22708278T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.canonical_to_text */
extern T0* T75x22708307(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T75x22708288T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T75x22708289T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T75x22708287T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T75x22708247T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T75x22708239T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T75x22593538(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T75x22593537(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T75x22167580(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.runtime_name_to_text */
extern T0* T75x22708308(TC* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T80x11862019(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area */
extern T0* T82x2211878(TC* ac, T0* C);
/* Call to READABLE_STRING_8.count */
extern T6 T82x2228263(TC* ac, T0* C);
/* Call to READABLE_STRING_8.area_lower */
extern T6 T82x2211879(TC* ac, T0* C);
/* Call to READABLE_STRING_8.to_string_8 */
extern T0* T82x2228277(TC* ac, T0* C);
/* Call to KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T159x7602177T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ECF_SYSTEM_CONFIG.ecf_version */
extern T0* T190x13402116(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T190x13402113(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T190x13402117(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T190x14204931(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T190x14204932(TC* ac, T0* C);
/* Call to ET_POSITION.column */
extern T6 T202x20938754(TC* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T202x20938753(TC* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T202x20938755(TC* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T202x20938759(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforms_to_primary_type */
extern T1 T229x24215573T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_query */
extern T0* T229x24215589T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_basic */
extern T1 T229x24625156(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_expanded */
extern T1 T229x24657921(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_type */
extern T0* T229x24625161(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_agent_type */
extern T1 T229x24215554(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.seeded_dynamic_procedure */
extern T0* T229x24215590T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.base_class */
extern T0* T229x24625162(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.id */
extern T6 T229x24215571(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_query */
extern T0* T229x24215587T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.dynamic_procedure */
extern T0* T229x24215588T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.queries */
extern T0* T229x24215585(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attribute_count */
extern T6 T229x24215575(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_special */
extern T1 T229x24215555(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_builtin_attribute */
extern T1 T229x24215591T0T8T8(TC* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_copy_routine */
extern T1 T229x24215582(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_copy_routine */
extern T1 T229x24215581(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_once_per_object_routines */
extern T1 T229x24215578(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_custom_standard_is_equal_routine */
extern T1 T229x24215584(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.primary_type */
extern T0* T229x24625163(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.separate_type */
extern T0* T229x24215568(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.hash_code */
extern T6 T229x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_fields */
extern T1 T229x24215580(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_nested_reference_attributes */
extern T1 T229x24215577(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_redefined_is_equal_routine */
extern T1 T229x24215583(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_alive */
extern T1 T229x24215553(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_type */
extern T0* T229x24215567(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.next_type */
extern T0* T229x24215598(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.conforming_ancestors */
extern T0* T229x24215574(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.type_mark */
extern T0* T229x24625165(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.attached_separate_type */
extern T0* T229x24215569(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.meta_type */
extern T0* T229x24625164(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_boolean */
extern T1 T229x24215557(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedures */
extern T0* T229x24215586(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.is_tuple */
extern T1 T229x24215556(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.procedure_calls */
extern T0* T229x24215595(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.query_calls */
extern T0* T229x24215594(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.has_static */
extern T1 T229x24215561(TC* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T240x18448392(TC* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T240x655361(TC* ac, T0* C);
/* Call to ET_PROCEDURE.lower_name */
extern T0* T240x19103747(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T240x18366521T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.overloaded_alias_names */
extern T0* T240x18366471(TC* ac, T0* C);
/* Call to ET_PROCEDURE.alias_names */
extern T0* T240x18366467(TC* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T240x18366470(TC* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T240x18448394(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T240x18366519T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T240x18448395(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_static */
extern T1 T240x18366502(TC* ac, T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T240x18366518(TC* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T240x18366525T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T240x18448390T6(TC* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T240x19103749(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T240x18366509(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T240x18366491(TC* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T240x18366492(TC* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T240x17956874(TC* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T240x17956873(TC* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T241x18448392(TC* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T241x18448393(TC* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T241x655361(TC* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T241x19103747(TC* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T241x18366519T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.overloaded_alias_names */
extern T0* T241x18366471(TC* ac, T0* C);
/* Call to ET_QUERY.alias_names */
extern T0* T241x18366467(TC* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T241x18366470(TC* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T241x18448395(TC* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T241x18448394(TC* ac, T0* C);
/* Call to ET_QUERY.is_stable_attribute */
extern T1 T241x18366505(TC* ac, T0* C);
/* Call to ET_QUERY.is_static */
extern T1 T241x18366502(TC* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T241x18366518(TC* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T241x18366495(TC* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T241x18907139(TC* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T241x18448390T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_class */
extern T0* T241x19103749(TC* ac, T0* C);
/* Call to ET_QUERY.implementation_feature */
extern T0* T241x17956878(TC* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T241x18366497(TC* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T241x18366496(TC* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T241x18366525T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.is_prefixable */
extern T1 T241x18366507(TC* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T241x18366506(TC* ac, T0* C);
/* Call to ET_QUERY.is_once_per_object */
extern T1 T241x17956868(TC* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T241x17956865(TC* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T241x18366509(TC* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T241x18366508(TC* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T241x18366491(TC* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T241x18366492(TC* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T241x17956874(TC* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T241x17956873(TC* ac, T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T244x22708305(TC* ac, T0* C);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T244x22708237T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.adapted_base_class_with_seeded_feature */
extern T0* T244x22708230T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.adapted_base_class_with_named_feature */
extern T0* T244x22708229T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T244x15466503T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T244x22708280T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T244x22708278T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.position */
extern T0* T244x20725761(TC* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T244x15466505T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T244x22708266(TC* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T244x22708267T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T244x22708238T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T244x22708275T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T244x22708298T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T244x22708268T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_unqualified_anchored_type */
extern T1 T244x22708265(TC* ac, T0* C);
/* Call to ET_TYPE.same_named_type */
extern T1 T244x22708277T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T244x22069254T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T244x22708245T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T244x22708234T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T244x22708285T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T244x22708284T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T244x22708283T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T244x22708286T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T244x22708282T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T244x22708276T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T244x22708281T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T244x22708241T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T244x22708272T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T244x22708232T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T244x22708256T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T244x22708258T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T244x22708296T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.is_type_separate_with_type_mark */
extern T1 T244x22708252T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T244x22708254T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T244x22708260T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T244x22708297T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T244x22708295T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.named_base_class */
extern T0* T244x22708228T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T244x15466506T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual */
extern T0* T244x22708235T6T0(TC* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T244x22708247T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T244x22708239T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T244x22708288T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T244x22708289T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T244x22708287T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_class */
extern T0* T244x22708227T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_constraint */
extern T1 T244x22708293T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T244x22708255T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T244x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_like_current */
extern T1 T244x22708248(TC* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T244x22708240T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T244x22708259T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_separate */
extern T1 T244x22708251T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_named_type */
extern T1 T244x15466499(TC* ac, T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T244x22708250(TC* ac, T0* C);
/* Call to ET_TYPE.is_type_self_initializing */
extern T1 T244x22708261T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached */
extern T1 T244x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_controlled */
extern T1 T244x22708263(TC* ac, T0* C);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T244x22708233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_mark */
extern T0* T244x22708225(TC* ac, T0* C);
/* Call to ET_TYPE.type */
extern T0* T244x22757377(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T245x22741049(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T245x22741048(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T245x22740995(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T245x22740993(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T245x22741008(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T245x22741001T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T245x22741006(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T245x22741027(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.has_nested_non_separate_reference_attributes */
extern T1 T245x22741021(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T245x22741034T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_separate */
extern T1 T245x22741010(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T245x22741004(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T245x22741028(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_seeded_feature */
extern T0* T245x22740998T6(TC* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.adapted_base_class_with_named_feature */
extern T0* T245x22740997T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T245x22741015T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T245x22741017T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T245x22741046T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T245x22741036T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T245x22741005T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T245x22741042T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T245x22741030T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T245x22741047T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T245x22741045T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T245x22741037T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T245x22741035T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T245x22741019T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_separate_with_type_mark */
extern T1 T245x22741011T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T245x22741013T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T245x22740996(TC* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T245x22741000T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T248x22446083(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T248x22446084(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T248x22708260T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T248x22708258T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T248x22708245T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T248x22708226T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_separate_with_type_mark */
extern T1 T248x22708252T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T248x22593537(TC* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T248x22757377(TC* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T249x19628051T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T249x19628050T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.any_clients */
extern T0* T249x19628068(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T249x19628132(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T249x19628076(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T249x19628131(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T249x19628075(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T249x19628142(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T249x19628103(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T249x19628141(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T249x19628102(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T249x19628140(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T249x19628095(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T249x19628139(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T249x19628094(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T249x19628138(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T249x19628093(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T249x19628137(TC* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T249x19628092(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T249x19628136(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T249x19628088(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T249x19628135(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T249x19628087(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T249x19628134(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T249x19628086(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T249x19628133(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T249x19628085(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T249x19628144(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T249x19628112(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T249x19628143(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T249x19628110(TC* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T249x19628054T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.master_class */
extern T0* T249x19628039T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T249x19628044T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T249x19628055T2(TC* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T249x19628057(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T249x19628065(TC* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T249x19628033T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T249x19628127(TC* ac, T0* C);
/* Call to ET_UNIVERSE.function_identity_any_type */
extern T0* T249x19628081(TC* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_identity_type */
extern T0* T249x19628099(TC* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T249x19628073(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_identity_type */
extern T0* T249x19628118(TC* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T249x19628116(TC* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_identity_type */
extern T0* T249x19628100(TC* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T249x19628084(TC* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_separate_any_type */
extern T0* T249x19628090(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T249x19628064(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T249x19628083(TC* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_8_type */
extern T0* T249x19628082(TC* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T249x19628074(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_identity_type */
extern T0* T249x19628124(TC* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T249x19628098(TC* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_identity_type */
extern T0* T249x19628125(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T249x19628115(TC* ac, T0* C);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T249x19628119(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T249x19628129(TC* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T249x19628108(TC* ac, T0* C);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T249x655361(TC* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T249x19628077(TC* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T249x19628101(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_8_type */
extern T0* T249x19628111(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T249x19628063(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T249x19628105(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T249x19628120(TC* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T249x19628106(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T249x19628080(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T249x19628122(TC* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T249x19628078(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T249x19628121(TC* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T249x19628079(TC* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T249x19628123(TC* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_iteration_mode */
extern T1 T249x19628128(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T249x19628114(TC* ac, T0* C);
/* Call to ET_UNIVERSE.use_obsolete_syntax_mode */
extern T1 T249x19628130(TC* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T249x19628067(TC* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T249x19628113(TC* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T249x19628049(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T252x22118405T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T252x22118402(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T252x22118401(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T254x21151748(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T254x21151747(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T254x20725761(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T254x21151755(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T254x21151758(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T254x21151745(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T254x21151761(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T254x21151760(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T254x21151764(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T254x21151753(TC* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T254x21151765T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_explicit_attachment_mark */
extern T1 T254x21151746(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T255x22085635T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T255x22085633(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T255x22085637T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T255x22085634T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T255x20725765(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T255x22085639(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T255x22085648T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T255x22085642(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.named_types_has_class_with_ancestors_not_built_successfully */
extern T1 T255x22085646T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T255x22085643T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T255x22085647T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T255x22085652T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T255x22085644T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_unqualified_anchored_type */
extern T1 T255x22085641(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T255x22085649T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T255x22085636T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T257x24657925(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T257x24657922(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T257x24657923(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T257x24231937T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T257x24231940(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T257x24657921(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T257x24231944(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T257x24231942T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T257x24231941(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T257x24231938(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T257x24657927(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.primary_type */
extern T0* T258x24625163(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T258x655361(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_mark */
extern T0* T258x24625165(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_attached */
extern T1 T258x24625158(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T258x24625171T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T258x24625162(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_separate */
extern T1 T258x24625159(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T258x24625156(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T258x24657921(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T258x24625161(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T258x24625164(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_self_initializing */
extern T1 T258x24625157(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.type_id */
extern T6 T258x24625166(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T278x19103753(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T278x17956878(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T278x17956874(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T278x17956873(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T278x19103754(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T278x19103751(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T278x19103745(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T278x17956872(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T278x17956870(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T278x19103755(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T278x19103746(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T278x17956869(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T278x19103748(TC* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T278x19103749(TC* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T279x19103747(TC* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T279x18448392(TC* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T279x18448394(TC* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T279x18448390T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.version */
extern T6 T279x18366476(TC* ac, T0* C);
/* Call to ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T279x18366511(TC* ac, T0* C);
/* Call to ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T279x18366510(TC* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T279x18366468(TC* ac, T0* C);
/* Call to ET_FEATURE.alias_names */
extern T0* T279x18366467(TC* ac, T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T279x19103751(TC* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T279x18366492(TC* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T279x18448395(TC* ac, T0* C);
/* Call to ET_FEATURE.is_static */
extern T1 T279x18366502(TC* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T279x18366519T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.arguments_count */
extern T6 T279x18366518(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T279x17956878(TC* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T279x19103749(TC* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T279x18366499(TC* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T279x18448396(TC* ac, T0* C);
/* Call to ET_FEATURE.has_class_postcondition_recursive */
extern T1 T279x18366512(TC* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T279x18366497(TC* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T279x18366496(TC* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T279x18448393(TC* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T279x18366495(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_thread */
extern T1 T279x17956867(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_process */
extern T1 T279x17956866(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_object */
extern T1 T279x17956868(TC* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T279x17956865(TC* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T279x18366491(TC* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T279x18366506(TC* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T279x18366507(TC* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T279x18366509(TC* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T279x18366508(TC* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T279x18366475(TC* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T279x18366526T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T279x18366527T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.postconditions */
extern T0* T279x17956874(TC* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T279x17956873(TC* ac, T0* C);
/* Call to ET_FEATURE.same_version */
extern T1 T279x18366524T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T279x18448389(TC* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T279x18366498(TC* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T279x18366478(TC* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T279x19103748(TC* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T279x19103753(TC* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T279x19103752(TC* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T279x655361(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.item_name */
extern T0* T306x20267011(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.hash_code */
extern T6 T306x655361(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_item_expression */
extern T0* T306x20267022(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.has_cursor_name */
extern T1 T306x20267009(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_forth_instruction */
extern T0* T306x20267024(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.cursor_after_expression */
extern T0* T306x20267023(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.unfolded_cursor_name */
extern T0* T306x20267020(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.new_cursor_expression */
extern T0* T306x20267021(TC* ac, T0* C);
/* Call to ET_ITERATION_COMPONENT.iterable_expression */
extern T0* T306x20267010(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T308x16777225T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T308x16777226(TC* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T308x16777218(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T309x16826370(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T309x16826371(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T309x16826374(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T309x20725761(TC* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T309x16826373(TC* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T311x21315586(TC* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T311x20725761(TC* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T311x21315587(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T311x21315593(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else_symbol */
extern T1 T311x21315615(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T311x21315614(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies_symbol */
extern T1 T311x21315607(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T311x21315606(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then_symbol */
extern T1 T311x21315600(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T311x21315599(TC* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T311x21315633(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T311x21315631(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not_symbol */
extern T1 T311x21315627(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T311x21315626(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T311x21315624(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T311x21315623(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T311x21315621(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor_symbol */
extern T1 T311x21315620(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T311x21315619(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T311x21315618(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T311x21315617(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T311x21315616(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_symbol */
extern T1 T311x21315613(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T311x21315612(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T311x21315611(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T311x21315610(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T311x21315609(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T311x21315608(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T311x21315605(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T311x21315604(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T311x21315602(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T311x21315601(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_symbol */
extern T1 T311x21315598(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T311x21315597(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T311x21315629(TC* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T311x21315628(TC* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T311x655361(TC* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T314x15040514(TC* ac, T0* C);
/* Call to ET_ASSERTION.is_class_assertion */
extern T1 T314x15040513(TC* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T315x20725761(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T315x16777220(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_typed_object_test */
extern T1 T315x16777224(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_agent */
extern T1 T315x16777223(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_address_expression */
extern T1 T315x16777222(TC* ac, T0* C);
/* Call to ET_EXPRESSION.has_result */
extern T1 T315x16777221(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T315x17563650(TC* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T315x17563656(TC* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T315x17104909T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T315x17104899(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T315x17104901(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T315x17563651(TC* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T315x17104900(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T317x19480599T2(TC* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T317x19480597T0T2(TC* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T317x19480603(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_hidden */
extern T1 T317x19480586(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T317x19480579(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T317x19480593(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T317x19480587(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T317x19480592(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T317x19480618(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T317x19480616(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T317x19480583(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T317x19480584(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T317x19480581(TC* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T317x19480582(TC* ac, T0* C);
/* Call to STRING_GENERAL.item */
extern T3 T331x2228226T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.count */
extern T6 T331x2228263(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.position */
extern T0* T366x20725761(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_inline_separate_instruction */
extern T1 T366x20250630(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_typed_object_test */
extern T1 T366x20250629(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_agent */
extern T1 T366x20250628(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_address_expression */
extern T1 T366x20250627(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.has_result */
extern T1 T366x20250626(TC* ac, T0* C);
/* Call to ET_INSTRUCTION.nested_instruction_count */
extern T6 T366x20250631(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T372x16777225T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T372x16777226(TC* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T372x16777218(TC* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T393x14565379(TC* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T393x14565378(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T393x14565390(TC* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T393x20725761(TC* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T393x14565384(TC* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T393x17563656(TC* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T393x14565381(TC* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T393x14565380(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T394x17514500(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T394x17563656(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T394x17514499(TC* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T394x17514501(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T398x16400387(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T398x16400386(TC* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T398x16400385(TC* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T398x17563656(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T407x22675457(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T407x20725761(TC* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T407x20725765(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_instance_free */
extern T1 T416x17563650(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T416x17563656(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_typed_object_test */
extern T1 T416x17563655(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_address_expression */
extern T1 T416x17563653(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.has_result */
extern T1 T416x17563652(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T416x20725761(TC* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T416x17563649(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T418x17563650(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_typed_object_test */
extern T1 T418x17563655(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_address_expression */
extern T1 T418x17563653(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.has_result */
extern T1 T418x17563652(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T418x17563649(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T418x17563656(TC* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T419x17563649(TC* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T419x17563656(TC* ac, T0* C);
/* Call to ET_OPERAND.is_current */
extern T1 T419x17563651(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T421x17170433(TC* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T421x20725761(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.dynamic_type */
extern T0* T422x24231937T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.count */
extern T6 T422x24231940(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.has_type */
extern T1 T422x24231942T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPES.index_of */
extern T6 T422x24231939T0(TC* ac, T0* C, T0* a1);
/* Call to ET_SEPARATE_CALL.arguments */
extern T0* T434x19775490(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.target */
extern T0* T434x20561921(TC* ac, T0* C);
/* Call to ET_SEPARATE_CALL.name */
extern T0* T434x19775489(TC* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T435x17956869(TC* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T435x17956872(TC* ac, T0* C);
/* Call to ET_CLOSURE.iteration_components */
extern T0* T435x17956876(TC* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T435x17956875(TC* ac, T0* C);
/* Call to ET_CLOSURE.inline_separate_arguments */
extern T0* T435x17956877(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T439x19775495(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T439x16826370(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T439x20070403(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T439x16826371(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T439x16826369(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T439x17563656(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T439x16826374(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T439x16826373(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.position */
extern T0* T440x20725761(TC* ac, T0* C);
/* Call to ET_CREATION_COMPONENT.name */
extern T0* T440x19775489(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T441x16826369(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T441x16826370(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T441x16826374(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T441x16826373(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T441x16826371(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.position */
extern T0* T441x20725761(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.position */
extern T0* T446x20725761(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T446x17956872(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T446x17956870(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T446x17956869(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T446x14565380(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T446x14565379(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T446x14565378(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.attached_result_index */
extern T6 T446x14876674(TC* ac, T0* C);
/* Call to ET_INLINE_AGENT.result_index */
extern T6 T446x14876673(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value_position */
extern T0* T452x16482315(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T452x16482312(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T452x16482310(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T452x20725761(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_32 */
extern T1 T452x16482306(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.is_string_8 */
extern T1 T452x16482305(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T452x17563656(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T568x12697610(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T568x29392900T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T568x12697616(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T568x29392909(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T568x12697601(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T568x29392907(TC* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T619x30310401(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T658x22118403(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T658x20725761(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_has_class_with_ancestors_not_built_successfully */
extern T1 T658x22069254T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T658x22069252T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T658x22118402(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T658x20725765(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T659x22708305(TC* ac, T0* C);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T659x22708268T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.has_nested_non_separate_reference_attributes */
extern T1 T659x15466503T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T659x22708280T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T659x22708285T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T659x22708284T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T659x22708283T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T659x22708286T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T659x22708282T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T659x22708276T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T659x22708281T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.named_type_has_class_with_ancestors_not_built_successfully */
extern T1 T659x22708272T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T659x22708256T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T659x22708258T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T659x22708296T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.is_type_separate_with_type_mark */
extern T1 T659x22708252T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T659x22708254T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T659x22708260T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T659x22708297T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T659x22708295T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T659x15466506T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T659x22708278T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T659x22708288T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T659x22708289T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T659x22708287T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T659x22708245T0(TC* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T659x22708227T0(TC* ac, T0* C, T0* a1);
/* Call to ET_SYMBOL.position */
extern T0* T661x20725761(TC* ac, T0* C);
/* Call to ET_SYMBOL.text */
extern T0* T661x20807682(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_equal_symbol */
extern T1 T661x21053459(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_tilde */
extern T1 T661x21053474(TC* ac, T0* C);
/* Call to ET_SYMBOL.is_not_equal */
extern T1 T661x21053473(TC* ac, T0* C);
/* Call to ET_SYMBOL.break */
extern T0* T661x20725766(TC* ac, T0* C);
/* Call to ET_SYMBOL.column */
extern T6 T661x20938754(TC* ac, T0* C);
/* Call to ET_SYMBOL.line */
extern T6 T661x20938753(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.note_term_value */
extern T0* T728x15958018(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.position */
extern T0* T728x20725761(TC* ac, T0* C);
/* Call to ET_NOTE_TERM.has_note_term_value */
extern T1 T728x15958019T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_LEAF.last_position */
extern T0* T841x20725763(TC* ac, T0* C);
/* Call to ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T890x13336577T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T890x13336578T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T890x13385729T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T910x655361(TC* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T976x19267586(TC* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T976x19267587(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T1045x16384006(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value_position */
extern T0* T1045x16384011(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T1045x16384007(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_32 */
extern T1 T1045x16384002(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.is_character_8 */
extern T1 T1045x16384001(TC* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T1045x17563656(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T1055x16465921(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T1055x16465931(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T1055x16465936(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T1055x16465932(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1055x16465951(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T1055x16465922(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T1055x16465942(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1055x16465941(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1055x16465947(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1055x16465946(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1055x16465950(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1055x16465949(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1055x16465948(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1055x16465945(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1055x16465944(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T1055x17563656(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T1055x16465939(TC* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1055x16465925(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T1099x14630913(TC* ac, T0* C);
/* Call to ET_CHOICE.has_typed_object_test */
extern T1 T1126x19824645(TC* ac, T0* C);
/* Call to ET_CHOICE.has_agent */
extern T1 T1126x19824644(TC* ac, T0* C);
/* Call to ET_CHOICE.has_address_expression */
extern T1 T1126x19824643(TC* ac, T0* C);
/* Call to ET_CHOICE.has_result */
extern T1 T1126x19824642(TC* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T1126x19824647(TC* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T1126x19824641(TC* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T1126x19824646(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T1129x20725761(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_typed_object_test */
extern T1 T1129x19824645(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_agent */
extern T1 T1129x19824644(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_address_expression */
extern T1 T1129x19824643(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.has_result */
extern T1 T1129x19824642(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.position */
extern T0* T1132x20725761(TC* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T1132x19873793(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T1147x16859137(TC* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T1147x20725761(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1152x22298628T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1152x22298626(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1152x22298627(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1164x22413314T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T1167x15532035(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1167x15532034(TC* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1167x15532033(TC* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1213x18268161(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T1273x22708305(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T1273x20725761(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1273x22708298T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T1273x22577153(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T1273x22708268T0(TC* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.has_unqualified_anchored_type */
extern T1 T1273x22708265(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.position */
extern T0* T1290x20725761(TC* ac, T0* C);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1290x17432577(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.note_term */
extern T0* T1306x15958017(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.position */
extern T0* T1306x20725761(TC* ac, T0* C);
/* Call to ET_NOTE_TERM_ITEM.has_note_term_value */
extern T1 T1306x15958019T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.type */
extern T0* T1358x16252930(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.renames */
extern T0* T1358x16252931(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type_constraint */
extern T0* T1361x16252929(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT_ITEM.type */
extern T0* T1361x16252930(TC* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1367x22757377(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.last_leaf */
extern T0* T1416x20725765(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.type_constraint */
extern T0* T1416x15466497T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT.count */
extern T6 T1416x15466504(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.types_to_text */
extern T0* T1416x15466507(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.type_constraint */
extern T0* T1417x15466497T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.count */
extern T6 T1417x15466504(TC* ac, T0* C);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_nested_non_separate_reference_attributes */
extern T1 T1417x15466503T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_expanded_type */
extern T1 T1417x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.has_attached_type */
extern T1 T1417x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTRAINT_BASE_TYPES.conforms_to_type_with_type_marks */
extern T1 T1417x15466506T0T0T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_CONSTRAINT_BASE_TYPES.types_to_text */
extern T0* T1417x15466507(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.type */
extern T0* T1418x16252930(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.renames */
extern T0* T1418x16252931(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.has_nested_non_separate_reference_attributes */
extern T1 T1418x15466503T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_attached */
extern T1 T1418x15466501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.is_type_expanded */
extern T1 T1418x15466500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE_CONSTRAINT.base_class */
extern T0* T1418x15237121(TC* ac, T0* C);
/* Call to ET_BASE_TYPE_CONSTRAINT.named_feature */
extern T0* T1418x15237125T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1425x18448401(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1425x18448388(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1425x18448399(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1425x18448386(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1425x18448400(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1425x18448387(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1425x18448385(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1425x18448397(TC* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1425x18448398(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.base_class */
extern T0* T1492x15237121(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.named_query */
extern T0* T1492x15237123T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.base_type */
extern T0* T1492x15237122(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.named_feature */
extern T0* T1492x15237125T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_CLASS.base_type_index_of_label */
extern T6 T1492x15237126T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.named_procedure */
extern T0* T1492x15237124T0(TC* ac, T0* C, T0* a1);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1546x30310401(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1585x22429697(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1585x20725765(TC* ac, T0* C);
/* Call to ET_DECLARED_TYPE.position */
extern T0* T1585x20725761(TC* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1588x18300929(TC* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T1635x15040513(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1637x20725761(TC* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1637x15073281(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1765x18956291(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1765x18956290(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1765x18956289(TC* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1765x18956292(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.class_options */
extern T0* T1811x13860870(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.options */
extern T0* T1811x13860869(TC* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1822x17956878(TC* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1822x18448394(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_attribute */
extern T1 T1823x18366495(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.implementation_feature */
extern T0* T1823x17956878(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_object */
extern T1 T1823x17956868(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_thread */
extern T1 T1823x17956867(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once_per_process */
extern T1 T1823x17956866(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.is_once */
extern T1 T1823x17956865(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.lower_name */
extern T0* T1823x19103747(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.rescue_clause */
extern T0* T1823x18595843(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.compound */
extern T0* T1823x18595841(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE.arguments */
extern T0* T1823x18448394(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.locals */
extern T0* T1824x17956872(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.compound */
extern T0* T1824x18595841(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.inline_separate_arguments */
extern T0* T1824x17956877(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.is_once_per_process */
extern T1 T1824x17956866(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.rescue_clause */
extern T0* T1824x18595843(TC* ac, T0* C);
/* Call to ET_INTERNAL_FEATURE_CLOSURE.arguments */
extern T0* T1824x17956870(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not_symbol */
extern T1 T1830x21315627(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1830x21315626(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then_symbol */
extern T1 T1830x21315600(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_symbol */
extern T1 T1830x21315598(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1830x21315599(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1830x21315597(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies_symbol */
extern T1 T1830x21315607(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1830x21315606(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else_symbol */
extern T1 T1830x21315615(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_symbol */
extern T1 T1830x21315613(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1830x21315614(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1830x21315612(TC* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1830x21315593(TC* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1830x20725761(TC* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1834x19480579(TC* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1834x19480602(TC* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1834x19480592(TC* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1834x19480619(TC* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1834x19480598T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1834x19480599T2(TC* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1834x19480604(TC* ac, T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T1834x19480616(TC* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T2029x14565380(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T2038x22544385(TC* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T2038x22708305(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T2042x16891905(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T2042x17563656(TC* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T2042x16891906(TC* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T2050x20725761(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.loop_compound */
extern T0* T2053x20316165(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.until_conditional */
extern T0* T2053x20316164(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.variant_part */
extern T0* T2053x20316163(TC* ac, T0* C);
/* Call to ET_LOOP_COMPONENT.invariant_part */
extern T0* T2053x20316162(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T2077x19775489(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T2077x19775490(TC* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T2080x16826370(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T2086x20070403(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T2086x16826370(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T2086x16826369(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T2086x16826371(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T2088x16826371(TC* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T2088x16826369(TC* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T2089x19775490(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T2092x17956869(TC* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T2092x17956870(TC* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T2095x17956870(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T2250x26935297(TC* ac, T0* C);
/* Call to LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T2250x26935298T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_character */
extern void T17x2293809T2(TC* ac, T0* C, T2 a1);
/* Call to STRING_8.append_string */
extern void T17x2293820T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.put */
extern void T17x2588678T2T6(TC* ac, T0* C, T2 a1, T6 a2);
/* Call to STRING_8.remove_head */
extern void T17x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.append_code */
extern void T17x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to STRING_8.append_substring */
extern void T17x2293821T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.append_string_general */
extern void T17x2326547T0(TC* ac, T0* C, T0* a1);
/* Call to STRING_8.append_substring_general */
extern void T17x2326546T0T6T6(TC* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to STRING_8.wipe_out */
extern void T17x2326530(TC* ac, T0* C);
/* Call to STRING_8.remove_tail */
extern void T17x2326531T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_8.keep_head */
extern void T17x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T22x1753112T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T22x1753115T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T22x1753117T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T22x1753111T0(TC* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T22x1753116T0(TC* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T47x6193164(TC* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T47x6193162(TC* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T57x5586963T0(TC* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T57x5586962(TC* ac, T0* C);
/* Call to ET_BASE_TYPE.append_to_string */
extern void T75x22708313T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.add_adapted_base_classes_to_list */
extern void T75x22708314T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_add_adapted_base_classes_to_list */
extern void T75x22741051T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.process */
extern void T75x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.append_canonical_to_string */
extern void T75x22708311T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T92x6094862T6(TC* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T92x6225926T2(TC* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T92x6307842(TC* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T92x6094864T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T92x6225925T0(TC* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T92x6307843T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T185x28442626T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T186x28377101T0T0T1(TC* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_attribute */
extern void T186x28377096T0T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_error */
extern void T186x28377100T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T186x28377094T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T186x28377095(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T186x28377097T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T186x28377093T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T186x28377099T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T186x28377098T0(TC* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_finish */
extern void T186x28377102(TC* ac, T0* C);
/* Call to XM_CALLBACKS.on_start */
extern void T186x28377103(TC* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T190x14204939T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T190x13402121T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T190x14204942T1(TC* ac, T0* C, T1 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T190x14204940T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T190x14204937T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_description */
extern void T190x14204938T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T190x13402119T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T190x13402120T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_query_call */
extern void T229x24215606T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_procedure_call */
extern void T229x24215605T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_object_equality_expression */
extern void T229x24215603T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.put_equality_expression */
extern void T229x24215604T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_static */
extern void T229x24215618T1(TC* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.use_all_attributes */
extern void T229x24215611T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_alive */
extern void T229x24215619(TC* ac, T0* C);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attribute_position */
extern void T229x24215612T0T6(TC* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_next_type */
extern void T229x24215602T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_hash_code */
extern void T229x24215613T6(TC* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_type */
extern void T229x24215617T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_attached_separate_type */
extern void T229x24215615T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_separate_type */
extern void T229x24215616T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_PRIMARY_TYPE.set_id */
extern void T229x24215614T6(TC* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.add_creation_clients_to */
extern void T240x18366549T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T240x18366551(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T240x18366552(TC* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T240x18366553(TC* ac, T0* C);
/* Call to ET_PROCEDURE.set_inline_separate_arguments */
extern void T240x17956879T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_iteration_components */
extern void T240x17956880T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T240x17956881T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T240x18366537T0(TC* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T240x19103757(TC* ac, T0* C);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T241x18366551(TC* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T241x18366552(TC* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T241x18366553(TC* ac, T0* C);
/* Call to ET_QUERY.set_inline_separate_arguments */
extern void T241x17956879T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_iteration_components */
extern void T241x17956880T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T241x17956881T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T241x18366537T0(TC* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_validity_checked */
extern void T241x19103757(TC* ac, T0* C);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T243x25231535T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T243x25231537T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T243x25231541T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T243x25231469T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T243x25231544T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T243x25231488T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T243x25231402T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T243x25231370T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T243x25231389T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T243x25231412T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T243x25231533T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T243x25231570T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T243x25231441T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T243x25231574T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T243x25231576T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T243x25231567T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T243x25231431T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T243x25231481T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T243x25231377T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T243x25231368T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T243x25231391T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T243x25231559T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_repeat_instruction */
extern void T243x25231396T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T243x25231459T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T243x25231476T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T243x25231526T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T243x25231557T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T243x25231595T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T243x25231393T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T243x25231448T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T243x25231372T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T243x25231545T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T243x25231571T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T243x25231504T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T243x25231534T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T243x25231432T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T243x25231575T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inline_separate_instruction */
extern void T243x25231462T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T243x25231407T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T243x25231382T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T243x25231502T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T243x25231485T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T243x25231551T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T243x25231499T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T243x25231424T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T243x25231520T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T243x25231501T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T243x25231427T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T243x25231522T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_iteration_cursor */
extern void T243x25231457T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T243x25231426T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T243x25231429T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T243x25231430T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T243x25231410T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T243x25231435T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T243x25231433T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T243x25231467T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T243x25231506T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T243x25231394T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T243x25231528T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T243x25231497T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T243x25231413T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T243x25231405T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T243x25231406T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T243x25231447T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T243x25231500T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T243x25231425T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T243x25231525T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T243x25231428T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T243x25231560T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T243x25231561T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T243x25231498T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T243x25231383T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T243x25231376T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T243x25231400T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T243x25231401T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T243x25231388T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T243x25231390T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_quantifier_expression */
extern void T243x25231404T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T243x25231416T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T243x25231439T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_expression */
extern void T243x25231460T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T243x25231477T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T243x25231558T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T243x25231563T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T243x25231596T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T243x25231367T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T243x25231371T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T243x25231510T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T243x25231434T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T243x25231523T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T243x25231521T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T243x25231524T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T243x25231436T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T243x25231529T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T243x25231395T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inlined_expression */
extern void T243x25231461T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T243x25231408T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T243x25231480T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T243x25231553T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T244x15466510(TC* ac, T0* C);
/* Call to ET_TYPE.process */
extern void T244x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.add_adapted_base_classes_to_list */
extern void T244x22708314T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T244x22708315(TC* ac, T0* C);
/* Call to ET_TYPE.append_runtime_name_to_string */
extern void T244x22708310T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_to_string */
extern void T244x22708313T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_to_string */
extern void T244x22708311T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_canonical_actual_parameter_to_string */
extern void T244x22069257T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T249x19628166T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T249x19628172T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T249x19628173T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T249x19628174T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T249x19628175T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T249x19628183T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T249x19628184T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T249x19628185T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.append_to_string_with_space */
extern void T254x21151769T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T255x22085657(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T255x22085658(TC* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_runtime_name_to_string */
extern void T255x22085653T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T255x22085656T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_canonical_to_string */
extern void T255x22085654T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T257x24657930T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_types_to_list */
extern void T257x24231947T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.add_common_expanded_and_reference_types_to_lists */
extern void T257x24231945T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T257x24657931(TC* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T257x24543233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T257x24543235T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T258x24657930T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T258x24625176T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T279x18366547T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T279x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_other_seeds */
extern void T279x18366540T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T279x18366541T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T279x18366548T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T279x18366544T6(TC* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T279x18366538T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T279x18366539T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T279x18366533(TC* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T279x18366534(TC* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T279x18366543T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T279x18366542T0(TC* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T279x19103758(TC* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T279x19103759(TC* ac, T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T311x21315641T6(TC* ac, T0* C, T6 a1);
/* Call to ET_ASSERTION.process */
extern void T314x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T314x15040516(TC* ac, T0* C);
/* Call to ET_EXPRESSION.process */
extern void T315x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.add_separate_arguments */
extern void T315x17104910T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_EXPRESSION.reset */
extern void T315x15040516(TC* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T315x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.keep_head */
extern void T331x2326539T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.remove_head */
extern void T331x2326533T6(TC* ac, T0* C, T6 a1);
/* Call to STRING_GENERAL.append_code */
extern void T331x2326558T10(TC* ac, T0* C, T10 a1);
/* Call to ET_INSTRUCTION.process */
extern void T366x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T366x20250632(TC* ac, T0* C);
/* Call to ET_AGENT.set_arguments */
extern void T393x14565392T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T393x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T398x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T398x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.process */
extern void T416x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T416x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T416x17563658(TC* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T418x20725770T0(TC* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T418x17563658(TC* ac, T0* C);
/* Call to ET_OPERAND.set_index */
extern void T419x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T439x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_attached_result_index */
extern void T446x14876683T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_result_index */
extern void T446x14876684T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INLINE_AGENT.set_inline_separate_arguments */
extern void T446x17956879T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_iteration_components */
extern void T446x17956880T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T446x17956881T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T446x14565392T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T452x16482320T0(TC* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T452x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T452x16482321T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T568x29392920(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T568x29392921T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T568x29392919T0(TC* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T568x29392924(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T568x12697658(TC* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T568x29392922T0(TC* ac, T0* C, T0* a1);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T619x30162946T0(TC* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.append_canonical_to_string */
extern void T658x22069257T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T840x24543233T0(TC* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T840x24543235T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T910x19513386T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T910x19513379T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T1045x16384014T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T1045x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T1045x16384015T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T1055x16465960T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T1055x17563657T6(TC* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T1055x16465961T0(TC* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T1055x16465962T0(TC* ac, T0* C, T0* a1);
/* Call to ET_CHOICE.reset */
extern void T1126x19824649(TC* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T1129x19824649(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1273x22708315(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T1273x15466510(TC* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T1273x22708313T0(TC* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONSTRAINT.reset */
extern void T1358x15466510(TC* ac, T0* C);
/* Call to ET_TYPE_CONSTRAINT.reset_renames */
extern void T1358x15466509(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset */
extern void T1416x15466510(TC* ac, T0* C);
/* Call to ET_CONSTRAINT.reset_renames */
extern void T1416x15466509(TC* ac, T0* C);
/* Call to ET_ADAPTED_CLASS.add_overloaded_procedures */
extern void T1492x15237127T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_ADAPTED_CLASS.add_overloaded_queries */
extern void T1492x15237128T0T0(TC* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1546x30162946T0(TC* ac, T0* C, T0* a1);
/* Call to ET_UNTAGGED_ASSERTION.reset */
extern void T1635x15040516(TC* ac, T0* C);
/* Call to ET_ECF_GROUP.set_options */
extern void T1811x13860880T0(TC* ac, T0* C, T0* a1);
/* Call to ET_OPERATOR.set_seed */
extern void T1830x21315641T6(TC* ac, T0* C, T6 a1);
/* Call to ET_OPERATOR.reset */
extern void T1830x21315642(TC* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T2086x20512770T0T0T0(TC* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T2089x19791874T0(TC* ac, T0* C, T0* a1);
/* Call to LX_TRANSITION [LX_NFA_STATE].record */
extern void T2250x26935300T0(TC* ac, T0* C, T0* a1);
extern T0* GE_ma33(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1651(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma1650(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma376(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma327(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma250(TC* ac, T6 c, T6 n, ...);
extern T0* GE_ma613(TC* ac, T6 c, T6 n, ...);
extern T0* GE_mt171(TC* ac);
extern T0* GE_mt2055(TC* ac, T0* a1, T0* a2, T8 a3);
extern T0* GE_mt693(TC* ac, T0* a1, T0* a2, T0* a3);
extern T0* GE_mt926(TC* ac, T0* a1);
extern T0* GE_mt31(TC* ac, T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* ge401ov6307841;
extern T0* ge488ov7995457;
extern T0* ge498ov8159289;
extern T0* ge366ov5996588;
extern T0* ge730ov11862020;
extern T0* ge729ov11862020;
extern T0* ge723ov11862020;
extern T0* ge731ov11862020;
extern T0* ge734ov11862020;
extern T0* ge727ov11862020;
extern T0* ge722ov11862020;
extern T0* ge410ov6307841;
extern T0* ge724ov11862022;
extern T0* ge412ov6307841;
extern T0* ge1668ov11862020;
extern T0* ge1653ov11862020;
extern T0* ge1659ov11862020;
extern T0* ge1658ov11862020;
extern T0* ge1657ov11862020;
extern T0* ge1648ov11862020;
extern T0* ge1647ov11862020;
extern T0* ge1665ov11862020;
extern T0* ge1662ov11862020;
extern T0* ge1678ov11862020;
extern T0* ge332ov5439510;
extern T0* ge747ov12238849;
extern T0* ge334ov5472263;
extern T0* ge337ov5521413;
extern T0* ge337ov5521420;
extern T0* ge337ov5521411;
extern T0* ge337ov5521418;
extern T0* ge332ov5439511;
extern T0* ge332ov5439512;
extern T0* ge332ov5439513;
extern T0* ge337ov5521410;
extern T0* ge337ov5521417;
extern T0* ge337ov5521412;
extern T0* ge337ov5521419;
extern T0* ge337ov5521414;
extern T0* ge337ov5521421;
extern T0* ge337ov5521415;
extern T0* ge337ov5521422;
extern T0* ge334ov5472258;
extern T0* ge334ov5472257;
extern T0* ge334ov5472265;
extern T0* ge334ov5472264;
extern T0* ge1521ov24920693;
extern T0* ge1521ov24920698;
extern T0* ge416ov6307841;
extern T0* ge396ov6488072;
extern T0* ge1521ov24920689;
extern T0* ge1521ov24920697;
extern T0* ge746ov12222465;
extern T0* ge746ov12222471;
extern T0* ge746ov12222469;
extern T0* ge748ov12255239;
extern T0* ge1521ov24920695;
extern T0* ge1521ov24920694;
extern T0* ge1521ov24920696;
extern T0* ge397ov6504464;
extern T0* ge1521ov24920690;
extern T0* ge1521ov24920692;
extern T0* ge1521ov24920622;
extern T0* ge1521ov24920621;
extern T0* ge1521ov24920287;
extern T0* ge1521ov24920636;
extern T0* ge395ov6471699;
extern T0* ge395ov6471700;
extern T0* ge789ov12927007;
extern T0* ge789ov12926993;
extern T0* ge789ov12926991;
extern T0* ge789ov12926977;
extern T0* ge789ov12926995;
extern T0* ge789ov12926992;
extern T0* ge789ov12926996;
extern T0* ge789ov12927001;
extern T0* ge789ov12926998;
extern T0* ge789ov12926994;
extern T0* ge789ov12926988;
extern T0* ge789ov12926989;
extern T0* ge789ov12926997;
extern T0* ge789ov12926990;
extern T0* ge789ov12927002;
extern T0* ge789ov12926978;
extern T0* ge789ov12927004;
extern T0* ge789ov12927005;
extern T0* ge789ov12926980;
extern T0* ge789ov12926979;
extern T0* ge789ov12927003;
extern T0* ge789ov12927006;
extern T0* ge789ov12926986;
extern T0* ge789ov12926987;
extern T0* ge789ov12926983;
extern T0* ge789ov12927000;
extern T0* ge789ov12926999;
extern T0* ge789ov12926984;
extern T0* ge789ov12926985;
extern T0* ge789ov12926982;
extern T0* ge789ov12926981;
extern T0* ge785ov12861458;
extern T0* ge1521ov24920699;
extern T0* ge1521ov24920691;
extern T0* ge1521ov24920328;
extern T0* ge1521ov24920619;
extern T0* ge411ov6193159;
extern T0* ge411ov6733834;
extern T0* ge398ov6520842;
extern T0* ge1521ov24920322;
extern T0* ge1521ov24920296;
extern T0* ge1521ov24920292;
extern T0* ge1521ov24920294;
extern T0* ge1521ov24920632;
extern T0* ge1521ov24920285;
extern T0* ge1521ov24920330;
extern T0* ge1521ov24920614;
extern T0* ge1521ov24920618;
extern T0* ge1521ov24920615;
extern T0* ge1521ov24920617;
extern T0* ge1521ov24920616;
extern T0* ge1521ov24920623;
extern T0* ge1521ov24920625;
extern T0* ge1521ov24920624;
extern T0* ge1521ov24920626;
extern T0* ge1284ov21037067;
extern T0* ge1515ov24821763;
extern T0* ge1515ov24821762;
extern T0* ge1515ov24821761;
extern T0* ge1290ov21136194;
extern T0* ge1290ov21136179;
extern T0* ge1520ov24904375;
extern T0* ge1520ov24904116;
extern T0* ge1520ov24903833;
extern T0* ge1378ov22577159;
extern T0* ge1385ov22691866;
extern T0* ge1374ov22511661;
extern T0* ge1290ov21136294;
extern T0* ge1290ov21136341;
extern T0* ge1290ov21136320;
extern T0* ge1290ov21136342;
extern T0* ge1290ov21136344;
extern T0* ge1290ov21136327;
extern T0* ge1290ov21136343;
extern T0* ge1290ov21136278;
extern T0* ge1290ov21136339;
extern T0* ge1290ov21136288;
extern T0* ge1290ov21136340;
extern T0* ge1520ov24904398;
extern T0* ge1520ov24904121;
extern T0* ge1520ov24903855;
extern T0* ge1520ov24904391;
extern T0* ge1520ov24904119;
extern T0* ge1520ov24903848;
extern T0* ge1290ov21136442;
extern T0* ge1290ov21136438;
extern T0* ge1290ov21136437;
extern T0* ge1317ov21577735;
extern T0* ge1290ov21136415;
extern T0* ge1290ov21136418;
extern T0* ge1290ov21136420;
extern T0* ge1290ov21136423;
extern T0* ge1290ov21136439;
extern T0* ge1290ov21136394;
extern T0* ge1290ov21136425;
extern T0* ge1290ov21136426;
extern T0* ge1290ov21136427;
extern T0* ge1290ov21136428;
extern T0* ge1290ov21136429;
extern T0* ge1290ov21136430;
extern T0* ge1290ov21136431;
extern T0* ge1290ov21136432;
extern T0* ge1290ov21136433;
extern T0* ge1290ov21136434;
extern T0* ge1290ov21136435;
extern T0* ge1290ov21136436;
extern T0* ge1290ov21136441;
extern T0* ge1290ov21135941;
extern T0* ge1290ov21136308;
extern T0* ge1290ov21136263;
extern T0* ge1520ov24904481;
extern T0* ge1520ov24904164;
extern T0* ge1520ov24903938;
extern T0* ge1520ov24904483;
extern T0* ge1520ov24904165;
extern T0* ge1520ov24903940;
extern T0* ge1520ov24904387;
extern T0* ge1520ov24903844;
extern T0* ge1520ov24904390;
extern T0* ge1520ov24903847;
extern T0* ge1520ov24904389;
extern T0* ge1520ov24903846;
extern T0* ge1520ov24904388;
extern T0* ge1520ov24903845;
extern T0* ge1520ov24904479;
extern T0* ge1520ov24903936;
extern T0* ge1520ov24904480;
extern T0* ge1520ov24903937;
extern T0* ge1520ov24904554;
extern T0* ge1520ov24904199;
extern T0* ge1520ov24904009;
extern T0* ge1520ov24904484;
extern T0* ge1520ov24904166;
extern T0* ge1520ov24903941;
extern T0* ge1520ov24904567;
extern T0* ge1520ov24904211;
extern T0* ge1520ov24904022;
extern T0* ge1520ov24904568;
extern T0* ge1520ov24904023;
extern T0* ge1520ov24904492;
extern T0* ge1520ov24904170;
extern T0* ge1520ov24903947;
extern T0* ge1520ov24904491;
extern T0* ge1520ov24904169;
extern T0* ge1520ov24903946;
extern T0* ge1520ov24904487;
extern T0* ge1520ov24904168;
extern T0* ge1520ov24903944;
extern T0* ge1520ov24904485;
extern T0* ge1520ov24904167;
extern T0* ge1520ov24903942;
extern T0* ge1520ov24904486;
extern T0* ge1520ov24903943;
extern T0* ge1510ov24739854;
extern T0* ge1510ov24739849;
extern T0* ge1510ov24739844;
extern T0* ge1290ov21135944;
extern T0* ge1290ov21135943;
extern T0* ge1290ov21135942;
extern T0* ge1290ov21135940;
extern T0* ge1290ov21136304;
extern T0* ge1290ov21136292;
extern T0* ge1290ov21135939;
extern T0* ge1290ov21135936;
extern T0* ge1290ov21135938;
extern T0* ge1290ov21135937;
extern T0* ge1290ov21135935;
extern T0* ge1290ov21135934;
extern T0* ge1290ov21135933;
extern T0* ge1290ov21135932;
extern T0* ge1290ov21135931;
extern T0* ge1290ov21135930;
extern T0* ge1290ov21135929;
extern T0* ge1290ov21135928;
extern T0* ge1290ov21135925;
extern T0* ge1290ov21135924;
extern T0* ge1290ov21135923;
extern T0* ge1290ov21135922;
extern T0* ge1290ov21135921;
extern T0* ge1290ov21135917;
extern T0* ge1290ov21135915;
extern T0* ge1290ov21135913;
extern T0* ge1290ov21135912;
extern T0* ge1290ov21135911;
extern T0* ge1290ov21135910;
extern T0* ge1290ov21135909;
extern T0* ge1290ov21135908;
extern T0* ge1290ov21135907;
extern T0* ge1290ov21135905;
extern T0* ge1290ov21135903;
extern T0* ge1290ov21135902;
extern T0* ge1290ov21135901;
extern T0* ge1290ov21135898;
extern T0* ge1290ov21135897;
extern T0* ge1290ov21135896;
extern T0* ge1290ov21135895;
extern T0* ge1290ov21135894;
extern T0* ge1290ov21135945;
extern T0* ge1290ov21135918;
extern T0* ge1290ov21135900;
extern T0* ge1290ov21135892;
extern T0* ge1290ov21136281;
extern T0* ge1290ov21135926;
extern T0* ge1510ov24739855;
extern T0* ge1510ov24739850;
extern T0* ge1510ov24739845;
extern T0* ge418ov6144031;
extern T0* ge418ov6144032;
extern T0* ge403ov6602764;
extern T0* ge403ov6602763;
extern T0* ge421ov6144031;
extern T0* ge421ov6144032;
extern T0* ge864ov14155801;
extern T0* ge1290ov21136036;
extern T0* ge1290ov21135946;
extern T0* ge1290ov21136141;
extern T0* ge1290ov21136007;
extern T0* ge1290ov21136113;
extern T0* ge1290ov21135972;
extern T0* ge1290ov21136086;
extern T0* ge1520ov24904563;
extern T0* ge1520ov24904208;
extern T0* ge1520ov24904018;
extern T0* ge1290ov21136253;
extern T0* ge1290ov21135995;
extern T0* ge1520ov24904559;
extern T0* ge1520ov24904204;
extern T0* ge1520ov24904014;
extern T0* ge1520ov24904562;
extern T0* ge1520ov24904207;
extern T0* ge1520ov24904017;
extern T0* ge1290ov21136001;
extern T0* ge1520ov24904370;
extern T0* ge1520ov24904114;
extern T0* ge1520ov24903828;
extern T0* ge1520ov24904371;
extern T0* ge1520ov24903829;
extern T0* ge1520ov24904364;
extern T0* ge1520ov24904111;
extern T0* ge1520ov24903822;
extern T0* ge1520ov24904373;
extern T0* ge1520ov24904115;
extern T0* ge1520ov24903831;
extern T0* ge1520ov24904372;
extern T0* ge1520ov24903830;
extern T0* ge1520ov24904369;
extern T0* ge1520ov24904113;
extern T0* ge1520ov24903827;
extern T0* ge1520ov24904312;
extern T0* ge1520ov24904098;
extern T0* ge1520ov24903772;
extern T0* ge1520ov24904311;
extern T0* ge1520ov24904097;
extern T0* ge1520ov24903771;
extern T0* ge1520ov24904310;
extern T0* ge1520ov24904096;
extern T0* ge1520ov24903770;
extern T0* ge1520ov24904309;
extern T0* ge1520ov24904095;
extern T0* ge1520ov24903769;
extern T0* ge1520ov24904308;
extern T0* ge1520ov24903768;
extern T0* ge1520ov24904243;
extern T0* ge1520ov24904064;
extern T0* ge1520ov24903703;
extern T0* ge1520ov24904241;
extern T0* ge1520ov24904063;
extern T0* ge1520ov24903701;
extern T0* ge1520ov24904263;
extern T0* ge1520ov24904074;
extern T0* ge1520ov24903723;
extern T0* ge1520ov24904264;
extern T0* ge1520ov24903724;
extern T0* ge1520ov24904247;
extern T0* ge1520ov24904067;
extern T0* ge1520ov24903707;
extern T0* ge1520ov24904246;
extern T0* ge1520ov24903706;
extern T0* ge1520ov24904248;
extern T0* ge1520ov24903708;
extern T0* ge1520ov24904272;
extern T0* ge1520ov24904078;
extern T0* ge1520ov24903732;
extern T0* ge1520ov24904261;
extern T0* ge1520ov24903721;
extern T0* ge1520ov24904262;
extern T0* ge1520ov24903722;
extern T0* ge1520ov24904318;
extern T0* ge1520ov24904099;
extern T0* ge1520ov24903778;
extern T0* ge1294ov21200907;
extern T0* ge1520ov24904315;
extern T0* ge1520ov24903775;
extern T0* ge1520ov24904337;
extern T0* ge1520ov24904101;
extern T0* ge1520ov24903797;
extern T0* ge1520ov24904330;
extern T0* ge1520ov24904100;
extern T0* ge1520ov24903790;
extern T0* ge1520ov24904319;
extern T0* ge1520ov24903779;
extern T0* ge1520ov24904316;
extern T0* ge1520ov24903776;
extern T0* ge1520ov24904338;
extern T0* ge1520ov24903798;
extern T0* ge1520ov24904331;
extern T0* ge1520ov24903791;
extern T0* ge1520ov24904320;
extern T0* ge1520ov24903780;
extern T0* ge1520ov24904317;
extern T0* ge1520ov24903777;
extern T0* ge1520ov24904339;
extern T0* ge1520ov24903799;
extern T0* ge1520ov24904332;
extern T0* ge1520ov24903792;
extern T0* ge1520ov24904482;
extern T0* ge1520ov24903939;
extern T0* ge1520ov24904360;
extern T0* ge1520ov24904105;
extern T0* ge1520ov24903818;
extern T0* ge1520ov24904359;
extern T0* ge1520ov24903817;
extern T0* ge1520ov24904355;
extern T0* ge1520ov24904103;
extern T0* ge1520ov24903815;
extern T0* ge1520ov24904321;
extern T0* ge1520ov24903781;
extern T0* ge1520ov24904314;
extern T0* ge1520ov24903774;
extern T0* ge1520ov24904346;
extern T0* ge1520ov24904102;
extern T0* ge1520ov24903806;
extern T0* ge1520ov24904313;
extern T0* ge1520ov24903773;
extern T0* ge1520ov24904345;
extern T0* ge1520ov24903805;
extern T0* ge1520ov24904336;
extern T0* ge1520ov24903796;
extern T0* ge1520ov24904344;
extern T0* ge1520ov24903804;
extern T0* ge1520ov24904329;
extern T0* ge1520ov24903789;
extern T0* ge1520ov24904343;
extern T0* ge1520ov24903803;
extern T0* ge1520ov24904356;
extern T0* ge1520ov24904104;
extern T0* ge1520ov24903816;
extern T0* ge1520ov24904471;
extern T0* ge1520ov24904159;
extern T0* ge1520ov24903928;
extern T0* ge1520ov24904469;
extern T0* ge1520ov24904158;
extern T0* ge1520ov24903926;
extern T0* ge1520ov24904250;
extern T0* ge1520ov24904068;
extern T0* ge1520ov24903710;
extern T0* ge1520ov24904419;
extern T0* ge1520ov24904133;
extern T0* ge1520ov24903876;
extern T0* ge1520ov24904249;
extern T0* ge1520ov24903709;
extern T0* ge1520ov24904418;
extern T0* ge1520ov24903875;
extern T0* ge1290ov21136287;
extern T0* ge1290ov21136333;
extern T0* ge1290ov21136307;
extern T0* ge1520ov24904417;
extern T0* ge1520ov24904132;
extern T0* ge1520ov24903874;
extern T0* ge1520ov24904280;
extern T0* ge1520ov24904083;
extern T0* ge1520ov24903740;
extern T0* ge1520ov24904278;
extern T0* ge1520ov24904081;
extern T0* ge1520ov24903738;
extern T0* ge1520ov24904277;
extern T0* ge1520ov24903737;
extern T0* ge1520ov24904284;
extern T0* ge1520ov24904085;
extern T0* ge1520ov24903744;
extern T0* ge1520ov24904283;
extern T0* ge1520ov24903743;
extern T0* ge1520ov24904285;
extern T0* ge1520ov24904086;
extern T0* ge1520ov24903745;
extern T0* ge1520ov24904324;
extern T0* ge1520ov24903784;
extern T0* ge1520ov24904323;
extern T0* ge1520ov24903783;
extern T0* ge1520ov24904350;
extern T0* ge1520ov24903810;
extern T0* ge1520ov24904322;
extern T0* ge1520ov24903782;
extern T0* ge1520ov24904349;
extern T0* ge1520ov24903809;
extern T0* ge1520ov24904340;
extern T0* ge1520ov24903800;
extern T0* ge1520ov24904348;
extern T0* ge1520ov24903808;
extern T0* ge1520ov24904333;
extern T0* ge1520ov24903793;
extern T0* ge1520ov24904347;
extern T0* ge1520ov24903807;
extern T0* ge1290ov21136443;
extern T0* ge1290ov21136445;
extern T0* ge1290ov21136444;
extern T0* ge1520ov24904558;
extern T0* ge1520ov24904203;
extern T0* ge1520ov24904013;
extern T0* ge1290ov21136413;
extern T0* ge1520ov24904557;
extern T0* ge1520ov24904202;
extern T0* ge1520ov24904012;
extern T0* ge1290ov21136252;
extern T0* ge1290ov21136251;
extern T0* ge1290ov21136250;
extern T0* ge1290ov21136244;
extern T0* ge1290ov21136180;
extern T0* ge1290ov21136163;
extern T0* ge1290ov21136161;
extern T0* ge1290ov21136155;
extern T0* ge1290ov21136153;
extern T0* ge1290ov21136152;
extern T0* ge1290ov21136123;
extern T0* ge1290ov21136097;
extern T0* ge1290ov21136095;
extern T0* ge1290ov21136094;
extern T0* ge1290ov21136092;
extern T0* ge1290ov21136057;
extern T0* ge1290ov21136056;
extern T0* ge1290ov21136055;
extern T0* ge1290ov21136054;
extern T0* ge1290ov21136053;
extern T0* ge1290ov21136052;
extern T0* ge1290ov21136051;
extern T0* ge1290ov21136050;
extern T0* ge1290ov21136035;
extern T0* ge1290ov21136034;
extern T0* ge1290ov21135979;
extern T0* ge1290ov21135978;
extern T0* ge1290ov21136215;
extern T0* ge1290ov21136160;
extern T0* ge1290ov21136140;
extern T0* ge1290ov21136125;
extern T0* ge1290ov21136412;
extern T0* ge1290ov21136409;
extern T0* ge1290ov21136408;
extern T0* ge1290ov21136407;
extern T0* ge1290ov21136406;
extern T0* ge1290ov21136404;
extern T0* ge1290ov21136403;
extern T0* ge1290ov21136402;
extern T0* ge1290ov21136249;
extern T0* ge1290ov21136248;
extern T0* ge1290ov21136247;
extern T0* ge1290ov21136243;
extern T0* ge1290ov21136242;
extern T0* ge1290ov21136076;
extern T0* ge1290ov21136075;
extern T0* ge1290ov21135966;
extern T0* ge1290ov21135965;
extern T0* ge1290ov21135964;
extern T0* ge1290ov21135963;
extern T0* ge1290ov21135962;
extern T0* ge1290ov21135961;
extern T0* ge1290ov21135957;
extern T0* ge1290ov21135956;
extern T0* ge1290ov21135955;
extern T0* ge1290ov21135954;
extern T0* ge1290ov21135953;
extern T0* ge1290ov21135952;
extern T0* ge1290ov21135951;
extern T0* ge1290ov21135950;
extern T0* ge1290ov21136401;
extern T0* ge1290ov21136224;
extern T0* ge1290ov21136178;
extern T0* ge1290ov21136177;
extern T0* ge1290ov21136176;
extern T0* ge1290ov21136175;
extern T0* ge1290ov21136174;
extern T0* ge1290ov21136173;
extern T0* ge1290ov21136172;
extern T0* ge1290ov21136171;
extern T0* ge1290ov21136170;
extern T0* ge1290ov21136169;
extern T0* ge1290ov21136168;
extern T0* ge1290ov21136167;
extern T0* ge1290ov21136166;
extern T0* ge1290ov21136165;
extern T0* ge1290ov21136189;
extern T0* ge1290ov21136186;
extern T0* ge1290ov21136159;
extern T0* ge1290ov21136148;
extern T0* ge1290ov21136138;
extern T0* ge1290ov21136135;
extern T0* ge1290ov21136131;
extern T0* ge1290ov21136128;
extern T0* ge1290ov21136114;
extern T0* ge1290ov21136073;
extern T0* ge1290ov21136070;
extern T0* ge1290ov21136067;
extern T0* ge1290ov21136064;
extern T0* ge1290ov21135996;
extern T0* ge1290ov21135985;
extern T0* ge1290ov21135982;
extern T0* ge1290ov21135970;
extern T0* ge1290ov21136022;
extern T0* ge1290ov21136021;
extern T0* ge1290ov21136262;
extern T0* ge1290ov21136190;
extern T0* ge1290ov21136156;
extern T0* ge1290ov21136112;
extern T0* ge1290ov21136111;
extern T0* ge1290ov21136110;
extern T0* ge1290ov21136109;
extern T0* ge1290ov21136106;
extern T0* ge1290ov21136099;
extern T0* ge1290ov21136093;
extern T0* ge1290ov21136085;
extern T0* ge1290ov21136077;
extern T0* ge1290ov21136074;
extern T0* ge1290ov21136008;
extern T0* ge1290ov21135986;
extern T0* ge1290ov21135967;
extern T0* ge1290ov21135927;
extern T0* ge1290ov21136260;
extern T0* ge1290ov21136259;
extern T0* ge1290ov21136234;
extern T0* ge1290ov21136233;
extern T0* ge1290ov21136232;
extern T0* ge1290ov21136231;
extern T0* ge1290ov21136230;
extern T0* ge1290ov21136229;
extern T0* ge1290ov21136228;
extern T0* ge1290ov21136227;
extern T0* ge1290ov21136226;
extern T0* ge1290ov21136223;
extern T0* ge1290ov21136222;
extern T0* ge1290ov21136221;
extern T0* ge1290ov21136220;
extern T0* ge1290ov21136219;
extern T0* ge1290ov21136218;
extern T0* ge1290ov21136217;
extern T0* ge1290ov21136216;
extern T0* ge1290ov21136213;
extern T0* ge1290ov21136212;
extern T0* ge1290ov21136211;
extern T0* ge1290ov21136210;
extern T0* ge1290ov21136209;
extern T0* ge1290ov21136208;
extern T0* ge1290ov21136207;
extern T0* ge1290ov21136206;
extern T0* ge1290ov21136203;
extern T0* ge1290ov21136202;
extern T0* ge1290ov21136201;
extern T0* ge1290ov21136200;
extern T0* ge1290ov21136199;
extern T0* ge1290ov21136198;
extern T0* ge1290ov21136121;
extern T0* ge1290ov21136117;
extern T0* ge1290ov21136256;
extern T0* ge1290ov21136254;
extern T0* ge1290ov21136239;
extern T0* ge1290ov21136193;
extern T0* ge1290ov21136192;
extern T0* ge1290ov21136191;
extern T0* ge1290ov21136188;
extern T0* ge1290ov21136187;
extern T0* ge1290ov21136185;
extern T0* ge1290ov21136184;
extern T0* ge1290ov21136183;
extern T0* ge1290ov21136182;
extern T0* ge1290ov21136162;
extern T0* ge1290ov21136158;
extern T0* ge1290ov21136157;
extern T0* ge1290ov21136154;
extern T0* ge1290ov21136150;
extern T0* ge1290ov21136149;
extern T0* ge1290ov21136147;
extern T0* ge1290ov21136146;
extern T0* ge1290ov21136145;
extern T0* ge1290ov21136143;
extern T0* ge1290ov21136137;
extern T0* ge1290ov21136136;
extern T0* ge1290ov21136134;
extern T0* ge1290ov21136133;
extern T0* ge1290ov21136130;
extern T0* ge1290ov21136129;
extern T0* ge1290ov21136127;
extern T0* ge1290ov21136126;
extern T0* ge1290ov21136108;
extern T0* ge1290ov21136107;
extern T0* ge1290ov21136105;
extern T0* ge1290ov21136104;
extern T0* ge1290ov21136103;
extern T0* ge1290ov21136102;
extern T0* ge1290ov21136101;
extern T0* ge1290ov21136100;
extern T0* ge1290ov21136096;
extern T0* ge1290ov21136089;
extern T0* ge1290ov21136088;
extern T0* ge1290ov21136087;
extern T0* ge1290ov21136081;
extern T0* ge1290ov21136079;
extern T0* ge1290ov21136072;
extern T0* ge1290ov21136071;
extern T0* ge1290ov21136069;
extern T0* ge1290ov21136068;
extern T0* ge1290ov21136066;
extern T0* ge1290ov21136065;
extern T0* ge1290ov21136063;
extern T0* ge1290ov21136062;
extern T0* ge1290ov21136060;
extern T0* ge1290ov21136044;
extern T0* ge1290ov21136043;
extern T0* ge1290ov21136042;
extern T0* ge1290ov21136040;
extern T0* ge1290ov21136039;
extern T0* ge1290ov21136032;
extern T0* ge1290ov21136030;
extern T0* ge1290ov21136028;
extern T0* ge1290ov21136027;
extern T0* ge1290ov21136025;
extern T0* ge1290ov21136012;
extern T0* ge1290ov21136010;
extern T0* ge1290ov21136009;
extern T0* ge1290ov21136002;
extern T0* ge1290ov21135991;
extern T0* ge1290ov21135988;
extern T0* ge1290ov21135984;
extern T0* ge1290ov21135983;
extern T0* ge1290ov21135981;
extern T0* ge1290ov21135980;
extern T0* ge1290ov21135969;
extern T0* ge1290ov21135968;
extern T0* ge1290ov21135958;
extern T0* ge1290ov21135916;
extern T0* ge1290ov21136016;
extern T0* ge1290ov21136015;
extern T0* ge1290ov21136014;
extern T0* ge1290ov21136013;
extern T0* ge1290ov21136011;
extern T0* ge1290ov21135906;
extern T0* ge1290ov21136003;
extern T0* ge1290ov21136019;
extern T0* ge1290ov21135904;
extern T0* ge1290ov21136214;
extern T0* ge1290ov21136181;
extern T0* ge1290ov21136058;
extern T0* ge1290ov21135974;
extern T0* ge1290ov21136257;
extern T0* ge1290ov21136115;
extern T0* ge1290ov21136098;
extern T0* ge1290ov21136091;
extern T0* ge1290ov21136090;
extern T0* ge1290ov21136080;
extern T0* ge1290ov21136018;
extern T0* ge1290ov21136037;
extern T0* ge1290ov21136033;
extern T0* ge1290ov21135919;
extern T0* ge1290ov21135998;
extern T0* ge1290ov21135997;
extern T0* ge1290ov21135987;
extern T0* ge1290ov21135977;
extern T0* ge1290ov21135976;
extern T0* ge1290ov21135975;
extern T0* ge1290ov21135971;
extern T0* ge1290ov21135899;
extern T0* ge1290ov21136049;
extern T0* ge1290ov21136048;
extern T0* ge1290ov21135949;
extern T0* ge1290ov21135893;
extern T0* ge1290ov21136245;
extern T0* ge1290ov21136083;
extern T0* ge1290ov21136047;
extern T0* ge1290ov21136410;
extern T0* ge1290ov21136139;
extern T0* ge1290ov21136059;
extern T0* ge1290ov21136006;
extern T0* ge1290ov21136005;
extern T0* ge1290ov21136004;
extern T0* ge1290ov21135994;
extern T0* ge1290ov21135993;
extern T0* ge1290ov21136395;
extern T0* ge1290ov21136398;
extern T0* ge1290ov21136132;
extern T0* ge1290ov21135990;
extern T0* ge1290ov21136397;
extern T0* ge1290ov21136204;
extern T0* ge1290ov21136164;
extern T0* ge1290ov21136120;
extern T0* ge1290ov21136020;
extern T0* ge1290ov21136017;
extern T0* ge1290ov21135973;
extern T0* ge1290ov21135959;
extern T0* ge1290ov21135947;
extern T0* ge1290ov21136255;
extern T0* ge1290ov21136196;
extern T0* ge1290ov21136084;
extern T0* ge1290ov21136078;
extern T0* ge1290ov21136046;
extern T0* ge1290ov21136045;
extern T0* ge1290ov21136000;
extern T0* ge1290ov21136236;
extern T0* ge1290ov21136240;
extern T0* ge1290ov21136238;
extern T0* ge1290ov21136237;
extern T0* ge1290ov21136197;
extern T0* ge1290ov21136082;
extern T0* ge1290ov21136041;
extern T0* ge1290ov21136038;
extern T0* ge1290ov21135999;
extern T0* ge1290ov21135992;
extern T0* ge1520ov24904525;
extern T0* ge1520ov24904181;
extern T0* ge1520ov24903980;
extern T0* ge1521ov24920337;
extern T0* ge1521ov24920685;
extern T0* ge1521ov24920686;
extern T0* ge1521ov24920663;
extern T0* ge1521ov24920370;
extern T0* ge1521ov24920274;
extern T0* ge1521ov24920351;
extern T0* ge1521ov24920674;
extern T0* ge1521ov24920276;
extern T0* ge1521ov24920279;
extern T0* ge1521ov24920675;
extern T0* ge1521ov24920654;
extern T0* ge1521ov24920281;
extern T0* ge1521ov24920497;
extern T0* ge1521ov24920386;
extern T0* ge1521ov24920321;
extern T0* ge1521ov24920309;
extern T0* ge1521ov24920548;
extern T0* ge1521ov24920542;
extern T0* ge1521ov24920669;
extern T0* ge1521ov24920665;
extern T0* ge1521ov24920539;
extern T0* ge1521ov24920681;
extern T0* ge1521ov24920677;
extern T0* ge1521ov24920635;
extern T0* ge1521ov24920631;
extern T0* ge1521ov24920554;
extern T0* ge1521ov24920555;
extern T0* ge1521ov24920551;
extern T0* ge1521ov24920436;
extern T0* ge1521ov24920661;
extern T0* ge1521ov24920645;
extern T0* ge1521ov24920379;
extern T0* ge1521ov24920354;
extern T0* ge1520ov24904392;
extern T0* ge1520ov24903849;
extern T0* ge1520ov24904513;
extern T0* ge1520ov24904177;
extern T0* ge1520ov24903968;
extern T0* ge1520ov24904495;
extern T0* ge1520ov24904171;
extern T0* ge1520ov24903950;
extern T0* ge1520ov24904532;
extern T0* ge1520ov24904184;
extern T0* ge1520ov24903987;
extern T0* ge1520ov24904530;
extern T0* ge1520ov24904183;
extern T0* ge1520ov24903985;
extern T0* ge1520ov24904407;
extern T0* ge1520ov24904127;
extern T0* ge1520ov24903864;
extern T0* ge1290ov21136318;
extern T0* ge1520ov24904500;
extern T0* ge1520ov24904174;
extern T0* ge1520ov24903955;
extern T0* ge1520ov24904498;
extern T0* ge1520ov24904173;
extern T0* ge1520ov24903953;
extern T0* ge1520ov24904497;
extern T0* ge1520ov24904172;
extern T0* ge1520ov24903952;
extern T0* ge1520ov24904496;
extern T0* ge1520ov24903951;
extern T0* ge1520ov24904260;
extern T0* ge1520ov24904073;
extern T0* ge1520ov24903720;
extern T0* ge1520ov24904236;
extern T0* ge1520ov24904059;
extern T0* ge1520ov24903696;
extern T0* ge1520ov24904366;
extern T0* ge1520ov24903824;
extern T0* ge1520ov24904494;
extern T0* ge1520ov24903949;
extern T0* ge1520ov24904493;
extern T0* ge1520ov24903948;
extern T0* ge1520ov24904259;
extern T0* ge1520ov24904072;
extern T0* ge1520ov24903719;
extern T0* ge1290ov21136347;
extern T0* ge1290ov21136348;
extern T0* ge1290ov21136349;
extern T0* ge1290ov21136350;
extern T0* ge1290ov21136351;
extern T0* ge1290ov21136355;
extern T0* ge1290ov21136356;
extern T0* ge1290ov21136357;
extern T0* ge1290ov21136358;
extern T0* ge1290ov21136359;
extern T0* ge1290ov21136360;
extern T0* ge1290ov21136361;
extern T0* ge1290ov21136362;
extern T0* ge1290ov21136364;
extern T0* ge1290ov21136365;
extern T0* ge1290ov21136367;
extern T0* ge1290ov21136368;
extern T0* ge1290ov21136369;
extern T0* ge1290ov21136370;
extern T0* ge1290ov21136371;
extern T0* ge1290ov21136372;
extern T0* ge1290ov21136373;
extern T0* ge1290ov21136374;
extern T0* ge1290ov21136376;
extern T0* ge1290ov21136377;
extern T0* ge1290ov21136382;
extern T0* ge1290ov21136383;
extern T0* ge1290ov21136384;
extern T0* ge1290ov21136385;
extern T0* ge1290ov21136386;
extern T0* ge1290ov21136387;
extern T0* ge1290ov21136388;
extern T0* ge1290ov21136389;
extern T0* ge1290ov21136391;
extern T0* ge1290ov21136392;
extern T0* ge1520ov24904235;
extern T0* ge1520ov24904058;
extern T0* ge1520ov24903695;
extern T0* ge1520ov24904514;
extern T0* ge1520ov24903969;
extern T0* ge1520ov24904531;
extern T0* ge1520ov24903986;
extern T0* ge1520ov24904529;
extern T0* ge1520ov24903984;
extern T0* ge1520ov24904410;
extern T0* ge1520ov24904128;
extern T0* ge1520ov24903867;
extern T0* ge1290ov21136448;
extern T0* ge1290ov21136451;
extern T0* ge1520ov24904234;
extern T0* ge1520ov24903694;
extern T0* ge1520ov24904505;
extern T0* ge1520ov24904175;
extern T0* ge1520ov24903960;
extern T0* ge1521ov24920329;
extern T0* ge1521ov24920323;
extern T0* ge1521ov24920297;
extern T0* ge1521ov24920666;
extern T0* ge1521ov24920476;
extern T0* ge1521ov24920589;
extern T0* ge1521ov24920280;
extern T0* ge1521ov24920553;
extern T0* ge1521ov24920543;
extern T0* ge1521ov24920549;
extern T0* ge1521ov24920552;
extern T0* ge1521ov24920550;
extern T0* ge1521ov24920545;
extern T0* ge1521ov24920544;
extern T0* ge1521ov24920546;
extern T0* ge1521ov24920541;
extern T0* ge1521ov24920283;
extern T0* ge1521ov24920664;
extern T0* ge1521ov24920475;
extern T0* ge1521ov24920668;
extern T0* ge1521ov24920679;
extern T0* ge1521ov24920672;
extern T0* ge1521ov24920673;
extern T0* ge1521ov24920282;
extern T0* ge1521ov24920278;
extern T0* ge1520ov24904512;
extern T0* ge1520ov24904176;
extern T0* ge1520ov24903967;
extern T0* ge1520ov24904409;
extern T0* ge1520ov24903866;
extern T0* ge1520ov24904591;
extern T0* ge1520ov24904220;
extern T0* ge1520ov24904046;
extern T0* ge1520ov24904589;
extern T0* ge1520ov24904044;
extern T0* ge1520ov24904590;
extern T0* ge1520ov24904045;
extern T0* ge1520ov24904573;
extern T0* ge1520ov24904213;
extern T0* ge1520ov24904028;
extern T0* ge1520ov24904571;
extern T0* ge1520ov24904026;
extern T0* ge1520ov24904572;
extern T0* ge1520ov24904027;
extern T0* ge1520ov24904297;
extern T0* ge1520ov24904090;
extern T0* ge1520ov24903757;
extern T0* ge1520ov24904296;
extern T0* ge1520ov24903756;
extern T0* ge1520ov24904594;
extern T0* ge1520ov24904221;
extern T0* ge1520ov24904049;
extern T0* ge1520ov24904592;
extern T0* ge1520ov24904047;
extern T0* ge1520ov24904593;
extern T0* ge1520ov24904048;
extern T0* ge1520ov24904581;
extern T0* ge1520ov24904216;
extern T0* ge1520ov24904036;
extern T0* ge1520ov24904579;
extern T0* ge1520ov24904034;
extern T0* ge1520ov24904580;
extern T0* ge1520ov24904035;
extern T0* ge1520ov24904301;
extern T0* ge1520ov24904092;
extern T0* ge1520ov24903761;
extern T0* ge1520ov24904300;
extern T0* ge1520ov24903760;
extern T0* ge1520ov24904586;
extern T0* ge1520ov24904218;
extern T0* ge1520ov24904041;
extern T0* ge1520ov24904584;
extern T0* ge1520ov24904039;
extern T0* ge1520ov24904585;
extern T0* ge1520ov24904040;
extern T0* ge1520ov24904299;
extern T0* ge1520ov24904091;
extern T0* ge1520ov24903759;
extern T0* ge1520ov24904298;
extern T0* ge1520ov24903758;
extern T0* ge1520ov24904587;
extern T0* ge1520ov24904219;
extern T0* ge1520ov24904042;
extern T0* ge1520ov24904588;
extern T0* ge1520ov24904043;
extern T0* ge1520ov24904574;
extern T0* ge1520ov24904214;
extern T0* ge1520ov24904029;
extern T0* ge1520ov24904575;
extern T0* ge1520ov24904030;
extern T0* ge1520ov24904303;
extern T0* ge1520ov24904094;
extern T0* ge1520ov24903763;
extern T0* ge1520ov24904291;
extern T0* ge1520ov24904089;
extern T0* ge1520ov24903751;
extern T0* ge1520ov24904293;
extern T0* ge1520ov24903753;
extern T0* ge1520ov24904582;
extern T0* ge1520ov24904217;
extern T0* ge1520ov24904037;
extern T0* ge1520ov24904583;
extern T0* ge1520ov24904038;
extern T0* ge1520ov24904569;
extern T0* ge1520ov24904212;
extern T0* ge1520ov24904024;
extern T0* ge1520ov24904570;
extern T0* ge1520ov24904025;
extern T0* ge1520ov24904408;
extern T0* ge1520ov24903865;
extern T0* ge1520ov24904231;
extern T0* ge1520ov24904055;
extern T0* ge1520ov24903691;
extern T0* ge1520ov24904230;
extern T0* ge1520ov24903690;
extern T0* ge1520ov24904229;
extern T0* ge1520ov24903689;
extern T0* ge1520ov24904228;
extern T0* ge1520ov24903688;
extern T0* ge1520ov24904227;
extern T0* ge1520ov24903687;
extern T0* ge1520ov24904226;
extern T0* ge1520ov24903686;
extern T0* ge1520ov24904225;
extern T0* ge1520ov24904054;
extern T0* ge1520ov24903685;
extern T0* ge1520ov24904232;
extern T0* ge1520ov24904056;
extern T0* ge1520ov24903692;
extern T0* ge1520ov24904539;
extern T0* ge1520ov24904188;
extern T0* ge1520ov24903994;
extern T0* ge1520ov24904238;
extern T0* ge1520ov24904060;
extern T0* ge1520ov24903698;
extern T0* ge1520ov24904430;
extern T0* ge1520ov24904139;
extern T0* ge1520ov24903887;
extern T0* ge1520ov24904429;
extern T0* ge1520ov24903886;
extern T0* ge1520ov24904428;
extern T0* ge1520ov24903885;
extern T0* ge1520ov24904427;
extern T0* ge1520ov24903884;
extern T0* ge1520ov24904426;
extern T0* ge1520ov24903883;
extern T0* ge1520ov24904425;
extern T0* ge1520ov24904138;
extern T0* ge1520ov24903882;
extern T0* ge1521ov24920687;
extern T0* ge1521ov24920383;
extern T0* ge1520ov24904516;
extern T0* ge1520ov24904179;
extern T0* ge1520ov24903971;
extern T0* ge1520ov24904517;
extern T0* ge1520ov24903972;
extern T0* ge1520ov24904515;
extern T0* ge1520ov24904178;
extern T0* ge1520ov24903970;
extern T0* ge1520ov24904255;
extern T0* ge1520ov24904071;
extern T0* ge1520ov24903715;
extern T0* ge1520ov24904254;
extern T0* ge1520ov24903714;
extern T0* ge1520ov24904253;
extern T0* ge1520ov24904070;
extern T0* ge1520ov24903713;
extern T0* ge1520ov24904509;
extern T0* ge1520ov24903964;
extern T0* ge1520ov24904257;
extern T0* ge1520ov24903717;
extern T0* ge1520ov24904258;
extern T0* ge1520ov24903718;
extern T0* ge1520ov24904251;
extern T0* ge1520ov24904069;
extern T0* ge1520ov24903711;
extern T0* ge1520ov24904433;
extern T0* ge1520ov24904142;
extern T0* ge1520ov24903890;
extern T0* ge1520ov24904434;
extern T0* ge1520ov24903891;
extern T0* ge1520ov24904432;
extern T0* ge1520ov24904141;
extern T0* ge1520ov24903889;
extern T0* ge1521ov24920459;
extern T0* ge1521ov24920286;
extern T0* ge1521ov24920387;
extern T0* ge1521ov24920407;
extern T0* ge1521ov24920408;
extern T0* ge1521ov24920446;
extern T0* ge1521ov24920409;
extern T0* ge1521ov24920352;
extern T0* ge1521ov24920447;
extern T0* ge1521ov24920410;
extern T0* ge1521ov24920457;
extern T0* ge1521ov24920458;
extern T0* ge1521ov24920353;
extern T0* ge1521ov24920460;
extern T0* ge1520ov24904367;
extern T0* ge1520ov24903825;
extern T0* ge1520ov24904237;
extern T0* ge1520ov24903697;
extern T0* ge1520ov24904368;
extern T0* ge1520ov24904112;
extern T0* ge1520ov24903826;
extern T0* ge1520ov24904361;
extern T0* ge1520ov24904108;
extern T0* ge1520ov24903819;
extern T0* ge1520ov24904363;
extern T0* ge1520ov24904110;
extern T0* ge1520ov24903821;
extern T0* ge1520ov24904362;
extern T0* ge1520ov24904109;
extern T0* ge1520ov24903820;
extern T0* ge1520ov24904504;
extern T0* ge1520ov24903959;
extern T0* ge1520ov24904403;
extern T0* ge1520ov24904125;
extern T0* ge1520ov24903860;
extern T0* ge1520ov24904287;
extern T0* ge1520ov24904088;
extern T0* ge1520ov24903747;
extern T0* ge1520ov24904288;
extern T0* ge1520ov24903748;
extern T0* ge1520ov24904404;
extern T0* ge1520ov24903861;
extern T0* ge1520ov24904405;
extern T0* ge1520ov24903862;
extern T0* ge1520ov24904289;
extern T0* ge1520ov24903749;
extern T0* ge1520ov24904295;
extern T0* ge1520ov24903755;
extern T0* ge1521ov24920349;
extern T0* ge1521ov24920676;
extern T0* ge1521ov24920496;
extern T0* ge1521ov24920684;
extern T0* ge1290ov21136447;
extern T0* ge1290ov21136450;
extern T0* ge1284ov21037065;
extern T0* ge1290ov21136449;
extern T0* ge1284ov21037066;
extern T0* ge1521ov24920658;
extern T0* ge1521ov24920627;
extern T0* ge1521ov24920628;
extern T0* ge1521ov24920350;
extern T0* ge1520ov24904406;
extern T0* ge1520ov24904126;
extern T0* ge1520ov24903863;
extern T0* ge1521ov24920326;
extern T0* ge1520ov24904402;
extern T0* ge1520ov24904124;
extern T0* ge1520ov24903859;
extern T0* ge1520ov24904401;
extern T0* ge1520ov24903858;
extern T0* ge1520ov24904501;
extern T0* ge1520ov24903956;
extern T0* ge1520ov24904499;
extern T0* ge1520ov24903954;
extern T0* ge1520ov24904239;
extern T0* ge1520ov24904061;
extern T0* ge1520ov24903699;
extern T0* ge1520ov24904240;
extern T0* ge1520ov24904062;
extern T0* ge1520ov24903700;
extern T0* ge1520ov24904552;
extern T0* ge1520ov24904196;
extern T0* ge1520ov24904007;
extern T0* ge1521ov24920332;
extern T0* ge1521ov24920335;
extern T0* ge1521ov24920629;
extern T0* ge1521ov24920540;
extern T0* ge1521ov24920205;
extern T0* ge1521ov24920308;
extern T0* ge1521ov24920613;
extern T0* ge1521ov24920612;
extern T0* ge1521ov24920586;
extern T0* ge1521ov24920585;
extern T0* ge1521ov24920584;
extern T0* ge1521ov24920583;
extern T0* ge1521ov24920582;
extern T0* ge1521ov24920581;
extern T0* ge1521ov24920580;
extern T0* ge1521ov24920579;
extern T0* ge1521ov24920578;
extern T0* ge1521ov24920577;
extern T0* ge1521ov24920576;
extern T0* ge1521ov24920575;
extern T0* ge1521ov24920574;
extern T0* ge1521ov24920573;
extern T0* ge1521ov24920572;
extern T0* ge1521ov24920571;
extern T0* ge1521ov24920570;
extern T0* ge1521ov24920569;
extern T0* ge1521ov24920568;
extern T0* ge1521ov24920567;
extern T0* ge1521ov24920566;
extern T0* ge1521ov24920565;
extern T0* ge1521ov24920564;
extern T0* ge1521ov24920563;
extern T0* ge1521ov24920561;
extern T0* ge1521ov24920560;
extern T0* ge1521ov24920559;
extern T0* ge1521ov24920558;
extern T0* ge1521ov24920557;
extern T0* ge1521ov24920556;
extern T0* ge1521ov24920445;
extern T0* ge1521ov24920439;
extern T0* ge1521ov24920377;
extern T0* ge1521ov24920487;
extern T0* ge1521ov24920360;
extern T0* ge1521ov24920648;
extern T0* ge1521ov24920646;
extern T0* ge1521ov24920630;
extern T0* ge1521ov24920375;
extern T0* ge1521ov24920394;
extern T0* ge1521ov24920324;
extern T0* ge1521ov24920678;
extern T0* ge1521ov24920423;
extern T0* ge1521ov24920420;
extern T0* ge1521ov24920519;
extern T0* ge1521ov24920536;
extern T0* ge1521ov24920518;
extern T0* ge1521ov24920535;
extern T0* ge1521ov24920517;
extern T0* ge1521ov24920534;
extern T0* ge1521ov24920494;
extern T0* ge1521ov24920289;
extern T0* ge1521ov24920516;
extern T0* ge1521ov24920533;
extern T0* ge1521ov24920515;
extern T0* ge1521ov24920532;
extern T0* ge1521ov24920514;
extern T0* ge1521ov24920531;
extern T0* ge1521ov24920513;
extern T0* ge1521ov24920530;
extern T0* ge1521ov24920511;
extern T0* ge1521ov24920528;
extern T0* ge1521ov24920510;
extern T0* ge1521ov24920527;
extern T0* ge1521ov24920509;
extern T0* ge1521ov24920526;
extern T0* ge1521ov24920508;
extern T0* ge1521ov24920525;
extern T0* ge1521ov24920507;
extern T0* ge1521ov24920524;
extern T0* ge1521ov24920506;
extern T0* ge1521ov24920523;
extern T0* ge1521ov24920505;
extern T0* ge1521ov24920522;
extern T0* ge1521ov24920393;
extern T0* ge1521ov24920362;
extern T0* ge1521ov24920643;
extern T0* ge1521ov24920318;
extern T0* ge1521ov24920316;
extern T0* ge1521ov24920307;
extern T0* ge1521ov24920306;
extern T0* ge1521ov24920305;
extern T0* ge1521ov24920304;
extern T0* ge1521ov24920303;
extern T0* ge1521ov24920419;
extern T0* ge1521ov24920301;
extern T0* ge1521ov24920319;
extern T0* ge1521ov24920293;
extern T0* ge1521ov24920291;
extern T0* ge1521ov24920338;
extern T0* ge1521ov24920381;
extern T0* ge1521ov24920380;
extern T0* ge1521ov24920588;
extern T0* ge1521ov24920483;
extern T0* ge1521ov24920538;
extern T0* ge1521ov24920537;
extern T0* ge1521ov24920521;
extern T0* ge1521ov24920520;
extern T0* ge1521ov24920504;
extern T0* ge1521ov24920503;
extern T0* ge1521ov24920499;
extern T0* ge1521ov24920500;
extern T0* ge1521ov24920493;
extern T0* ge1521ov24920492;
extern T0* ge1521ov24920491;
extern T0* ge1521ov24920657;
extern T0* ge1521ov24920488;
extern T0* ge1521ov24920481;
extern T0* ge1521ov24920480;
extern T0* ge1521ov24920477;
extern T0* ge1521ov24920471;
extern T0* ge1521ov24920468;
extern T0* ge1521ov24920467;
extern T0* ge1521ov24920466;
extern T0* ge1521ov24920465;
extern T0* ge1521ov24920464;
extern T0* ge1521ov24920463;
extern T0* ge1521ov24920462;
extern T0* ge1521ov24920461;
extern T0* ge1521ov24920433;
extern T0* ge1521ov24920434;
extern T0* ge1521ov24920430;
extern T0* ge1521ov24920432;
extern T0* ge1521ov24920431;
extern T0* ge1521ov24920429;
extern T0* ge1521ov24920427;
extern T0* ge1521ov24920428;
extern T0* ge1521ov24920426;
extern T0* ge1521ov24920425;
extern T0* ge1521ov24920424;
extern T0* ge1521ov24920422;
extern T0* ge1521ov24920421;
extern T0* ge1521ov24920418;
extern T0* ge1521ov24920417;
extern T0* ge1521ov24920416;
extern T0* ge1521ov24920415;
extern T0* ge1521ov24920414;
extern T0* ge1521ov24920413;
extern T0* ge1521ov24920412;
extern T0* ge1521ov24920411;
extern T0* ge1521ov24920399;
extern T0* ge1521ov24920397;
extern T0* ge1521ov24920396;
extern T0* ge1521ov24920395;
extern T0* ge1521ov24920392;
extern T0* ge1521ov24920391;
extern T0* ge1521ov24920390;
extern T0* ge1521ov24920389;
extern T0* ge1521ov24920388;
extern T0* ge1521ov24920398;
extern T0* ge1521ov24920485;
extern T0* ge1521ov24920484;
extern T0* ge1521ov24920482;
extern T0* ge1521ov24920368;
extern T0* ge1521ov24920367;
extern T0* ge1521ov24920366;
extern T0* ge1521ov24920365;
extern T0* ge1521ov24920364;
extern T0* ge1521ov24920363;
extern T0* ge1521ov24920348;
extern T0* ge1521ov24920347;
extern T0* ge1521ov24920345;
extern T0* ge1521ov24920486;
extern T0* ge1521ov24920400;
extern T0* ge1521ov24920356;
extern T0* ge1521ov24920355;
extern T0* ge1521ov24920359;
extern T0* ge1521ov24920358;
extern T0* ge1521ov24920357;
extern T0* ge1521ov24920361;
extern T0* ge1521ov24920435;
extern T0* ge1521ov24920344;
extern T0* ge1521ov24920343;
extern T0* ge1521ov24920647;
extern T0* ge1521ov24920655;
extern T0* ge1521ov24920512;
extern T0* ge1521ov24920529;
extern T0* ge1521ov24920449;
extern T0* ge1521ov24920448;
extern T0* ge1521ov24920611;
extern T0* ge1521ov24920374;
extern T0* ge1521ov24920610;
extern T0* ge1521ov24920339;
extern T0* ge1521ov24920595;
extern T0* ge1520ov24904365;
extern T0* ge1520ov24903823;
extern T0* ge1520ov24904595;
extern T0* ge1520ov24904222;
extern T0* ge1520ov24904050;
extern T0* ge1520ov24904545;
extern T0* ge1520ov24904193;
extern T0* ge1520ov24904000;
extern T0* ge1520ov24904597;
extern T0* ge1520ov24904052;
extern T0* ge1520ov24904548;
extern T0* ge1520ov24904003;
extern T0* ge1521ov24920450;
extern T0* ge1521ov24920402;
extern T0* ge1521ov24920401;
extern T0* ge1520ov24904596;
extern T0* ge1520ov24904051;
extern T0* ge1520ov24904547;
extern T0* ge1520ov24904002;
extern T0* ge1520ov24904455;
extern T0* ge1520ov24904149;
extern T0* ge1520ov24903912;
extern T0* ge1520ov24904443;
extern T0* ge1520ov24904147;
extern T0* ge1520ov24903900;
extern T0* ge1520ov24904442;
extern T0* ge1520ov24903899;
extern T0* ge1520ov24904441;
extern T0* ge1520ov24904146;
extern T0* ge1520ov24903898;
extern T0* ge1520ov24904440;
extern T0* ge1520ov24903897;
extern T0* ge1520ov24904439;
extern T0* ge1520ov24904145;
extern T0* ge1520ov24903896;
extern T0* ge1520ov24904438;
extern T0* ge1520ov24903895;
extern T0* ge1520ov24904526;
extern T0* ge1520ov24903981;
extern T0* ge1520ov24904452;
extern T0* ge1520ov24904148;
extern T0* ge1520ov24903909;
extern T0* ge1520ov24904450;
extern T0* ge1520ov24903907;
extern T0* ge1520ov24904448;
extern T0* ge1520ov24903905;
extern T0* ge1520ov24904445;
extern T0* ge1520ov24903902;
extern T0* ge1520ov24904444;
extern T0* ge1520ov24903901;
extern T0* ge1520ov24904472;
extern T0* ge1520ov24903929;
extern T0* ge1520ov24904467;
extern T0* ge1520ov24904157;
extern T0* ge1520ov24903924;
extern T0* ge1520ov24904510;
extern T0* ge1520ov24903965;
extern T0* ge1520ov24904454;
extern T0* ge1520ov24903911;
extern T0* ge1520ov24904536;
extern T0* ge1520ov24904186;
extern T0* ge1520ov24903991;
extern T0* ge1520ov24904534;
extern T0* ge1520ov24904185;
extern T0* ge1520ov24903989;
extern T0* ge956ov15958018;
extern T0* ge1520ov24904533;
extern T0* ge1520ov24903988;
extern T0* ge1520ov24904537;
extern T0* ge1520ov24903992;
extern T0* ge1520ov24904535;
extern T0* ge1520ov24903990;
extern T0* ge1520ov24904453;
extern T0* ge1520ov24903910;
extern T0* ge1520ov24904451;
extern T0* ge1520ov24903908;
extern T0* ge1520ov24904449;
extern T0* ge1520ov24903906;
extern T0* ge1520ov24904447;
extern T0* ge1520ov24903904;
extern T0* ge1520ov24904446;
extern T0* ge1520ov24903903;
extern T0* ge1520ov24904476;
extern T0* ge1520ov24904162;
extern T0* ge1520ov24903933;
extern T0* ge1520ov24904478;
extern T0* ge1520ov24904163;
extern T0* ge1520ov24903935;
extern T0* ge1520ov24904468;
extern T0* ge1520ov24903925;
extern T0* ge1521ov24920384;
extern T0* ge1521ov24920456;
extern T0* ge1521ov24920495;
extern T0* ge1521ov24920650;
extern T0* ge1521ov24920670;
extern T0* ge1521ov24920662;
extern T0* ge1521ov24920334;
extern T0* ge1521ov24920438;
extern T0* ge1521ov24920342;
extern T0* ge1521ov24920671;
extern T0* ge1520ov24904306;
extern T0* ge1520ov24903766;
extern T0* ge1520ov24904431;
extern T0* ge1520ov24904140;
extern T0* ge1520ov24903888;
extern T0* ge1520ov24904528;
extern T0* ge1520ov24904182;
extern T0* ge1520ov24903983;
extern T0* ge1520ov24904527;
extern T0* ge1520ov24903982;
extern T0* ge1520ov24904523;
extern T0* ge1520ov24904180;
extern T0* ge1520ov24903978;
extern T0* ge1520ov24904522;
extern T0* ge1520ov24903977;
extern T0* ge1520ov24904521;
extern T0* ge1520ov24903976;
extern T0* ge1520ov24904520;
extern T0* ge1520ov24903975;
extern T0* ge1520ov24904519;
extern T0* ge1520ov24903974;
extern T0* ge1520ov24904518;
extern T0* ge1520ov24903973;
extern T0* ge1520ov24904524;
extern T0* ge1520ov24903979;
extern T0* ge1520ov24904233;
extern T0* ge1520ov24904057;
extern T0* ge1520ov24903693;
extern T0* ge1520ov24904542;
extern T0* ge1520ov24904190;
extern T0* ge1520ov24903997;
extern T0* ge1521ov24920651;
extern T0* ge1521ov24920652;
extern T0* ge1521ov24920331;
extern T0* ge1521ov24920644;
extern T0* ge1520ov24904290;
extern T0* ge1520ov24903754;
extern T0* ge1520ov24904292;
extern T0* ge1520ov24903752;
extern T0* ge1520ov24903750;
extern T0* ge1290ov21136266;
extern T0* ge1520ov24904508;
extern T0* ge1520ov24903963;
extern T0* ge1520ov24904302;
extern T0* ge1520ov24904093;
extern T0* ge1520ov24903762;
extern T0* ge1520ov24904506;
extern T0* ge1520ov24903961;
extern T0* ge1520ov24904252;
extern T0* ge1520ov24903712;
extern T0* ge1520ov24904546;
extern T0* ge1520ov24904001;
extern T0* ge1520ov24904551;
extern T0* ge1520ov24904195;
extern T0* ge1520ov24904006;
extern T0* ge1520ov24904549;
extern T0* ge1520ov24904194;
extern T0* ge1520ov24904004;
extern T0* ge1520ov24904544;
extern T0* ge1520ov24904192;
extern T0* ge1520ov24903999;
extern T0* ge1520ov24904543;
extern T0* ge1520ov24904191;
extern T0* ge1520ov24903998;
extern T0* ge1521ov24920440;
extern T0* ge1521ov24920638;
extern T0* ge1521ov24920346;
extern T0* ge1520ov24904393;
extern T0* ge1520ov24903850;
extern T0* ge1520ov24904436;
extern T0* ge1520ov24904143;
extern T0* ge1520ov24903893;
extern T0* ge1520ov24904437;
extern T0* ge1520ov24904144;
extern T0* ge1520ov24903894;
extern T0* ge1520ov24904435;
extern T0* ge1520ov24903892;
extern T0* ge1520ov24904511;
extern T0* ge1520ov24903966;
extern T0* ge1520ov24904411;
extern T0* ge1520ov24903868;
extern T0* ge1520ov24904578;
extern T0* ge1520ov24904215;
extern T0* ge1520ov24904033;
extern T0* ge1520ov24904576;
extern T0* ge1520ov24904031;
extern T0* ge1520ov24904577;
extern T0* ge1520ov24904032;
extern T0* ge1520ov24904541;
extern T0* ge1520ov24903996;
extern T0* ge1521ov24920451;
extern T0* ge1520ov24904304;
extern T0* ge1520ov24903764;
extern T0* ge1520ov24904507;
extern T0* ge1520ov24903962;
extern T0* ge1521ov24920633;
extern T0* ge1521ov24920443;
extern T0* ge1521ov24920444;
extern T0* ge1521ov24920649;
extern T0* ge1521ov24920660;
extern T0* ge1521ov24920333;
extern T0* ge1521ov24920680;
extern T0* ge1521ov24920341;
extern T0* ge1521ov24920469;
extern T0* ge1521ov24920634;
extern T0* ge1521ov24920587;
extern T0* ge1520ov24904503;
extern T0* ge1520ov24903958;
extern T0* ge1520ov24904473;
extern T0* ge1520ov24904160;
extern T0* ge1520ov24903930;
extern T0* ge1520ov24904474;
extern T0* ge1520ov24904161;
extern T0* ge1520ov24903931;
extern T0* ge1520ov24904470;
extern T0* ge1520ov24903927;
extern T0* ge1521ov24920474;
extern T0* ge1521ov24920454;
extern T0* ge1521ov24920455;
extern T0* ge1521ov24920498;
extern T0* ge1521ov24920489;
extern T0* ge1520ov24904305;
extern T0* ge1520ov24903765;
extern T0* ge1520ov24904464;
extern T0* ge1520ov24904156;
extern T0* ge1520ov24903921;
extern T0* ge1520ov24904462;
extern T0* ge1520ov24904154;
extern T0* ge1520ov24903919;
extern T0* ge1520ov24904463;
extern T0* ge1520ov24903920;
extern T0* ge1520ov24904461;
extern T0* ge1520ov24904153;
extern T0* ge1520ov24903918;
extern T0* ge1520ov24904459;
extern T0* ge1520ov24904152;
extern T0* ge1520ov24903916;
extern T0* ge1520ov24904460;
extern T0* ge1520ov24903917;
extern T0* ge1520ov24904457;
extern T0* ge1520ov24904151;
extern T0* ge1520ov24903914;
extern T0* ge1520ov24904458;
extern T0* ge1520ov24903915;
extern T0* ge1520ov24904456;
extern T0* ge1520ov24904150;
extern T0* ge1520ov24903913;
extern T0* ge1520ov24904502;
extern T0* ge1520ov24903957;
extern T0* ge1520ov24904538;
extern T0* ge1520ov24904187;
extern T0* ge1520ov24903993;
extern T0* ge1520ov24904307;
extern T0* ge1520ov24903767;
extern T0* ge1520ov24904266;
extern T0* ge1520ov24904075;
extern T0* ge1520ov24903726;
extern T0* ge1520ov24904265;
extern T0* ge1520ov24903725;
extern T0* ge1520ov24904271;
extern T0* ge1520ov24903731;
extern T0* ge1520ov24904268;
extern T0* ge1520ov24904076;
extern T0* ge1520ov24903728;
extern T0* ge1520ov24904269;
extern T0* ge1520ov24903729;
extern T0* ge1520ov24904416;
extern T0* ge1520ov24903873;
extern T0* ge1520ov24904267;
extern T0* ge1520ov24903727;
extern T0* ge1520ov24904281;
extern T0* ge1520ov24903741;
extern T0* ge1520ov24904270;
extern T0* ge1520ov24904077;
extern T0* ge1520ov24903730;
extern T0* ge1520ov24904275;
extern T0* ge1520ov24904079;
extern T0* ge1520ov24903735;
extern T0* ge1520ov24904273;
extern T0* ge1520ov24903733;
extern T0* ge1520ov24904274;
extern T0* ge1520ov24903734;
extern T0* ge1520ov24904424;
extern T0* ge1520ov24904137;
extern T0* ge1520ov24903881;
extern T0* ge1520ov24904421;
extern T0* ge1520ov24904134;
extern T0* ge1520ov24903878;
extern T0* ge1520ov24904420;
extern T0* ge1520ov24903877;
extern T0* ge1520ov24904422;
extern T0* ge1520ov24904135;
extern T0* ge1520ov24903879;
extern T0* ge1520ov24904276;
extern T0* ge1520ov24904080;
extern T0* ge1520ov24903736;
extern T0* ge1520ov24904282;
extern T0* ge1520ov24904084;
extern T0* ge1520ov24903742;
extern T0* ge1520ov24904413;
extern T0* ge1520ov24904130;
extern T0* ge1520ov24903870;
extern T0* ge1520ov24904399;
extern T0* ge1520ov24904122;
extern T0* ge1520ov24903856;
extern T0* ge1520ov24904423;
extern T0* ge1520ov24904136;
extern T0* ge1520ov24903880;
extern T0* ge1520ov24904279;
extern T0* ge1520ov24904082;
extern T0* ge1520ov24903739;
extern T0* ge1520ov24904286;
extern T0* ge1520ov24904087;
extern T0* ge1520ov24903746;
extern T0* ge1520ov24904414;
extern T0* ge1520ov24904131;
extern T0* ge1520ov24903871;
extern T0* ge1520ov24904412;
extern T0* ge1520ov24904129;
extern T0* ge1520ov24903869;
extern T0* ge1520ov24904400;
extern T0* ge1520ov24904123;
extern T0* ge1520ov24903857;
extern T0* ge1520ov24904415;
extern T0* ge1520ov24903872;
extern T0* ge1290ov21136276;
extern T0* ge1511ov24756230;
extern T0* ge1511ov24756228;
extern T0* ge1511ov24756226;
extern T0* ge1510ov24739853;
extern T0* ge1510ov24739848;
extern T0* ge1510ov24739843;
extern T0* ge1520ov24904566;
extern T0* ge1520ov24904210;
extern T0* ge1520ov24904021;
extern T0* ge1290ov21136271;
extern T0* ge1290ov21136315;
extern T0* ge1290ov21136267;
extern T0* ge1290ov21136270;
extern T0* ge1290ov21136329;
extern T0* ge1290ov21136314;
extern T0* ge1290ov21136290;
extern T0* ge1290ov21136316;
extern T0* ge1290ov21136330;
extern T0* ge1290ov21136274;
extern T0* ge1290ov21136286;
extern T0* ge1290ov21136289;
extern T0* ge1290ov21136337;
extern T0* ge1290ov21136283;
extern T0* ge1290ov21136280;
extern T0* ge1290ov21136310;
extern T0* ge1290ov21136299;
extern T0* ge1290ov21136323;
extern T0* ge1290ov21136279;
extern T0* ge1290ov21136335;
extern T0* ge1290ov21136306;
extern T0* ge1290ov21136293;
extern T0* ge1290ov21136322;
extern T0* ge1517ov24854531;
extern T0* ge1517ov24854530;
extern T0* ge1290ov21136309;
extern T0* ge1290ov21136272;
extern T0* ge1290ov21136298;
extern T0* ge1290ov21136282;
extern T0* ge1290ov21136319;
extern T0* ge1290ov21136273;
extern T0* ge1290ov21136295;
extern T0* ge1290ov21136321;
extern T0* ge1520ov24904565;
extern T0* ge1520ov24904020;
extern T0* ge1290ov21136312;
extern T0* ge1532ov25100339;
extern T0* ge1290ov21136396;
extern T0* ge1290ov21136399;
extern T0* ge1290ov21136400;
extern T0* ge1290ov21136405;
extern T0* ge1290ov21136411;
extern T0* ge1290ov21136414;
extern T0* ge1290ov21135914;
extern T0* ge1290ov21135920;
extern T0* ge1290ov21135948;
extern T0* ge1290ov21135960;
extern T0* ge1290ov21135989;
extern T0* ge1290ov21136023;
extern T0* ge1290ov21136024;
extern T0* ge1290ov21136026;
extern T0* ge1290ov21136029;
extern T0* ge1290ov21136031;
extern T0* ge1290ov21136061;
extern T0* ge1290ov21136116;
extern T0* ge1290ov21136118;
extern T0* ge1290ov21136119;
extern T0* ge1290ov21136122;
extern T0* ge1290ov21136124;
extern T0* ge1290ov21136142;
extern T0* ge1290ov21136144;
extern T0* ge1290ov21136151;
extern T0* ge1290ov21136195;
extern T0* ge1290ov21136205;
extern T0* ge1290ov21136225;
extern T0* ge1290ov21136235;
extern T0* ge1290ov21136241;
extern T0* ge1290ov21136246;
extern T0* ge1290ov21136258;
extern T0* ge1290ov21136261;
extern T0* ge1290ov21136264;
extern T0* ge1290ov21136265;
extern T0* ge1290ov21136268;
extern T0* ge1290ov21136269;
extern T0* ge1290ov21136277;
extern T0* ge1290ov21136284;
extern T0* ge1290ov21136285;
extern T0* ge1290ov21136291;
extern T0* ge1290ov21136296;
extern T0* ge1290ov21136297;
extern T0* ge1290ov21136300;
extern T0* ge1290ov21136301;
extern T0* ge1290ov21136302;
extern T0* ge1290ov21136303;
extern T0* ge1290ov21136305;
extern T0* ge1290ov21136311;
extern T0* ge1290ov21136313;
extern T0* ge1290ov21136324;
extern T0* ge1290ov21136325;
extern T0* ge1290ov21136326;
extern T0* ge1290ov21136328;
extern T0* ge1290ov21136331;
extern T0* ge1290ov21136332;
extern T0* ge1290ov21136334;
extern T0* ge1290ov21136336;
extern T0* ge1290ov21136338;
extern T0* ge498ov8159244;
extern T0* ge1532ov25100360;
extern T0* ge1520ov24904395;
extern T0* ge1520ov24904106;
extern T0* ge1520ov24903852;
extern T0* ge1520ov24904245;
extern T0* ge1520ov24904066;
extern T0* ge1520ov24903705;
extern T0* ge1520ov24904244;
extern T0* ge1520ov24904065;
extern T0* ge1520ov24903704;
extern T0* ge1520ov24904553;
extern T0* ge1520ov24904197;
extern T0* ge1520ov24904008;
extern T0* ge1520ov24904397;
extern T0* ge1520ov24904107;
extern T0* ge1520ov24903854;
extern T0* ge1520ov24904556;
extern T0* ge1520ov24904201;
extern T0* ge1520ov24904011;
extern T0* ge1520ov24904555;
extern T0* ge1520ov24904200;
extern T0* ge1520ov24904010;
extern T0* ge1520ov24904394;
extern T0* ge1520ov24904120;
extern T0* ge1520ov24903851;
extern T0* ge1520ov24904396;
extern T0* ge1520ov24903853;
extern T0* ge1520ov24904384;
extern T0* ge1520ov24904118;
extern T0* ge1520ov24903841;
extern T0* ge1520ov24904383;
extern T0* ge1520ov24903840;
extern T0* ge1520ov24904385;
extern T0* ge1520ov24903842;
extern T0* ge1520ov24904386;
extern T0* ge1520ov24903843;
extern T0* ge1520ov24904374;
extern T0* ge1520ov24903832;
extern T0* ge1520ov24904328;
extern T0* ge1520ov24903788;
extern T0* ge1520ov24904327;
extern T0* ge1520ov24903787;
extern T0* ge1520ov24904342;
extern T0* ge1520ov24903802;
extern T0* ge1520ov24904335;
extern T0* ge1520ov24903795;
extern T0* ge1520ov24904381;
extern T0* ge1520ov24904117;
extern T0* ge1520ov24903839;
extern T0* ge1520ov24904380;
extern T0* ge1520ov24903838;
extern T0* ge1520ov24904326;
extern T0* ge1520ov24903786;
extern T0* ge1520ov24904354;
extern T0* ge1520ov24903814;
extern T0* ge1520ov24904325;
extern T0* ge1520ov24903785;
extern T0* ge1520ov24904353;
extern T0* ge1520ov24903813;
extern T0* ge1520ov24904341;
extern T0* ge1520ov24903801;
extern T0* ge1520ov24904352;
extern T0* ge1520ov24903812;
extern T0* ge1520ov24904334;
extern T0* ge1520ov24903794;
extern T0* ge1520ov24904351;
extern T0* ge1520ov24903811;
extern T0* ge1520ov24904376;
extern T0* ge1520ov24903834;
extern T0* ge1520ov24904379;
extern T0* ge1520ov24903837;
extern T0* ge1520ov24904378;
extern T0* ge1520ov24903836;
extern T0* ge1520ov24904377;
extern T0* ge1520ov24903835;
extern T0* ge396ov6488074;
extern T0* ge1521ov24920369;
extern T0* ge1521ov24920376;
extern T0* ge1521ov24920470;
extern T0* ge1521ov24920405;
extern T0* ge1521ov24920437;
extern T0* ge1521ov24920490;
extern T0* ge1521ov24920562;
extern T0* ge1521ov24920406;
extern T0* ge1521ov24920452;
extern T0* ge1521ov24920590;
extern T0* ge1521ov24920403;
extern T0* ge1521ov24920372;
extern T0* ge1521ov24920547;
extern T0* ge1521ov24920656;
extern T0* ge1521ov24920608;
extern T0* ge1521ov24920609;
extern T0* ge1521ov24920604;
extern T0* ge1521ov24920591;
extern T0* ge1521ov24920592;
extern T0* ge1521ov24920593;
extern T0* ge1521ov24920596;
extern T0* ge1521ov24920597;
extern T0* ge1521ov24920598;
extern T0* ge1521ov24920599;
extern T0* ge1521ov24920600;
extern T0* ge1521ov24920601;
extern T0* ge1521ov24920602;
extern T0* ge1521ov24920603;
extern T0* ge1521ov24920605;
extern T0* ge1521ov24920606;
extern T0* ge1521ov24920607;
extern T0* ge1521ov24920594;
extern T0* ge1521ov24920325;
extern T0* ge1521ov24920404;
extern T0* ge1521ov24920373;
extern T0* ge1521ov24920378;
extern T0* ge1521ov24920453;
extern T0* ge1521ov24920441;
extern T0* ge1521ov24920502;
extern T0* ge1521ov24920637;
extern T0* ge1521ov24920442;
extern T0* ge1521ov24920501;
extern T0* ge1521ov24920473;
extern T0* ge1521ov24920472;
extern T0* ge1521ov24920479;
extern T0* ge1521ov24920478;
extern T0* ge414ov6307841;
extern T0* ge1521ov24920290;
extern T0* ge1521ov24920683;
extern T0* ge1521ov24920320;
extern T0* ge1521ov24920314;
extern T0* ge1521ov24920313;
extern T0* ge1521ov24920312;
extern T0* ge1521ov24920311;
extern T0* ge1521ov24920302;
extern T0* ge1521ov24920300;
extern T0* ge1521ov24920299;
extern T0* ge1521ov24920295;
extern T0* ge1521ov24920317;
extern T0* ge1521ov24920310;
extern T0* ge1521ov24920298;
extern T0* ge1521ov24920327;
extern T0* ge1518ov24870929;
extern T0* ge1518ov24870923;
extern T0* ge1518ov24870917;
extern T0* ge1518ov24870925;
extern T0* ge1518ov24870919;
extern T0* ge1518ov24870913;
extern T0* ge1518ov24870928;
extern T0* ge1518ov24870922;
extern T0* ge1518ov24870916;
extern T0* ge1518ov24870930;
extern T0* ge1518ov24870924;
extern T0* ge1518ov24870918;
extern T0* ge1518ov24870927;
extern T0* ge1518ov24870921;
extern T0* ge1518ov24870915;
extern T0* ge1520ov24904564;
extern T0* ge1520ov24904209;
extern T0* ge1520ov24904019;
extern T0* ge1520ov24904561;
extern T0* ge1520ov24904206;
extern T0* ge1520ov24904016;
extern T0* ge1520ov24904560;
extern T0* ge1520ov24904205;
extern T0* ge1520ov24904015;
extern T0* ge1518ov24870926;
extern T0* ge1518ov24870920;
extern T0* ge1518ov24870914;
extern T0* ge1519ov24887306;
extern T0* ge1519ov24887302;
extern T0* ge1519ov24887301;
extern T0* ge1519ov24887305;
extern T0* ge1519ov24887300;
extern T0* ge1519ov24887304;
extern T0* ge1519ov24887299;
extern T0* ge1519ov24887303;
extern T0* ge1519ov24887298;
extern T0* ge1683ov27574289;
extern T0* ge1691ov27705367;
extern T0* ge542ov8880132;
extern T0* ge1510ov24739852;
extern T0* ge1510ov24739847;
extern T0* ge1510ov24739842;
extern T0* ge1178ov19300403;
extern T0* ge1178ov19300404;
extern T0* ge855ov14008330;
extern T0* ge855ov14008331;
extern T0* ge855ov14008332;
extern T0* ge855ov14008341;
extern T0* ge809ov13254658;
extern T0* ge809ov13254665;
extern T0* ge809ov13254664;
extern T0* ge809ov13254659;
extern T0* ge809ov13254663;
extern T0* ge809ov13254660;
extern T0* ge809ov13254666;
extern T0* ge864ov14155786;
extern T0* ge864ov14155781;
extern T0* ge864ov14155791;
extern T0* ge864ov14155818;
extern T0* ge864ov14155802;
extern T0* ge864ov14155798;
extern T0* ge864ov14155799;
extern T0* ge883ov14467159;
extern T0* ge883ov14467129;
extern T0* ge883ov14467095;
extern T0* ge883ov14467132;
extern T0* ge883ov14467153;
extern T0* ge883ov14467118;
extern T0* ge883ov14467143;
extern T0* ge877ov14368834;
extern T0* ge877ov14368799;
extern T0* ge877ov14368843;
extern T0* ge877ov14368808;
extern T0* ge877ov14368826;
extern T0* ge877ov14368791;
extern T0* ge886ov14516296;
extern T0* ge886ov14516295;
extern T0* ge883ov14467102;
extern T0* ge883ov14467103;
extern T0* ge883ov14467075;
extern T0* ge883ov14467082;
extern T0* ge883ov14467086;
extern T0* ge883ov14467130;
extern T0* ge883ov14467104;
extern T0* ge883ov14467105;
extern T0* ge883ov14467106;
extern T0* ge883ov14467107;
extern T0* ge883ov14467108;
extern T0* ge883ov14467109;
extern T0* ge883ov14467110;
extern T0* ge883ov14467113;
extern T0* ge883ov14467135;
extern T0* ge883ov14467117;
extern T0* ge883ov14467121;
extern T0* ge883ov14467134;
extern T0* ge883ov14467138;
extern T0* ge883ov14467139;
extern T0* ge883ov14467140;
extern T0* ge883ov14467148;
extern T0* ge883ov14467149;
extern T0* ge883ov14467161;
extern T0* ge883ov14467162;
extern T0* ge883ov14467073;
extern T0* ge864ov14155796;
extern T0* ge855ov14008329;
extern T0* ge855ov14008340;
extern T0* ge855ov14008339;
extern T0* ge855ov14008367;
extern T0* ge855ov14008370;
extern T0* ge855ov14008369;
extern T0* ge855ov14008342;
extern T0* ge855ov14008358;
extern T0* ge855ov14008333;
extern T0* ge855ov14008327;
extern T0* ge809ov13254657;
extern T0* ge864ov14155785;
extern T0* ge864ov14155813;
extern T0* ge883ov14467120;
extern T0* ge883ov14467126;
extern T0* ge883ov14467146;
extern T0* ge883ov14467081;
extern T0* ge883ov14467142;
extern T0* ge883ov14467088;
extern T0* ge883ov14467092;
extern T0* ge883ov14467154;
extern T0* ge877ov14368832;
extern T0* ge877ov14368797;
extern T0* ge877ov14368829;
extern T0* ge877ov14368794;
extern T0* ge883ov14467160;
extern T0* ge864ov14155787;
extern T0* ge864ov14155825;
extern T0* ge864ov14155831;
extern T0* ge864ov14155835;
extern T0* ge864ov14155826;
extern T0* ge883ov14467074;
extern T0* ge883ov14467083;
extern T0* ge883ov14467111;
extern T0* ge883ov14467119;
extern T0* ge883ov14467091;
extern T0* ge883ov14467084;
extern T0* ge883ov14467147;
extern T0* ge883ov14467163;
extern T0* ge883ov14467098;
extern T0* ge883ov14467141;
extern T0* ge883ov14467157;
extern T0* ge883ov14467085;
extern T0* ge883ov14467112;
extern T0* ge883ov14467133;
extern T0* ge883ov14467131;
extern T0* ge877ov14368827;
extern T0* ge877ov14368792;
extern T0* ge883ov14467090;
extern T0* ge883ov14467164;
extern T0* ge883ov14467093;
extern T0* ge883ov14467096;
extern T0* ge883ov14467097;
extern T0* ge883ov14467128;
extern T0* ge883ov14467137;
extern T0* ge883ov14467125;
extern T0* ge883ov14467123;
extern T0* ge883ov14467155;
extern T0* ge883ov14467089;
extern T0* ge883ov14467127;
extern T0* ge877ov14368816;
extern T0* ge877ov14368781;
extern T0* ge877ov14368815;
extern T0* ge877ov14368780;
extern T0* ge877ov14368814;
extern T0* ge877ov14368779;
extern T0* ge877ov14368813;
extern T0* ge877ov14368778;
extern T0* ge877ov14368812;
extern T0* ge877ov14368777;
extern T0* ge883ov14467101;
extern T0* ge877ov14368831;
extern T0* ge877ov14368796;
extern T0* ge877ov14368833;
extern T0* ge877ov14368798;
extern T0* ge883ov14467122;
extern T0* ge883ov14467087;
extern T0* ge883ov14467150;
extern T0* ge883ov14467166;
extern T0* ge883ov14467080;
extern T0* ge883ov14467094;
extern T0* ge883ov14467165;
extern T0* ge855ov14008343;
extern T0* ge855ov14008362;
extern T0* ge855ov14008366;
extern T0* ge855ov14008371;
extern T0* ge855ov14008372;
extern T0* ge855ov14008347;
extern T0* ge883ov14467099;
extern T0* ge855ov14008360;
extern T0* ge883ov14467136;
extern T0* ge883ov14467158;
extern T0* ge883ov14467115;
extern T0* ge883ov14467144;
extern T0* ge883ov14467114;
extern T0* ge883ov14467100;
extern T0* ge883ov14467116;
extern T0* ge883ov14467151;
extern T0* ge883ov14467156;
extern T0* ge883ov14467076;
extern T0* ge883ov14467077;
extern T0* ge883ov14467078;
extern T0* ge883ov14467079;
extern T0* ge855ov14008334;
extern T0* ge855ov14008365;
extern T0* ge855ov14008345;
extern T0* ge855ov14008328;
extern T0* ge855ov14008335;
extern T0* ge855ov14008337;
extern T0* ge855ov14008338;
extern T0* ge855ov14008321;
extern T0* ge855ov14008322;
extern T0* ge855ov14008323;
extern T0* ge855ov14008324;
extern T0* ge855ov14008325;
extern T0* ge855ov14008326;
extern T0* ge855ov14008344;
extern T0* ge855ov14008346;
extern T0* ge855ov14008348;
extern T0* ge855ov14008349;
extern T0* ge855ov14008350;
extern T0* ge855ov14008351;
extern T0* ge855ov14008352;
extern T0* ge855ov14008353;
extern T0* ge855ov14008354;
extern T0* ge855ov14008355;
extern T0* ge855ov14008356;
extern T0* ge855ov14008357;
extern T0* ge864ov14155777;
extern T0* ge864ov14155778;
extern T0* ge864ov14155779;
extern T0* ge864ov14155780;
extern T0* ge864ov14155782;
extern T0* ge864ov14155783;
extern T0* ge864ov14155784;
extern T0* ge864ov14155821;
extern T0* ge864ov14155788;
extern T0* ge864ov14155789;
extern T0* ge864ov14155790;
extern T0* ge864ov14155795;
extern T0* ge864ov14155797;
extern T0* ge864ov14155800;
extern T0* ge864ov14155803;
extern T0* ge864ov14155822;
extern T0* ge864ov14155809;
extern T0* ge864ov14155810;
extern T0* ge864ov14155824;
extern T0* ge864ov14155812;
extern T0* ge864ov14155814;
extern T0* ge864ov14155815;
extern T0* ge864ov14155819;
extern T0* ge864ov14155820;
extern T0* ge877ov14368828;
extern T0* ge877ov14368793;
extern T0* ge877ov14368830;
extern T0* ge877ov14368795;
extern T0* ge877ov14368824;
extern T0* ge877ov14368789;
extern T0* ge809ov13254668;
extern T0* ge809ov13254661;
extern T0* ge809ov13254662;
extern T0* ge877ov14368818;
extern T0* ge877ov14368783;
extern T0* ge877ov14368817;
extern T0* ge877ov14368782;
extern T0* ge883ov14467152;
extern T0* ge883ov14467124;
extern T0* ge864ov14155838;
extern T0* ge864ov14155836;
extern T0* ge819ov13418501;
extern T0* ge819ov13418502;
extern T0* ge819ov13418503;
extern T0* ge864ov14155794;
extern T0* ge864ov14155827;
extern T0* ge864ov14155839;
extern T0* ge877ov14368835;
extern T0* ge877ov14368800;
extern T0* ge877ov14368836;
extern T0* ge877ov14368801;
extern T0* ge877ov14368837;
extern T0* ge877ov14368802;
extern T0* ge877ov14368825;
extern T0* ge877ov14368790;
extern T0* ge877ov14368838;
extern T0* ge877ov14368803;
extern T0* ge877ov14368811;
extern T0* ge877ov14368776;
extern T0* ge877ov14368840;
extern T0* ge877ov14368805;
extern T0* ge877ov14368841;
extern T0* ge877ov14368806;
extern T0* ge877ov14368842;
extern T0* ge877ov14368807;
extern T0* ge877ov14368839;
extern T0* ge877ov14368804;
extern T0* ge883ov14467145;
extern T0* ge877ov14368810;
extern T0* ge877ov14368775;
extern T0* ge877ov14368819;
extern T0* ge877ov14368784;
extern T0* ge877ov14368820;
extern T0* ge877ov14368785;
extern T0* ge877ov14368823;
extern T0* ge877ov14368788;
extern T0* ge877ov14368822;
extern T0* ge877ov14368787;
extern T0* ge877ov14368821;
extern T0* ge877ov14368786;
extern T0* ge1787ov29278250;
extern T0* ge1787ov29278212;
extern T0* ge1787ov29278210;
extern T0* ge1787ov29278251;
extern T0* ge1787ov29278223;
extern T0* ge1787ov29278222;
extern T0* ge1787ov29278233;
extern T0* ge1787ov29278227;
extern T0* ge1787ov29278226;
extern T0* ge1787ov29278225;
extern T0* ge1787ov29278231;
extern T0* ge1787ov29278230;
extern T0* ge1787ov29278232;
extern T0* ge1787ov29278209;
extern T0* ge1787ov29278235;
extern T0* ge1787ov29278244;
extern T0* ge1790ov29327387;
extern T0* ge1790ov29327385;
extern T0* ge1790ov29327386;
extern T0* ge1787ov29278245;
extern T0* ge1787ov29278246;
extern T0* ge1787ov29278249;
extern T0* ge1787ov29278247;
extern T0* ge1787ov29278248;
extern T0* ge1754ov28737549;
extern T0* ge1754ov28737548;
extern T0* ge1787ov29278242;
extern T0* ge1783ov29212673;
extern T0* ge1783ov29212674;
extern T0* ge1787ov29278215;
extern T0* ge1785ov29245444;
extern T0* ge1785ov29245446;
extern T0* ge1785ov29245443;
extern T0* ge1785ov29245445;
extern T0* ge1787ov29278238;
extern T0* ge1798ov29458449;
extern T0* ge1798ov29458448;
extern T0* ge1787ov29278258;
extern T0* ge1787ov29278259;
extern T0* ge1787ov29278260;
extern T0* ge1787ov29278253;
extern T0* ge1787ov29278236;
extern T0* ge1787ov29278237;
extern T0* ge1787ov29278239;
extern T0* ge1787ov29278243;
extern T0* ge1794ov29392916;
extern T0* ge1794ov29392915;
extern T0* ge1842ov30179329;
extern T0* ge748ov12255241;
extern T0* ge748ov12255237;
extern T0* ge748ov12255233;
extern T0* ge748ov12255235;
extern T0* ge746ov12222467;
extern T0* geic24920065;
extern T0* geic24920066;
extern T0* geic13271041;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const23(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2023, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE,EIF_INTEGER))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr),0)
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME name);

/*
 * Generate a temporary file with a name based on a template and
 * return a file descriptor to the file.
 * The template is overwritten with the name of the new file.
 * Return a non-zero file descriptor for the temporary file upon success, -1 otherwise.
 * `template'is the template to use for creating the temporary file.
 * It must match the rules for mk[s]temp (i.e. end in "XXXXXX").
 * On exit, it is updated with the new name.
 * `is_text_mode', if non-zero, then the temporary file is created
 * in text mode, otherwise in binary mode.<param>
 * Note: Code was inspired from https://github.com/mirror/mingw-w64/blob/master/mingw-w64-crt/misc/mkstemp.c
 */
extern EIF_INTEGER eif_file_mkstemp(EIF_FILENAME a_template, EIF_BOOLEAN is_text_mode);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v) != (v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))
#define GE_real_32_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_64_is_equal(v1,v2) ((v1) == (v1) ? (v1) == (v2) : (v2) != (v2))
#define GE_real_32_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_64_is_less(v1,v2) ((v1) == (v1) ? (v1) < (v2) : (v2) == (v2))
#define GE_real_32_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_64_ieee_is_equal(v1,v2) (v1) == (v2)
#define GE_real_32_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_64_ieee_is_greater(v1,v2) isgreater(v1,v2)
#define GE_real_32_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_64_ieee_is_greater_equal(v1,v2) isgreaterequal(v1,v2)
#define GE_real_32_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_64_ieee_is_less(v1,v2) isless(v1,v2)
#define GE_real_32_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_64_ieee_is_less_equal(v1,v2) islessequal(v1,v2)
#define GE_real_32_ieee_maximum_number(v1,v2) fmaxf(v1,v2)
#define GE_real_64_ieee_maximum_number(v1,v2) fmax(v1,v2)
#define GE_real_32_ieee_minimum_number(v1,v2) fminf(v1,v2)
#define GE_real_64_ieee_minimum_number(v1,v2) fmin(v1,v2)

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile ISE's compiler."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SIZE_H
#define EIF_SIZE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Basic sizes */
#define EIF_ALIGN	8	/* Alignment restrictions */
#define R64SIZ	8	/* Size of double */
#define I64SIZ	8	/* Size of integer 64 bits */
#define R32SIZ	4	/* Size of float */
#define REFSIZ	sizeof(char*)	/* Size of char* */
#define LNGSIZ	4	/* Size of long */
#define I16SIZ	2	/* Size of integer 16 bits */
#define CHRSIZ	1	/* Size of char */
#define PTRSIZ	sizeof(void*)	/* Size of a function pointer */

/* Macros used to access fields in the object */
#define REFACS(n) ((n)*REFSIZ)
#define CHRACS(n) ((n)*CHRSIZ)
#define I16ACS(n) ((n)*I16SIZ)
#define LNGACS(n) ((n)*LNGSIZ)
#define R32ACS(n) ((n)*R32SIZ)
#define I64ACS(n) ((n)*I64SIZ)
#define R64ACS(n) ((n)*R64SIZ)
#define PTRACS(n) ((n)*PTRSIZ)

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2019, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif
#ifndef EIF_SIZE_H
#include "eif_size.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_context* eif_globals = GE_current_context();
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		""Part of ISE Eiffel runtime. Needed to compile class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2018-2020, Eric Bezault and others"
	license: "MIT License"
*/

#ifndef EIF_SYSTEM_H
#define EIF_SYSTEM_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef EIF_WINDOWS
#include "Winbase.h"
#elif defined(EIF_VMS) || defined(EIF_MACOSX)
#include "sysctl.conf"
#else
#include <unistd.h>
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
